"""Code generated by `albert` version 0.0.0.

 * date: 2024-12-19T15:11:04.899053
 * python version: 3.10.15 (main, Sep  9 2024, 03:03:06) [GCC 13.2.0]
 * albert version: 0.0.0
 * caller: /opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/albert/code/einsum.py
 * node: fv-az1676-657
 * system: Linux
 * processor: x86_64
 * release: 6.8.0-1017-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        t2: 
        v: 

    Returns:
        e_cc: 
    """

    e_cc = einsum(v.ovov, (0, 1, 2, 3), t2, (0, 2, 1, 3), ()) * 2
    e_cc += einsum(v.ovov, (0, 1, 2, 3), t2, (0, 2, 3, 1), ()) * -1

    return e_cc

def update_amps(f=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t2: 
        v: 

    Returns:
        t2new: 
    """

    t2new = np.copy(np.transpose(v.ovov, (0, 2, 1, 3)))
    tmp0 = einsum(t2, (0, 1, 2, 3), v.ovov, (4, 5, 1, 3), (0, 4, 2, 5))
    t2new += np.transpose(tmp0, (1, 0, 3, 2)) * 2
    tmp1 = einsum(t2, (0, 1, 2, 3), v.ovov, (4, 5, 1, 2), (0, 4, 3, 5))
    t2new += np.transpose(tmp1, (1, 0, 3, 2)) * -1
    t2new += einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5)) * -1
    t2new += einsum(v.vvvv, (0, 1, 2, 3), t2, (4, 5, 1, 3), (4, 5, 0, 2))
    t2new += einsum(t2, (0, 1, 2, 3), v.oooo, (4, 0, 5, 1), (4, 5, 2, 3))
    tmp2 = einsum(tmp1, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp8 = np.copy(tmp2) * 2
    del tmp2
    tmp3 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1)))
    tmp3 += np.transpose(v.ovov, (0, 2, 1, 3)) * -0.5
    tmp4 = einsum(tmp3, (0, 1, 2, 3), t2, (0, 1, 4, 2), (4, 3))
    tmp5 = einsum(t2, (0, 1, 2, 3), tmp4, (4, 2), (0, 1, 3, 4))
    del tmp4
    tmp8 += np.transpose(tmp5, (1, 0, 2, 3))
    del tmp5
    tmp6 = einsum(t2, (0, 1, 2, 3), tmp3, (1, 4, 2, 3), (0, 4)) * 2
    del tmp3
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp6, (4, 1), (0, 4, 3, 2)) * 0.5
    del tmp6
    tmp8 += np.transpose(tmp7, (0, 1, 3, 2))
    del tmp7
    t2new += tmp8 * -1
    t2new += np.transpose(tmp8, (1, 0, 3, 2)) * -1
    del tmp8
    tmp9 = einsum(t2, (0, 1, 2, 3), f.oo, (4, 1), (4, 0, 2, 3))
    tmp11 = np.copy(tmp9)
    del tmp9
    tmp10 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 5, 2), (0, 4, 3, 5))
    tmp11 += tmp10
    del tmp10
    t2new += np.transpose(tmp11, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp11, (1, 0, 2, 3)) * -1
    del tmp11
    tmp12 = einsum(t2, (0, 1, 2, 3), f.vv, (4, 3), (0, 1, 4, 2))
    t2new += np.transpose(tmp12, (0, 1, 3, 2))
    t2new += np.transpose(tmp12, (1, 0, 2, 3))
    del tmp12
    tmp13 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * 0.5
    tmp13 += v.oovv * -0.25
    tmp13 += tmp0
    del tmp0
    t2new += einsum(tmp13, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2)) * 4
    del tmp13
    tmp14 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * -1
    tmp14 += tmp1
    del tmp1
    t2new += einsum(tmp14, (0, 1, 2, 3), t2, (4, 1, 3, 5), (4, 0, 5, 2))
    del tmp14

    return {"t2new": t2new}

