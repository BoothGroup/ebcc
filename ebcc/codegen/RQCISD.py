"""
Code generated by `albert`:
https://github.com/obackhouse/albert

  * date: 2024-08-09T21:54:52.369137
  * python version: 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
  * albert version: 0.0.0
  * caller: /opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/albert/codegen/einsum.py
  * node: fv-az1487-369
  * system: Linux
  * processor: x86_64
  * release: 6.5.0-1025-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-09T21:54:52.627478.

    Parameters
    ----------
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    e_cc : float
        Coupled cluster energy.
    """

    e_cc = einsum(v.ovov, (0, 1, 2, 3), t2, (0, 2, 1, 3), ()) * 2
    e_cc += einsum(v.ovov, (0, 1, 2, 3), t2, (0, 2, 3, 1), ()) * -1

    return e_cc

def update_amps(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-09T21:54:58.365637.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    t1new : array
        Updated T1 residuals.
    t2new : array
        Updated T2 residuals.
    """

    tmp18 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1)))
    tmp18 += np.transpose(v.ovov, (0, 2, 1, 3)) * -0.5
    tmp14 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * 2
    tmp14 += np.transpose(v.ovov, (0, 2, 1, 3)) * -1
    tmp21 = einsum(t2, (0, 1, 2, 3), tmp18, (1, 4, 2, 3), (0, 4)) * 2
    tmp19 = einsum(t2, (0, 1, 2, 3), tmp18, (0, 1, 4, 2), (3, 4))
    del tmp18
    tmp15 = einsum(t2, (0, 1, 2, 3), tmp14, (1, 4, 5, 3), (0, 4, 2, 5))
    del tmp14
    tmp9 = einsum(t2, (0, 1, 2, 3), v.ovov, (4, 5, 1, 2), (0, 4, 3, 5))
    t2new = np.copy(np.transpose(tmp9, (1, 0, 3, 2))) * -1
    tmp22 = einsum(t2, (0, 1, 2, 3), tmp21, (4, 1), (0, 4, 3, 2))
    del tmp21
    tmp20 = einsum(tmp19, (0, 1), t2, (2, 3, 1, 4), (2, 3, 4, 0)) * 2
    del tmp19
    tmp16 = einsum(t2, (0, 1, 2, 3), tmp15, (4, 1, 5, 2), (0, 4, 3, 5))
    tmp13 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 4), (2, 3, 1, 4))
    tmp11 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp10 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp1 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp3 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * -1
    tmp3 += np.transpose(v.ovov, (0, 2, 1, 3)) * 2
    tmp7 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * 2
    tmp7 += np.transpose(v.ovov, (0, 2, 1, 3)) * -1
    tmp27 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * -1
    tmp27 += tmp9
    del tmp9
    t2new += einsum(t2, (0, 1, 2, 3), tmp27, (4, 1, 5, 2), (0, 4, 3, 5))
    del tmp27
    tmp25 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * 2
    tmp25 += v.oovv * -1
    tmp25 += tmp15 * 2
    del tmp15
    t2new += einsum(tmp25, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    del tmp25
    tmp23 = np.copy(np.transpose(tmp20, (1, 0, 2, 3)))
    del tmp20
    tmp23 += np.transpose(tmp22, (0, 1, 3, 2))
    del tmp22
    t2new += np.transpose(tmp23, (1, 0, 3, 2)) * -1
    t2new += tmp23 * -1
    del tmp23
    tmp17 = np.copy(tmp13)
    del tmp13
    tmp17 += np.transpose(tmp16, (1, 0, 3, 2))
    del tmp16
    t2new += np.transpose(tmp17, (1, 0, 3, 2)) * -1
    t2new += tmp17 * -1
    del tmp17
    tmp26 = np.copy(v.oooo)
    tmp26 += einsum(t2, (0, 1, 2, 3), v.ovov, (4, 2, 5, 3), (4, 0, 5, 1))
    t2new += einsum(tmp26, (0, 1, 2, 3), t2, (0, 2, 4, 5), (1, 3, 4, 5))
    del tmp26
    tmp12 = np.copy(tmp10)
    del tmp10
    tmp12 += tmp11
    del tmp11
    t2new += np.transpose(tmp12, (1, 0, 2, 3))
    t2new += np.transpose(tmp12, (0, 1, 3, 2))
    del tmp12
    tmp28 = np.copy(v.oovv) * -1
    tmp28 += einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 1, 5), (4, 0, 5, 3))
    t2new += einsum(t2, (0, 1, 2, 3), tmp28, (4, 1, 5, 2), (4, 0, 3, 5))
    del tmp28
    tmp24 = einsum(t2, (0, 1, 2, 3), f.oo, (4, 1), (4, 0, 2, 3))
    t2new += np.transpose(tmp24, (1, 0, 2, 3)) * -1
    t2new += np.transpose(tmp24, (0, 1, 3, 2)) * -1
    del tmp24
    tmp6 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * 2
    tmp6 += v.oovv * -1
    t1new = einsum(tmp6, (0, 1, 2, 3), t1, (0, 2), (1, 3))
    del tmp6
    tmp0 = np.copy(v.ovvv) * -0.5
    tmp0 += np.transpose(v.ovvv, (0, 2, 1, 3))
    t1new += einsum(tmp0, (0, 1, 2, 3), t2, (4, 0, 1, 2), (4, 3)) * 2
    del tmp0
    tmp5 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -1
    tmp5 += t2 * 2
    tmp2 = np.copy(v.ooov)
    tmp2 += np.transpose(v.ooov, (0, 2, 1, 3)) * -0.5
    tmp2 += tmp1 * -0.5
    tmp2 += np.transpose(tmp1, (0, 2, 1, 3))
    del tmp1
    t1new += einsum(tmp2, (0, 1, 2, 3), t2, (2, 1, 3, 4), (0, 4)) * -2
    del tmp2
    tmp4 = np.copy(f.ov)
    tmp4 += einsum(tmp3, (0, 1, 2, 3), t1, (0, 2), (1, 3))
    del tmp3
    t1new += einsum(tmp5, (0, 1, 2, 3), tmp4, (0, 2), (1, 3))
    del tmp5, tmp4
    tmp8 = np.copy(f.oo)
    tmp8 += einsum(tmp7, (0, 1, 2, 3), t2, (4, 0, 2, 3), (1, 4))
    del tmp7
    t1new += einsum(t1, (0, 1), tmp8, (0, 2), (2, 1)) * -1
    del tmp8
    t1new += einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    t2new += einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5)) * -1
    t2new += einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 3, 5), (4, 0, 2, 5)) * -1
    t2new += einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 5, 3), (0, 4, 1, 5)) * 2
    t2new += einsum(t2, (0, 1, 2, 3), v.vvvv, (4, 2, 5, 3), (0, 1, 4, 5))
    t2new += np.transpose(v.ovov, (0, 2, 1, 3))

    return {f"t1new": t1new, f"t2new": t2new}

