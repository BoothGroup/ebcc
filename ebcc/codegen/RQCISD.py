"""Code generated by `albert` version 0.0.0.

 * date: 2024-12-19T15:11:05.064216
 * python version: 3.10.15 (main, Sep  9 2024, 03:03:06) [GCC 13.2.0]
 * albert version: 0.0.0
 * caller: /opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/albert/code/einsum.py
 * node: fv-az1676-657
 * system: Linux
 * processor: x86_64
 * release: 6.8.0-1017-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        e_cc: 
    """

    e_cc = einsum(t2, (0, 1, 2, 3), v.ovov, (0, 2, 1, 3), ()) * 2
    e_cc += einsum(t2, (0, 1, 2, 3), v.ovov, (0, 3, 1, 2), ()) * -1
    e_cc += einsum(f.ov, (0, 1), t1, (0, 1), ()) * 2

    return e_cc

def update_amps(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        t1new: 
        t2new: 
    """

    t1new = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    tmp0 = np.copy(v.ovvv)
    tmp0 += np.transpose(v.ovvv, (0, 2, 1, 3)) * -0.5
    t1new += einsum(t2, (0, 1, 2, 3), tmp0, (1, 3, 2, 4), (0, 4)) * 2
    del tmp0
    tmp2 = np.copy(v.ooov) * -0.5
    tmp2 += np.transpose(v.ooov, (0, 2, 1, 3))
    tmp1 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp2 += tmp1
    tmp2 += np.transpose(tmp1, (0, 2, 1, 3)) * -0.5
    del tmp1
    t1new += einsum(t2, (0, 1, 2, 3), tmp2, (4, 0, 1, 2), (4, 3)) * -2
    del tmp2
    tmp5 = np.copy(np.transpose(t2, (0, 1, 3, 2)))
    tmp5 += t2 * -0.5
    tmp4 = np.copy(f.ov)
    tmp3 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1)))
    tmp3 += np.transpose(v.ovov, (0, 2, 1, 3)) * -0.5
    tmp4 += einsum(t1, (0, 1), tmp3, (0, 2, 3, 1), (2, 3)) * 2
    t1new += einsum(tmp4, (0, 1), tmp5, (0, 2, 3, 1), (2, 3)) * 2
    del tmp4, tmp5
    tmp6 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3)))
    tmp6 += v.oovv * -0.5
    t1new += einsum(t1, (0, 1), tmp6, (0, 2, 1, 3), (2, 3)) * 2
    del tmp6
    tmp8 = np.copy(f.oo)
    tmp7 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * -1
    tmp7 += np.transpose(v.ovov, (0, 2, 1, 3)) * 2
    tmp8 += einsum(t2, (0, 1, 2, 3), tmp7, (1, 4, 3, 2), (4, 0))
    del tmp7
    t1new += einsum(t1, (0, 1), tmp8, (0, 2), (2, 1)) * -1
    del tmp8
    t2new = einsum(v.vvvv, (0, 1, 2, 3), t2, (4, 5, 1, 3), (4, 5, 0, 2))
    t2new += np.transpose(v.ovov, (0, 2, 1, 3))
    t2new += einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 5, 3), (4, 0, 5, 1)) * 2
    tmp9 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 3, 5), (4, 0, 5, 1))
    t2new += np.transpose(tmp9, (1, 0, 3, 2)) * -1
    t2new += einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 3, 5), (4, 0, 2, 5)) * -1
    t2new += einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 5, 3), (0, 4, 2, 5)) * -1
    tmp10 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp12 = np.copy(tmp10)
    del tmp10
    tmp11 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp12 += tmp11
    del tmp11
    t2new += np.transpose(tmp12, (0, 1, 3, 2))
    t2new += np.transpose(tmp12, (1, 0, 2, 3))
    del tmp12
    tmp13 = einsum(f.oo, (0, 1), t2, (2, 1, 3, 4), (0, 2, 3, 4))
    t2new += np.transpose(tmp13, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp13, (1, 0, 2, 3)) * -1
    del tmp13
    tmp14 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3))
    tmp21 = np.copy(tmp14)
    del tmp14
    tmp15 = einsum(tmp9, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp21 += tmp15 * 2
    del tmp15
    tmp16 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * -0.5
    tmp16 += np.transpose(v.ovov, (0, 2, 1, 3))
    tmp17 = einsum(tmp16, (0, 1, 2, 3), t2, (0, 1, 2, 4), (4, 3))
    del tmp16
    tmp18 = einsum(tmp17, (0, 1), t2, (2, 3, 1, 4), (2, 3, 4, 0)) * 2
    del tmp17
    tmp21 += np.transpose(tmp18, (1, 0, 2, 3))
    del tmp18
    tmp19 = einsum(t2, (0, 1, 2, 3), tmp3, (1, 4, 2, 3), (0, 4)) * 2
    tmp20 = einsum(t2, (0, 1, 2, 3), tmp19, (4, 1), (0, 4, 3, 2))
    del tmp19
    tmp21 += np.transpose(tmp20, (0, 1, 3, 2))
    del tmp20
    t2new += tmp21 * -1
    t2new += np.transpose(tmp21, (1, 0, 3, 2)) * -1
    del tmp21
    tmp22 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 1, 5), (4, 0, 5, 3))
    tmp23 = einsum(t2, (0, 1, 2, 3), tmp22, (4, 1, 5, 3), (0, 4, 2, 5))
    t2new += tmp23
    t2new += np.transpose(tmp23, (1, 0, 3, 2))
    del tmp23
    tmp24 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * 2
    tmp24 += v.oovv * -1
    tmp24 += einsum(t2, (0, 1, 2, 3), tmp3, (1, 4, 5, 3), (0, 4, 2, 5)) * 4
    del tmp3
    t2new += einsum(t2, (0, 1, 2, 3), tmp24, (4, 1, 5, 3), (4, 0, 5, 2))
    del tmp24
    tmp25 = np.copy(v.oooo)
    tmp25 += einsum(t2, (0, 1, 2, 3), v.ovov, (4, 2, 5, 3), (4, 0, 5, 1))
    t2new += einsum(t2, (0, 1, 2, 3), tmp25, (0, 4, 1, 5), (4, 5, 2, 3))
    del tmp25
    tmp26 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * -1
    tmp26 += tmp9
    del tmp9
    t2new += einsum(tmp26, (0, 1, 2, 3), t2, (4, 1, 3, 5), (4, 0, 5, 2))
    del tmp26
    tmp27 = np.copy(v.oovv) * -1
    tmp27 += tmp22
    del tmp22
    t2new += einsum(t2, (0, 1, 2, 3), tmp27, (4, 1, 5, 2), (4, 0, 3, 5))
    del tmp27

    return {"t1new": t1new, "t2new": t2new}

def update_lams(f=None, l1=None, l2=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        l1: 
        l2: 
        t1: 
        t2: 
        v: 

    Returns:
        l1new: 
        l2new: 
    """

    tmp0 = einsum(t1, (0, 1), v.oooo, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp12 = np.copy(np.transpose(tmp0, (1, 2, 0, 3))) * 0.5
    tmp12 += np.transpose(tmp0, (2, 1, 0, 3)) * -0.25
    del tmp0
    tmp1 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp12 += np.transpose(tmp1, (1, 2, 0, 3)) * 0.25
    tmp12 += np.transpose(tmp1, (2, 1, 0, 3)) * -0.5
    del tmp1
    tmp3 = np.copy(v.ovvv)
    tmp2 = einsum(v.ovov, (0, 1, 2, 3), t1, (2, 4), (0, 4, 1, 3))
    tmp3 += np.transpose(tmp2, (0, 2, 3, 1)) * -1
    del tmp2
    tmp4 = einsum(t2, (0, 1, 2, 3), tmp3, (4, 3, 2, 5), (0, 1, 4, 5)) * 0.5
    del tmp3
    tmp12 += np.transpose(tmp4, (1, 0, 2, 3)) * -1
    tmp12 += tmp4 * 0.5
    del tmp4
    tmp5 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1)))
    tmp5 += np.transpose(v.ovov, (0, 2, 1, 3)) * -0.5
    tmp6 = einsum(t1, (0, 1), tmp5, (0, 2, 3, 1), (2, 3)) * 2
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp6, (4, 2), (0, 1, 4, 3)) * 0.25
    tmp12 += np.transpose(tmp7, (1, 0, 2, 3))
    tmp12 += tmp7 * -2
    del tmp7
    tmp10 = np.copy(np.transpose(t2, (0, 1, 3, 2)))
    tmp10 += t2 * -0.5
    tmp9 = np.copy(v.ooov)
    tmp9 += np.transpose(v.ooov, (0, 2, 1, 3)) * -0.5
    tmp8 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp9 += tmp8 * -0.5
    tmp9 += np.transpose(tmp8, (0, 2, 1, 3))
    tmp12 += einsum(tmp10, (0, 1, 2, 3), tmp9, (4, 5, 0, 3), (4, 1, 5, 2)) * -1
    del tmp9
    tmp11 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * 2
    tmp11 += v.oovv * -1
    tmp12 += einsum(tmp11, (0, 1, 2, 3), t1, (4, 2), (4, 1, 0, 3)) * -0.25
    del tmp11
    l1new = einsum(l2, (0, 1, 2, 3), tmp12, (2, 3, 4, 1), (0, 4)) * 4
    del tmp12
    tmp15 = einsum(t1, (0, 1), l1, (2, 3), (3, 0, 2, 1))
    tmp15 += einsum(l2, (0, 1, 2, 3), t2, (4, 3, 1, 5), (2, 4, 0, 5)) * -1
    tmp14 = np.copy(np.transpose(l2, (3, 2, 0, 1))) * -1
    tmp14 += np.transpose(l2, (2, 3, 0, 1)) * 2
    tmp15 += einsum(t2, (0, 1, 2, 3), tmp14, (1, 4, 3, 5), (4, 0, 5, 2))
    del tmp14
    tmp13 = np.copy(v.ovvv) * -1
    tmp13 += np.transpose(v.ovvv, (0, 2, 1, 3)) * 2
    l1new += einsum(tmp13, (0, 1, 2, 3), tmp15, (4, 0, 3, 2), (1, 4))
    del tmp15
    tmp17 = np.copy(np.transpose(v.vvvv, (0, 2, 1, 3)))
    tmp17 += v.vvvv * -0.5
    tmp16 = einsum(t1, (0, 1), l2, (2, 3, 4, 0), (4, 2, 3, 1))
    l1new += einsum(tmp17, (0, 1, 2, 3), tmp16, (4, 0, 3, 1), (2, 4)) * 2
    del tmp16, tmp17
    tmp18 = einsum(t2, (0, 1, 2, 3), l1, (3, 4), (4, 0, 1, 2))
    tmp25 = np.copy(tmp18) * 0.5
    tmp25 += np.transpose(tmp18, (0, 2, 1, 3)) * -0.25
    del tmp18
    tmp19 = einsum(t1, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    tmp25 += tmp19 * -0.25
    tmp25 += np.transpose(tmp19, (1, 0, 2, 3)) * 0.5
    tmp20 = einsum(l2, (0, 1, 2, 3), t2, (4, 5, 1, 0), (3, 2, 4, 5))
    tmp21 = einsum(tmp20, (0, 1, 2, 3), t1, (1, 4), (0, 2, 3, 4))
    tmp25 += tmp21 * 0.25
    tmp25 += np.transpose(tmp21, (0, 2, 1, 3)) * -0.5
    del tmp21
    tmp22 = np.copy(tmp19) * -1
    tmp22 += np.transpose(tmp19, (1, 0, 2, 3)) * 2
    tmp25 += einsum(tmp10, (0, 1, 2, 3), tmp22, (4, 0, 5, 3), (4, 1, 5, 2)) * 0.5
    tmp23 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -0.5
    tmp23 += t2
    tmp24 = einsum(tmp23, (0, 1, 2, 3), l2, (2, 3, 0, 4), (4, 1)) * 2
    tmp25 += einsum(t1, (0, 1), tmp24, (2, 3), (2, 0, 3, 1)) * 0.5
    l1new += einsum(tmp25, (0, 1, 2, 3), v.ovov, (1, 3, 2, 4), (4, 0)) * -4
    del tmp25
    tmp26 = np.copy(v.ooov) * 2
    tmp26 += np.transpose(v.ooov, (0, 2, 1, 3)) * -1
    tmp26 += tmp8 * -1
    tmp26 += np.transpose(tmp8, (0, 2, 1, 3)) * 2
    tmp29 = einsum(t2, (0, 1, 2, 3), tmp26, (4, 5, 1, 3), (4, 0, 5, 2)) * 0.5
    del tmp26
    tmp27 = np.copy(v.ooov) * -0.5
    tmp27 += np.transpose(v.ooov, (0, 2, 1, 3))
    tmp27 += tmp8
    tmp27 += np.transpose(tmp8, (0, 2, 1, 3)) * -0.5
    del tmp8
    tmp29 += einsum(t2, (0, 1, 2, 3), tmp27, (4, 5, 1, 2), (4, 0, 5, 3))
    del tmp27
    tmp28 = np.copy(v.oovv) * 2
    tmp28 += np.transpose(v.ovov, (0, 2, 1, 3)) * -1
    tmp29 += einsum(tmp28, (0, 1, 2, 3), t1, (4, 2), (4, 1, 0, 3)) * -0.5
    del tmp28
    l1new += einsum(tmp29, (0, 1, 2, 3), l2, (4, 3, 1, 0), (4, 2)) * 2
    del tmp29
    tmp30 = einsum(l2, (0, 1, 2, 3), t2, (4, 2, 1, 5), (3, 4, 0, 5))
    tmp31 = np.copy(v.ovvv) * 2
    tmp31 += np.transpose(v.ovvv, (0, 2, 1, 3)) * -1
    l1new += einsum(tmp31, (0, 1, 2, 3), tmp30, (4, 0, 3, 2), (1, 4)) * -1
    del tmp30
    tmp33 = einsum(tmp22, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5)) * 0.5
    del tmp22
    tmp32 = np.copy(tmp19)
    tmp32 += np.transpose(tmp19, (1, 0, 2, 3)) * -0.5
    tmp33 += einsum(t2, (0, 1, 2, 3), tmp32, (4, 1, 5, 2), (4, 0, 5, 3))
    tmp33 += einsum(t1, (0, 1), tmp24, (2, 3), (2, 0, 3, 1)) * 0.5
    l1new += einsum(v.ovov, (0, 1, 2, 3), tmp33, (4, 0, 2, 3), (1, 4)) * 2
    del tmp33
    l1new += einsum(v.oovv, (0, 1, 2, 3), tmp32, (4, 0, 1, 3), (2, 4)) * -2
    del tmp32
    tmp34 = np.copy(np.transpose(tmp20, (1, 0, 2, 3))) * -0.5
    tmp34 += np.transpose(tmp20, (1, 0, 3, 2))
    l1new += einsum(tmp34, (0, 1, 2, 3), v.ooov, (2, 0, 3, 4), (4, 1)) * 2
    del tmp34
    tmp38 = np.copy(v.ovvv)
    tmp38 += np.transpose(v.ovvv, (0, 2, 1, 3)) * -0.5
    tmp35 = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    tmp37 = np.copy(tmp35)
    del tmp35
    tmp36 = einsum(l2, (0, 1, 2, 3), tmp23, (3, 2, 1, 4), (0, 4)) * 2
    tmp37 += tmp36
    del tmp36
    l1new += einsum(tmp37, (0, 1), tmp38, (2, 3, 1, 0), (3, 2)) * 2
    del tmp38
    tmp41 = np.copy(t1) * 0.5
    tmp39 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -1
    tmp39 += t2 * 2
    tmp41 += einsum(tmp39, (0, 1, 2, 3), tmp19, (0, 1, 4, 2), (4, 3)) * -0.5
    tmp41 += einsum(l1, (0, 1), tmp10, (1, 2, 3, 0), (2, 3))
    tmp40 = einsum(tmp23, (0, 1, 2, 3), l2, (2, 3, 0, 4), (4, 1))
    tmp41 += einsum(tmp40, (0, 1), t1, (0, 2), (1, 2)) * -1
    l1new += einsum(tmp5, (0, 1, 2, 3), tmp41, (0, 3), (2, 1)) * 4
    del tmp41, tmp5
    tmp44 = np.copy(v.ooov) * 2
    tmp44 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp42 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    tmp43 = np.copy(tmp42) * 0.5
    tmp43 += tmp40
    del tmp40
    l1new += einsum(tmp44, (0, 1, 2, 3), tmp43, (1, 0), (3, 2)) * -2
    del tmp43, tmp44
    tmp45 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp47 = np.copy(tmp45)
    tmp47 += einsum(tmp10, (0, 1, 2, 3), v.ovov, (4, 2, 0, 3), (4, 1)) * 2
    del tmp10
    tmp46 = np.copy(v.ooov) * -0.5
    tmp46 += np.transpose(v.ovoo, (0, 2, 3, 1))
    tmp47 += einsum(tmp46, (0, 1, 2, 3), t1, (0, 3), (2, 1)) * 2
    del tmp46
    l1new += einsum(tmp47, (0, 1), l1, (2, 1), (2, 0)) * -1
    del tmp47
    tmp48 = np.copy(tmp42)
    del tmp42
    tmp48 += tmp24
    del tmp24
    l1new += einsum(tmp48, (0, 1), f.ov, (1, 2), (2, 0)) * -1
    tmp49 = einsum(t2, (0, 1, 2, 3), v.ovov, (4, 2, 5, 3), (0, 1, 4, 5))
    l2new = einsum(l2, (0, 1, 2, 3), tmp49, (3, 2, 4, 5), (0, 1, 5, 4))
    del tmp49
    l2new += einsum(v.ovov, (0, 1, 2, 3), tmp20, (4, 5, 0, 2), (1, 3, 4, 5))
    del tmp20
    tmp50 = einsum(tmp19, (0, 1, 2, 3), v.ovvv, (2, 4, 5, 3), (1, 0, 4, 5))
    tmp69 = np.copy(tmp50)
    del tmp50
    tmp51 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3))
    tmp55 = np.copy(tmp51)
    tmp52 = einsum(t2, (0, 1, 2, 3), v.ovov, (4, 3, 1, 5), (0, 4, 2, 5))
    tmp55 += tmp52
    tmp53 = einsum(tmp39, (0, 1, 2, 3), v.ovov, (4, 5, 0, 2), (4, 1, 5, 3))
    tmp55 += np.transpose(tmp53, (1, 0, 3, 2)) * -1
    del tmp53
    tmp54 = einsum(tmp31, (0, 1, 2, 3), t1, (4, 2), (4, 0, 1, 3)) * 0.5
    del tmp31
    tmp55 += np.transpose(tmp54, (0, 1, 3, 2)) * -1
    del tmp54
    tmp56 = einsum(tmp55, (0, 1, 2, 3), l2, (4, 2, 5, 0), (5, 1, 4, 3)) * 2
    del tmp55
    tmp69 += tmp56
    del tmp56
    tmp57 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp59 = np.copy(np.transpose(tmp57, (0, 1, 3, 2)))
    del tmp57
    tmp58 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 5, 3), (4, 0, 5, 1))
    tmp59 += tmp58 * 2
    del tmp58
    tmp60 = einsum(tmp59, (0, 1, 2, 3), l2, (4, 2, 0, 5), (5, 1, 4, 3))
    del tmp59
    tmp69 += tmp60
    del tmp60
    tmp61 = einsum(v.ovov, (0, 1, 2, 3), tmp23, (0, 2, 1, 4), (3, 4)) * 2
    del tmp23
    tmp63 = np.copy(tmp61)
    del tmp61
    tmp62 = einsum(t1, (0, 1), tmp13, (0, 2, 1, 3), (2, 3))
    del tmp13
    tmp63 += tmp62 * -1
    del tmp62
    tmp64 = einsum(l2, (0, 1, 2, 3), tmp63, (4, 1), (3, 2, 0, 4))
    del tmp63
    tmp69 += np.transpose(tmp64, (1, 0, 2, 3))
    del tmp64
    tmp65 = einsum(v.ooov, (0, 1, 2, 3), t1, (2, 3), (0, 1))
    tmp67 = np.copy(np.transpose(tmp65, (1, 0)))
    del tmp65
    tmp66 = einsum(v.ovov, (0, 1, 2, 3), tmp39, (2, 4, 3, 1), (0, 4)) * 0.5
    del tmp39
    tmp67 += np.transpose(tmp66, (1, 0))
    del tmp66
    tmp68 = einsum(tmp67, (0, 1), l2, (2, 3, 0, 4), (4, 1, 2, 3)) * 2
    del tmp67
    tmp69 += np.transpose(tmp68, (0, 1, 3, 2))
    del tmp68
    tmp69 += einsum(tmp6, (0, 1), l1, (2, 3), (3, 0, 2, 1)) * -1
    del tmp6
    l2new += np.transpose(tmp69, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp69, (3, 2, 1, 0)) * -1
    del tmp69
    tmp70 = einsum(l2, (0, 1, 2, 3), tmp45, (4, 3), (4, 2, 0, 1))
    del tmp45
    tmp76 = np.copy(tmp70)
    del tmp70
    tmp71 = einsum(f.ov, (0, 1), tmp19, (2, 3, 0, 4), (2, 3, 1, 4))
    del tmp19
    tmp76 += tmp71
    del tmp71
    tmp72 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3))
    tmp73 = einsum(tmp72, (0, 1, 2, 3), l2, (4, 3, 0, 5), (5, 1, 4, 2))
    del tmp72
    tmp76 += tmp73
    del tmp73
    tmp74 = einsum(tmp37, (0, 1), v.ovov, (2, 1, 3, 4), (2, 3, 4, 0))
    del tmp37
    tmp76 += np.transpose(tmp74, (1, 0, 3, 2))
    del tmp74
    tmp75 = einsum(tmp48, (0, 1), v.ovov, (2, 3, 1, 4), (2, 0, 4, 3))
    del tmp48
    tmp76 += np.transpose(tmp75, (1, 0, 3, 2))
    del tmp75
    l2new += np.transpose(tmp76, (3, 2, 0, 1)) * -1
    l2new += np.transpose(tmp76, (2, 3, 1, 0)) * -1
    del tmp76
    tmp77 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp78 = einsum(l2, (0, 1, 2, 3), tmp77, (2, 4, 3, 5), (4, 5, 0, 1))
    del tmp77
    tmp83 = np.copy(tmp78)
    del tmp78
    tmp79 = einsum(t1, (0, 1), v.ooov, (2, 3, 0, 4), (2, 3, 1, 4))
    tmp81 = np.copy(np.transpose(tmp79, (1, 0, 2, 3)))
    del tmp79
    tmp80 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 1, 5), (4, 0, 5, 3))
    tmp81 += tmp80
    del tmp80
    tmp82 = einsum(l2, (0, 1, 2, 3), tmp81, (2, 4, 1, 5), (3, 4, 0, 5))
    tmp83 += tmp82
    del tmp82
    l2new += np.transpose(tmp83, (3, 2, 0, 1))
    l2new += np.transpose(tmp83, (2, 3, 1, 0))
    del tmp83
    tmp84 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))
    tmp85 = einsum(tmp84, (0, 1), l2, (2, 3, 4, 0), (4, 1, 2, 3))
    del tmp84
    tmp90 = np.copy(tmp85)
    del tmp85
    tmp87 = np.copy(tmp51)
    del tmp51
    tmp87 += tmp52
    del tmp52
    tmp86 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 3, 5), (4, 0, 5, 1))
    tmp87 += tmp86
    del tmp86
    tmp88 = einsum(l2, (0, 1, 2, 3), tmp87, (2, 4, 1, 5), (3, 4, 0, 5))
    del tmp87
    tmp90 += tmp88
    del tmp88
    tmp89 = einsum(l2, (0, 1, 2, 3), tmp81, (3, 4, 1, 5), (2, 4, 0, 5))
    del tmp81
    tmp90 += tmp89
    del tmp89
    l2new += np.transpose(tmp90, (2, 3, 0, 1))
    l2new += np.transpose(tmp90, (3, 2, 1, 0))
    del tmp90

    return {"l1new": l1new, "l2new": l2new}

def make_rdm1_f(l1=None, l2=None, t1=None, t2=None, δ=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        l1: 
        l2: 
        t1: 
        t2: 
        δ: 

    Returns:
        rdm1: 
    """

    δ = Namespace()
    δ.oo = np.eye(t1.shape[0])
    δ.vv = np.eye(t1.shape[-1])

    rdm1 = Namespace()
    rdm1.vo = np.copy(l1) * 2
    rdm1.oo = np.copy(δ.oo) * 2
    tmp0 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    rdm1.oo += np.transpose(tmp0, (1, 0)) * -2
    tmp1 = np.copy(np.transpose(t2, (0, 1, 3, 2)))
    tmp1 += t2 * -0.5
    rdm1.oo += einsum(tmp1, (0, 1, 2, 3), l2, (3, 2, 0, 4), (1, 4)) * -4
    rdm1.vv = einsum(t1, (0, 1), l1, (2, 0), (2, 1)) * 2
    tmp6 = np.copy(np.transpose(l2, (3, 2, 0, 1))) * -1
    tmp6 += np.transpose(l2, (2, 3, 0, 1)) * 2
    rdm1.vv += einsum(tmp6, (0, 1, 2, 3), t2, (0, 1, 2, 4), (3, 4)) * 2
    del tmp6
    rdm1.ov = np.copy(t1) * 2
    tmp2 = einsum(l2, (0, 1, 2, 3), t1, (4, 1), (2, 3, 4, 0))
    tmp3 = np.copy(tmp2)
    tmp3 += np.transpose(tmp2, (1, 0, 2, 3)) * -0.5
    del tmp2
    rdm1.ov += einsum(t2, (0, 1, 2, 3), tmp3, (0, 1, 4, 2), (4, 3)) * -4
    del tmp3
    rdm1.ov += einsum(l1, (0, 1), tmp1, (1, 2, 3, 0), (2, 3)) * 4
    del tmp1
    tmp5 = np.copy(tmp0)
    del tmp0
    tmp4 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -0.5
    tmp4 += t2
    tmp5 += einsum(tmp4, (0, 1, 2, 3), l2, (2, 3, 0, 4), (4, 1)) * 2
    del tmp4
    rdm1.ov += einsum(t1, (0, 1), tmp5, (0, 2), (2, 1)) * -2
    del tmp5

    rdm1 = np.block([[rdm1.oo, rdm1.ov], [rdm1.vo, rdm1.vv]])

    return rdm1

def make_rdm2_f(l1=None, l2=None, t1=None, t2=None, δ=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        l1: 
        l2: 
        t1: 
        t2: 
        δ: 

    Returns:
        rdm2: 
    """

    δ = Namespace()
    δ.oo = np.eye(t1.shape[0])
    δ.vv = np.eye(t1.shape[-1])

    rdm2 = Namespace()
    rdm2.vvoo = np.copy(np.transpose(l2, (0, 1, 3, 2))) * -1
    rdm2.vvoo += l2
    rdm2.vvoo += l2
    rdm2.vvoo += l2
    rdm2.vvoo += np.transpose(l2, (0, 1, 3, 2)) * -1
    rdm2.vvoo += l2
    tmp131 = einsum(t1, (0, 1), l2, (2, 3, 4, 0), (4, 2, 3, 1))
    rdm2.vvov = np.copy(np.transpose(tmp131, (1, 2, 0, 3)))
    rdm2.vvov += np.transpose(tmp131, (2, 1, 0, 3)) * -1
    rdm2.vvov += np.transpose(tmp131, (1, 2, 0, 3))
    rdm2.vvov += np.transpose(tmp131, (1, 2, 0, 3))
    rdm2.vvov += np.transpose(tmp131, (1, 2, 0, 3))
    rdm2.vvov += np.transpose(tmp131, (2, 1, 0, 3)) * -1
    rdm2.vvvo = np.copy(np.transpose(tmp131, (1, 2, 3, 0))) * -1
    rdm2.vvvo += np.transpose(tmp131, (2, 1, 3, 0))
    rdm2.vvvo += np.transpose(tmp131, (2, 1, 3, 0))
    rdm2.vvvo += np.transpose(tmp131, (2, 1, 3, 0))
    rdm2.vvvo += np.transpose(tmp131, (1, 2, 3, 0)) * -1
    rdm2.vvvo += np.transpose(tmp131, (2, 1, 3, 0))
    del tmp131
    tmp4 = einsum(l2, (0, 1, 2, 3), t1, (4, 1), (2, 3, 4, 0))
    rdm2.ovoo = np.copy(np.transpose(tmp4, (2, 3, 0, 1)))
    rdm2.ovoo += np.transpose(tmp4, (2, 3, 1, 0)) * -1
    rdm2.ovoo += einsum(δ.oo, (0, 1), l1, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.ovoo += einsum(δ.oo, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.ovoo += np.transpose(tmp4, (2, 3, 1, 0)) * -1
    rdm2.ovoo += einsum(δ.oo, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.ovoo += np.transpose(tmp4, (2, 3, 1, 0)) * -1
    rdm2.ovoo += einsum(δ.oo, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.ovoo += np.transpose(tmp4, (2, 3, 0, 1))
    rdm2.ovoo += np.transpose(tmp4, (2, 3, 1, 0)) * -1
    rdm2.ovoo += einsum(δ.oo, (0, 1), l1, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.ovoo += einsum(δ.oo, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.vooo = np.copy(np.transpose(tmp4, (3, 2, 0, 1))) * -1
    rdm2.vooo += np.transpose(tmp4, (3, 2, 1, 0))
    rdm2.vooo += einsum(δ.oo, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.vooo += einsum(δ.oo, (0, 1), l1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.vooo += np.transpose(tmp4, (3, 2, 0, 1)) * -1
    rdm2.vooo += einsum(δ.oo, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.vooo += np.transpose(tmp4, (3, 2, 0, 1)) * -1
    rdm2.vooo += einsum(δ.oo, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.vooo += np.transpose(tmp4, (3, 2, 0, 1)) * -1
    rdm2.vooo += np.transpose(tmp4, (3, 2, 1, 0))
    rdm2.vooo += einsum(δ.oo, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.vooo += einsum(δ.oo, (0, 1), l1, (2, 3), (2, 0, 1, 3)) * -1
    tmp7 = np.copy(t2)
    tmp7 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp132 = einsum(tmp7, (0, 1, 2, 3), l2, (4, 5, 0, 1), (4, 5, 2, 3))
    rdm2.vvvv = np.copy(np.transpose(tmp132, (1, 0, 2, 3))) * -1
    rdm2.vvvv += np.transpose(tmp132, (1, 0, 3, 2))
    rdm2.vvvv += np.transpose(tmp132, (1, 0, 3, 2))
    rdm2.vvvv += np.transpose(tmp132, (1, 0, 3, 2))
    rdm2.vvvv += np.transpose(tmp132, (1, 0, 2, 3)) * -1
    rdm2.vvvv += np.transpose(tmp132, (1, 0, 3, 2))
    del tmp132
    tmp0 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -0.5
    tmp0 += t2
    tmp1 = einsum(l2, (0, 1, 2, 3), tmp0, (2, 4, 0, 1), (3, 4)) * 2
    rdm2.oooo = einsum(δ.oo, (0, 1), tmp1, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), δ.oo, (2, 3), (2, 1, 0, 3))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (3, 0, 1, 2))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (0, 2, 3, 1)) * -1
    tmp2 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (0, 3, 2, 1))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (3, 0, 1, 2))
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (2, 1, 3, 0)) * -1
    tmp3 = einsum(l2, (0, 1, 2, 3), t2, (4, 5, 0, 1), (2, 3, 4, 5))
    tmp6 = np.copy(np.transpose(tmp3, (1, 0, 3, 2)))
    tmp5 = einsum(t1, (0, 1), tmp4, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp6 += tmp5
    rdm2.oooo += np.transpose(tmp6, (3, 2, 0, 1)) * -1
    rdm2.oooo += np.transpose(tmp6, (2, 3, 0, 1))
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (2, 1, 3, 0)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (0, 3, 1, 2)) * -1
    tmp8 = einsum(l2, (0, 1, 2, 3), tmp7, (4, 5, 0, 1), (2, 3, 4, 5))
    rdm2.oooo += np.transpose(tmp8, (3, 2, 1, 0))
    tmp9 = np.copy(δ.oo)
    tmp9 += tmp2 * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp9, (2, 3), (3, 0, 2, 1))
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (2, 1, 3, 0)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += np.transpose(tmp8, (3, 2, 1, 0))
    del tmp8
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp9, (2, 3), (3, 0, 2, 1))
    del tmp9
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), δ.oo, (2, 3), (2, 1, 0, 3))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (3, 0, 1, 2))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (0, 3, 2, 1))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (3, 0, 1, 2))
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (2, 1, 3, 0)) * -1
    rdm2.oooo += np.transpose(tmp6, (3, 2, 0, 1)) * -1
    rdm2.oooo += np.transpose(tmp6, (2, 3, 0, 1))
    del tmp6
    rdm2.ovov = einsum(t1, (0, 1), l1, (2, 3), (0, 2, 3, 1)) * -1
    tmp96 = np.copy(np.transpose(l2, (3, 2, 0, 1)))
    tmp96 += np.transpose(l2, (2, 3, 0, 1)) * -1
    tmp97 = einsum(tmp96, (0, 1, 2, 3), tmp7, (0, 4, 5, 3), (1, 4, 2, 5))
    rdm2.ovov += np.transpose(tmp97, (1, 2, 0, 3))
    tmp77 = np.copy(np.transpose(l2, (3, 2, 0, 1))) * 2
    tmp77 += np.transpose(l2, (2, 3, 0, 1)) * -1
    tmp98 = einsum(t2, (0, 1, 2, 3), tmp77, (1, 4, 5, 3), (4, 0, 5, 2))
    rdm2.ovov += np.transpose(tmp98, (1, 2, 0, 3)) * -1
    tmp99 = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    tmp101 = np.copy(tmp99)
    tmp100 = einsum(t2, (0, 1, 2, 3), tmp77, (0, 1, 3, 4), (4, 2))
    tmp101 += tmp100
    del tmp100
    rdm2.ovov += einsum(δ.oo, (0, 1), tmp101, (2, 3), (0, 2, 1, 3))
    tmp102 = einsum(l2, (0, 1, 2, 3), tmp7, (2, 4, 5, 1), (3, 4, 0, 5))
    rdm2.ovov += np.transpose(tmp102, (1, 2, 0, 3)) * -1
    rdm2.ovov += einsum(δ.oo, (0, 1), tmp101, (2, 3), (0, 2, 1, 3))
    rdm2.ovov += np.transpose(tmp102, (1, 2, 0, 3)) * -1
    rdm2.ovov += einsum(δ.oo, (0, 1), tmp101, (2, 3), (0, 2, 1, 3))
    rdm2.ovov += einsum(t1, (0, 1), l1, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.ovov += np.transpose(tmp97, (1, 2, 0, 3))
    del tmp97
    rdm2.ovov += np.transpose(tmp98, (1, 2, 0, 3)) * -1
    rdm2.ovov += einsum(δ.oo, (0, 1), tmp101, (2, 3), (0, 2, 1, 3))
    rdm2.ovvo = einsum(t1, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    tmp19 = np.copy(t2)
    tmp19 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp103 = einsum(tmp96, (0, 1, 2, 3), tmp19, (0, 4, 5, 3), (4, 1, 5, 2))
    del tmp96
    rdm2.ovvo += np.transpose(tmp103, (0, 3, 2, 1)) * -1
    rdm2.ovvo += np.transpose(tmp98, (1, 2, 3, 0))
    tmp104 = np.copy(tmp99) * 0.5
    tmp78 = einsum(t2, (0, 1, 2, 3), tmp77, (0, 1, 3, 4), (4, 2)) * 0.5
    del tmp77
    tmp104 += tmp78
    rdm2.ovvo += einsum(δ.oo, (0, 1), tmp104, (2, 3), (0, 2, 3, 1)) * -2
    rdm2.ovvo += einsum(t1, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    tmp56 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 1, 5), (5, 0, 4, 2))
    rdm2.ovvo += np.transpose(tmp56, (1, 2, 3, 0)) * -1
    tmp42 = einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp42 += np.transpose(t2, (0, 1, 3, 2)) * -2
    tmp42 += t2
    tmp105 = einsum(l2, (0, 1, 2, 3), tmp42, (3, 4, 5, 1), (4, 2, 5, 0))
    rdm2.ovvo += np.transpose(tmp105, (0, 3, 2, 1)) * -1
    rdm2.ovvo += einsum(t1, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.ovvo += np.transpose(tmp56, (1, 2, 3, 0)) * -1
    rdm2.ovvo += np.transpose(tmp105, (0, 3, 2, 1)) * -1
    rdm2.ovvo += einsum(t1, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.ovvo += np.transpose(tmp103, (0, 3, 2, 1)) * -1
    del tmp103
    rdm2.ovvo += np.transpose(tmp98, (1, 2, 3, 0))
    del tmp98
    rdm2.ovvo += einsum(δ.oo, (0, 1), tmp104, (2, 3), (0, 2, 3, 1)) * -2
    rdm2.vovo = einsum(t1, (0, 1), l1, (2, 3), (2, 0, 1, 3)) * -1
    tmp106 = np.copy(np.transpose(l2, (3, 2, 0, 1))) * -1
    tmp106 += np.transpose(l2, (2, 3, 0, 1))
    tmp111 = einsum(tmp106, (0, 1, 2, 3), tmp19, (0, 4, 5, 3), (4, 1, 5, 2))
    rdm2.vovo += np.transpose(tmp111, (3, 0, 2, 1)) * -1
    tmp108 = np.copy(np.transpose(l2, (3, 2, 0, 1)))
    tmp108 += np.transpose(l2, (2, 3, 0, 1)) * -0.5
    tmp109 = einsum(t2, (0, 1, 2, 3), tmp108, (1, 4, 5, 3), (4, 0, 5, 2)) * 2
    del tmp108
    rdm2.vovo += np.transpose(tmp109, (2, 1, 3, 0)) * -1
    rdm2.vovo += einsum(δ.oo, (0, 1), tmp104, (2, 3), (2, 0, 3, 1)) * 2
    rdm2.vovo += np.transpose(tmp102, (2, 1, 3, 0)) * -1
    rdm2.vovo += einsum(δ.oo, (0, 1), tmp104, (2, 3), (2, 0, 3, 1)) * 2
    rdm2.vovo += np.transpose(tmp102, (2, 1, 3, 0)) * -1
    del tmp102
    rdm2.vovo += einsum(δ.oo, (0, 1), tmp104, (2, 3), (2, 0, 3, 1)) * 2
    rdm2.vovo += einsum(t1, (0, 1), l1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.vovo += np.transpose(tmp111, (3, 0, 2, 1)) * -1
    del tmp111
    rdm2.vovo += np.transpose(tmp109, (2, 1, 3, 0)) * -1
    rdm2.vovo += einsum(δ.oo, (0, 1), tmp104, (2, 3), (2, 0, 3, 1)) * 2
    rdm2.voov = einsum(t1, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    tmp107 = einsum(tmp106, (0, 1, 2, 3), tmp7, (0, 4, 5, 3), (1, 4, 2, 5))
    del tmp106
    rdm2.voov += np.transpose(tmp107, (2, 1, 0, 3))
    rdm2.voov += np.transpose(tmp109, (2, 1, 0, 3))
    rdm2.voov += einsum(δ.oo, (0, 1), tmp101, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.voov += einsum(t1, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.voov += np.transpose(tmp56, (2, 1, 0, 3)) * -1
    tmp31 = einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 0.5
    tmp31 += np.transpose(t2, (0, 1, 3, 2)) * -1
    tmp31 += t2 * 0.5
    tmp110 = einsum(l2, (0, 1, 2, 3), tmp31, (3, 4, 5, 1), (4, 2, 5, 0)) * 2
    rdm2.voov += np.transpose(tmp110, (3, 0, 1, 2)) * -1
    rdm2.voov += einsum(t1, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.voov += np.transpose(tmp56, (2, 1, 0, 3)) * -1
    rdm2.voov += np.transpose(tmp110, (3, 0, 1, 2)) * -1
    del tmp110
    rdm2.voov += einsum(t1, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.voov += np.transpose(tmp107, (2, 1, 0, 3))
    del tmp107
    rdm2.voov += np.transpose(tmp109, (2, 1, 0, 3))
    del tmp109
    rdm2.voov += einsum(δ.oo, (0, 1), tmp101, (2, 3), (2, 0, 1, 3)) * -1
    tmp112 = einsum(t2, (0, 1, 2, 3), l1, (4, 1), (0, 4, 2, 3))
    tmp127 = np.copy(tmp112)
    tmp113 = einsum(t2, (0, 1, 2, 3), tmp4, (0, 1, 4, 5), (4, 5, 2, 3))
    tmp127 += tmp113
    tmp125 = np.copy(tmp56)
    tmp125 += np.transpose(tmp105, (1, 0, 3, 2))
    del tmp105
    tmp126 = einsum(t1, (0, 1), tmp125, (0, 2, 3, 4), (2, 3, 4, 1))
    del tmp125
    tmp127 += np.transpose(tmp126, (0, 1, 3, 2))
    tmp127 += einsum(t1, (0, 1), tmp101, (2, 3), (0, 2, 1, 3))
    rdm2.vovv = np.copy(np.transpose(tmp127, (1, 0, 2, 3))) * -1
    rdm2.vovv += np.transpose(tmp127, (1, 0, 3, 2))
    tmp64 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 1, 5), (5, 0, 4, 3))
    tmp124 = einsum(t1, (0, 1), tmp64, (0, 2, 3, 4), (2, 3, 1, 4))
    rdm2.vovv += np.transpose(tmp124, (1, 0, 2, 3))
    rdm2.vovv += np.transpose(tmp124, (1, 0, 3, 2)) * -1
    rdm2.vovv += np.transpose(tmp112, (1, 0, 3, 2))
    rdm2.vovv += np.transpose(tmp113, (1, 0, 2, 3)) * -1
    rdm2.vovv += np.transpose(tmp124, (1, 0, 3, 2)) * -1
    tmp129 = np.copy(tmp56) * 0.5
    tmp128 = einsum(l2, (0, 1, 2, 3), tmp42, (3, 4, 5, 1), (4, 2, 5, 0)) * 0.5
    tmp129 += np.transpose(tmp128, (1, 0, 3, 2))
    del tmp128
    tmp130 = einsum(t1, (0, 1), tmp129, (0, 2, 3, 4), (2, 3, 4, 1)) * 2
    del tmp129
    rdm2.vovv += np.transpose(tmp130, (1, 0, 3, 2)) * -1
    rdm2.vovv += einsum(tmp104, (0, 1), t1, (2, 3), (0, 2, 1, 3)) * 2
    rdm2.vovv += np.transpose(tmp112, (1, 0, 3, 2))
    rdm2.vovv += np.transpose(tmp113, (1, 0, 2, 3)) * -1
    rdm2.vovv += np.transpose(tmp124, (1, 0, 3, 2)) * -1
    rdm2.vovv += np.transpose(tmp130, (1, 0, 3, 2)) * -1
    del tmp130
    rdm2.vovv += einsum(tmp104, (0, 1), t1, (2, 3), (0, 2, 1, 3)) * 2
    del tmp104
    rdm2.vovv += np.transpose(tmp127, (1, 0, 2, 3)) * -1
    rdm2.vovv += np.transpose(tmp127, (1, 0, 3, 2))
    del tmp127
    rdm2.vovv += np.transpose(tmp124, (1, 0, 2, 3))
    rdm2.vovv += np.transpose(tmp124, (1, 0, 3, 2)) * -1
    tmp10 = einsum(t2, (0, 1, 2, 3), l1, (3, 4), (4, 0, 1, 2))
    tmp44 = np.copy(tmp10)
    tmp13 = einsum(t1, (0, 1), tmp3, (2, 0, 3, 4), (2, 3, 4, 1))
    tmp44 += tmp13
    tmp17 = einsum(t2, (0, 1, 2, 3), tmp4, (4, 1, 5, 3), (4, 5, 0, 2))
    tmp44 += tmp17
    tmp43 = einsum(tmp4, (0, 1, 2, 3), tmp42, (0, 4, 5, 3), (4, 1, 2, 5))
    del tmp42
    tmp44 += np.transpose(tmp43, (1, 2, 0, 3))
    tmp38 = np.copy(tmp2) * 0.5
    tmp37 = einsum(l2, (0, 1, 2, 3), tmp0, (2, 4, 0, 1), (3, 4))
    del tmp0
    tmp38 += tmp37
    del tmp37
    tmp44 += einsum(tmp38, (0, 1), t1, (2, 3), (0, 2, 1, 3)) * 2
    rdm2.oovo = np.copy(np.transpose(tmp44, (1, 2, 3, 0))) * -1
    rdm2.oovo += np.transpose(tmp44, (2, 1, 3, 0))
    tmp12 = einsum(tmp4, (0, 1, 2, 3), t2, (4, 1, 3, 5), (0, 2, 4, 5))
    rdm2.oovo += np.transpose(tmp12, (1, 2, 3, 0))
    rdm2.oovo += np.transpose(tmp12, (2, 1, 3, 0)) * -1
    tmp33 = np.copy(tmp4) * -1
    tmp33 += np.transpose(tmp4, (1, 0, 2, 3)) * 2
    tmp34 = einsum(t2, (0, 1, 2, 3), tmp33, (0, 1, 4, 3), (4, 2))
    tmp45 = np.copy(tmp34)
    tmp35 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * 2
    tmp35 += t2 * -1
    tmp36 = einsum(l1, (0, 1), tmp35, (1, 2, 3, 0), (2, 3))
    tmp45 += tmp36 * -1
    tmp39 = einsum(t1, (0, 1), tmp38, (0, 2), (2, 1)) * 2
    tmp45 += tmp39
    rdm2.oovo += einsum(δ.oo, (0, 1), tmp45, (2, 3), (2, 0, 3, 1)) * -1
    rdm2.oovo += einsum(δ.oo, (0, 1), tmp45, (2, 3), (0, 2, 3, 1))
    rdm2.oovo += einsum(δ.oo, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.oovo += einsum(t1, (0, 1), δ.oo, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.oovo += np.transpose(tmp10, (1, 2, 3, 0)) * -1
    rdm2.oovo += np.transpose(tmp12, (1, 2, 3, 0))
    rdm2.oovo += np.transpose(tmp17, (2, 1, 3, 0))
    rdm2.oovo += np.transpose(tmp13, (2, 1, 3, 0))
    rdm2.oovo += np.transpose(tmp43, (0, 2, 3, 1))
    tmp49 = np.copy(t1) * -0.5
    tmp46 = einsum(t2, (0, 1, 2, 3), tmp33, (0, 1, 4, 3), (4, 2)) * 0.5
    del tmp33
    tmp49 += tmp46
    del tmp46
    tmp47 = einsum(l1, (0, 1), tmp35, (1, 2, 3, 0), (2, 3)) * 0.5
    del tmp35
    tmp49 += tmp47 * -1
    del tmp47
    tmp48 = einsum(t1, (0, 1), tmp38, (0, 2), (2, 1))
    del tmp38
    tmp49 += tmp48
    del tmp48
    rdm2.oovo += einsum(δ.oo, (0, 1), tmp49, (2, 3), (2, 0, 3, 1)) * -2
    tmp41 = np.copy(tmp2)
    tmp41 += tmp1
    rdm2.oovo += einsum(tmp41, (0, 1), t1, (2, 3), (2, 1, 3, 0)) * -1
    rdm2.oovo += np.transpose(tmp10, (1, 2, 3, 0)) * -1
    rdm2.oovo += np.transpose(tmp12, (1, 2, 3, 0))
    rdm2.oovo += np.transpose(tmp17, (2, 1, 3, 0))
    rdm2.oovo += np.transpose(tmp13, (2, 1, 3, 0))
    rdm2.oovo += np.transpose(tmp43, (0, 2, 3, 1))
    del tmp43
    rdm2.oovo += einsum(δ.oo, (0, 1), tmp49, (2, 3), (2, 0, 3, 1)) * -2
    del tmp49
    rdm2.oovo += einsum(tmp41, (0, 1), t1, (2, 3), (2, 1, 3, 0)) * -1
    rdm2.oovo += np.transpose(tmp44, (1, 2, 3, 0)) * -1
    rdm2.oovo += np.transpose(tmp44, (2, 1, 3, 0))
    del tmp44
    rdm2.oovo += np.transpose(tmp12, (1, 2, 3, 0))
    rdm2.oovo += np.transpose(tmp12, (2, 1, 3, 0)) * -1
    rdm2.oovo += einsum(δ.oo, (0, 1), tmp45, (2, 3), (2, 0, 3, 1)) * -1
    rdm2.oovo += einsum(δ.oo, (0, 1), tmp45, (2, 3), (0, 2, 3, 1))
    rdm2.oovo += einsum(δ.oo, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.oovo += einsum(t1, (0, 1), δ.oo, (2, 3), (2, 0, 1, 3)) * -1
    tmp118 = np.copy(tmp112) * -1
    tmp118 += tmp113 * -1
    tmp73 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 5, 1), (2, 4, 0, 5))
    tmp114 = np.copy(tmp73)
    tmp114 += tmp64 * 0.5
    tmp115 = einsum(t1, (0, 1), tmp114, (0, 2, 3, 4), (2, 3, 4, 1)) * 2
    del tmp114
    tmp118 += np.transpose(tmp115, (0, 1, 3, 2))
    del tmp115
    tmp117 = np.copy(tmp99) * -1
    del tmp99
    tmp116 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 0, 1), (4, 3))
    tmp117 += tmp116
    del tmp116
    tmp118 += einsum(t1, (0, 1), tmp117, (2, 3), (0, 2, 1, 3))
    del tmp117
    rdm2.ovvv = np.copy(tmp118) * -1
    rdm2.ovvv += np.transpose(tmp118, (0, 1, 3, 2))
    tmp119 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 1, 0), (4, 3))
    tmp123 = einsum(tmp119, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    del tmp119
    tmp121 = np.copy(tmp56)
    tmp120 = einsum(l2, (0, 1, 2, 3), tmp19, (3, 4, 5, 1), (4, 2, 5, 0))
    tmp121 += np.transpose(tmp120, (1, 0, 3, 2))
    del tmp120
    tmp122 = einsum(tmp121, (0, 1, 2, 3), t1, (0, 4), (1, 2, 3, 4))
    del tmp121
    tmp123 += np.transpose(tmp122, (0, 1, 3, 2))
    del tmp122
    rdm2.ovvv += tmp123
    rdm2.ovvv += np.transpose(tmp123, (0, 1, 3, 2)) * -1
    rdm2.ovvv += tmp112
    rdm2.ovvv += np.transpose(tmp113, (0, 1, 3, 2)) * -1
    rdm2.ovvv += tmp124 * -1
    rdm2.ovvv += tmp126 * -1
    rdm2.ovvv += einsum(t1, (0, 1), tmp101, (2, 3), (0, 2, 1, 3))
    rdm2.ovvv += tmp112
    del tmp112
    rdm2.ovvv += np.transpose(tmp113, (0, 1, 3, 2)) * -1
    del tmp113
    rdm2.ovvv += tmp124 * -1
    del tmp124
    rdm2.ovvv += tmp126 * -1
    del tmp126
    rdm2.ovvv += einsum(t1, (0, 1), tmp101, (2, 3), (0, 2, 1, 3))
    del tmp101
    rdm2.ovvv += tmp118 * -1
    rdm2.ovvv += np.transpose(tmp118, (0, 1, 3, 2))
    del tmp118
    rdm2.ovvv += tmp123
    rdm2.ovvv += np.transpose(tmp123, (0, 1, 3, 2)) * -1
    del tmp123
    tmp16 = np.copy(tmp10) * -1
    tmp11 = einsum(t2, (0, 1, 2, 3), tmp4, (1, 4, 5, 3), (4, 5, 0, 2))
    tmp16 += tmp11 * 2
    tmp16 += tmp12
    tmp16 += tmp13 * -1
    tmp15 = np.copy(tmp2) * -1
    tmp14 = einsum(t2, (0, 1, 2, 3), l2, (3, 2, 4, 1), (4, 0))
    tmp15 += tmp14
    tmp16 += einsum(t1, (0, 1), tmp15, (2, 3), (2, 0, 3, 1))
    del tmp15
    rdm2.ooov = np.copy(np.transpose(tmp16, (1, 2, 0, 3))) * -1
    rdm2.ooov += np.transpose(tmp16, (2, 1, 0, 3))
    tmp21 = np.copy(tmp17)
    tmp18 = einsum(t2, (0, 1, 2, 3), l2, (2, 3, 4, 1), (4, 0))
    tmp21 += einsum(t1, (0, 1), tmp18, (2, 3), (2, 0, 3, 1)) * 2
    tmp20 = einsum(tmp4, (0, 1, 2, 3), tmp19, (0, 4, 5, 3), (4, 1, 2, 5))
    del tmp19
    tmp21 += np.transpose(tmp20, (1, 2, 0, 3))
    del tmp20
    rdm2.ooov += np.transpose(tmp21, (1, 2, 0, 3))
    rdm2.ooov += np.transpose(tmp21, (2, 1, 0, 3)) * -1
    tmp22 = einsum(t2, (0, 1, 2, 3), l1, (2, 1), (0, 3))
    tmp26 = np.copy(tmp22)
    del tmp22
    tmp23 = einsum(t2, (0, 1, 2, 3), tmp4, (0, 1, 4, 2), (4, 3))
    tmp26 += tmp23 * 2
    del tmp23
    tmp24 = np.copy(tmp2)
    tmp24 += tmp18 * 2
    del tmp18
    tmp25 = einsum(t1, (0, 1), tmp24, (0, 2), (2, 1))
    del tmp24
    tmp26 += tmp25
    del tmp25
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp26, (2, 3), (2, 0, 1, 3))
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp26, (2, 3), (0, 2, 1, 3)) * -1
    tmp27 = einsum(t2, (0, 1, 2, 3), l1, (3, 1), (0, 2))
    tmp30 = np.copy(tmp27)
    del tmp27
    tmp28 = einsum(t2, (0, 1, 2, 3), tmp4, (1, 0, 4, 2), (4, 3))
    tmp30 += tmp28 * 0.5
    del tmp28
    tmp29 = einsum(t1, (0, 1), tmp14, (0, 2), (2, 1))
    del tmp14
    tmp30 += tmp29 * 0.5
    del tmp29
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp30, (2, 3), (2, 0, 1, 3)) * -2
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp30, (2, 3), (0, 2, 1, 3)) * 2
    rdm2.ooov += einsum(δ.oo, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ooov += einsum(t1, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1))
    rdm2.ooov += np.transpose(tmp10, (2, 1, 0, 3)) * -1
    rdm2.ooov += np.transpose(tmp17, (1, 2, 0, 3))
    rdm2.ooov += np.transpose(tmp12, (2, 1, 0, 3))
    rdm2.ooov += np.transpose(tmp13, (1, 2, 0, 3))
    tmp32 = einsum(tmp4, (0, 1, 2, 3), tmp31, (0, 4, 5, 3), (4, 1, 2, 5)) * 2
    del tmp31
    rdm2.ooov += np.transpose(tmp32, (2, 0, 1, 3))
    tmp40 = np.copy(t1) * -1
    tmp40 += tmp34
    tmp40 += tmp36 * -1
    tmp40 += tmp39
    del tmp39
    rdm2.ooov += einsum(tmp40, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1)) * -1
    rdm2.ooov += einsum(t1, (0, 1), tmp41, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.ooov += np.transpose(tmp10, (2, 1, 0, 3)) * -1
    rdm2.ooov += np.transpose(tmp17, (1, 2, 0, 3))
    rdm2.ooov += np.transpose(tmp12, (2, 1, 0, 3))
    rdm2.ooov += np.transpose(tmp13, (1, 2, 0, 3))
    rdm2.ooov += np.transpose(tmp32, (2, 0, 1, 3))
    del tmp32
    rdm2.ooov += einsum(tmp40, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1)) * -1
    del tmp40
    rdm2.ooov += einsum(t1, (0, 1), tmp41, (2, 3), (3, 0, 2, 1)) * -1
    del tmp41
    rdm2.ooov += np.transpose(tmp16, (1, 2, 0, 3)) * -1
    rdm2.ooov += np.transpose(tmp16, (2, 1, 0, 3))
    del tmp16
    rdm2.ooov += np.transpose(tmp21, (1, 2, 0, 3))
    rdm2.ooov += np.transpose(tmp21, (2, 1, 0, 3)) * -1
    del tmp21
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp26, (2, 3), (2, 0, 1, 3))
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp26, (2, 3), (0, 2, 1, 3)) * -1
    del tmp26
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp30, (2, 3), (2, 0, 1, 3)) * -2
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp30, (2, 3), (0, 2, 1, 3)) * 2
    del tmp30
    rdm2.ooov += einsum(δ.oo, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ooov += einsum(t1, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1))
    rdm2.oovv = np.copy(np.transpose(tmp7, (0, 1, 3, 2))) * -1
    rdm2.oovv += tmp7
    tmp50 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 1, 5), (2, 4, 0, 5))
    tmp51 = einsum(tmp50, (0, 1, 2, 3), t2, (4, 0, 2, 5), (4, 1, 5, 3))
    tmp54 = np.copy(tmp51)
    tmp52 = einsum(tmp5, (0, 1, 2, 3), t1, (0, 4), (1, 3, 2, 4))
    tmp53 = einsum(tmp52, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    del tmp52
    tmp54 += tmp53
    del tmp53
    rdm2.oovv += tmp54
    rdm2.oovv += np.transpose(tmp54, (0, 1, 3, 2)) * -1
    tmp55 = einsum(t2, (0, 1, 2, 3), tmp2, (1, 4), (4, 0, 2, 3))
    tmp62 = np.copy(tmp55)
    tmp58 = np.copy(tmp56)
    del tmp56
    tmp57 = einsum(t1, (0, 1), tmp4, (2, 0, 3, 4), (2, 3, 4, 1))
    tmp58 += tmp57
    del tmp57
    tmp59 = einsum(tmp58, (0, 1, 2, 3), t2, (4, 0, 2, 5), (1, 4, 3, 5))
    del tmp58
    tmp62 += tmp59
    tmp60 = np.copy(tmp10)
    tmp60 += tmp17
    tmp61 = einsum(tmp60, (0, 1, 2, 3), t1, (0, 4), (1, 2, 3, 4))
    del tmp60
    tmp62 += np.transpose(tmp61, (0, 1, 3, 2))
    del tmp61
    rdm2.oovv += tmp62
    rdm2.oovv += np.transpose(tmp62, (0, 1, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp62, (1, 0, 2, 3)) * -1
    rdm2.oovv += np.transpose(tmp62, (1, 0, 3, 2))
    tmp63 = einsum(tmp3, (0, 1, 2, 3), t2, (1, 0, 4, 5), (2, 3, 5, 4))
    del tmp3
    tmp71 = np.copy(tmp63)
    tmp65 = einsum(tmp64, (0, 1, 2, 3), t2, (4, 0, 2, 5), (4, 1, 5, 3))
    del tmp64
    tmp71 += tmp65 * -1
    tmp66 = einsum(tmp5, (0, 1, 2, 3), t2, (0, 1, 4, 5), (2, 3, 4, 5))
    tmp71 += tmp66
    del tmp66
    tmp67 = einsum(tmp13, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    del tmp13
    tmp71 += tmp67
    tmp68 = np.copy(np.transpose(l2, (3, 2, 0, 1))) * -1
    tmp68 += np.transpose(l2, (2, 3, 0, 1)) * 2
    tmp69 = einsum(t2, (0, 1, 2, 3), tmp68, (1, 4, 3, 5), (4, 0, 5, 2)) * 0.5
    tmp70 = einsum(t2, (0, 1, 2, 3), tmp69, (1, 4, 3, 5), (4, 0, 5, 2)) * 4
    del tmp69
    tmp71 += np.transpose(tmp70, (1, 0, 3, 2))
    del tmp70
    rdm2.oovv += tmp71
    rdm2.oovv += np.transpose(tmp71, (0, 1, 3, 2)) * -1
    tmp72 = einsum(tmp11, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    del tmp11
    tmp81 = np.copy(tmp72) * 2
    tmp75 = np.copy(tmp73) * 2
    del tmp73
    tmp74 = einsum(t1, (0, 1), tmp4, (0, 2, 3, 4), (2, 3, 4, 1))
    del tmp4
    tmp75 += tmp74
    del tmp74
    tmp76 = einsum(t2, (0, 1, 2, 3), tmp75, (1, 4, 2, 5), (4, 0, 5, 3))
    del tmp75
    tmp81 += tmp76
    del tmp76
    tmp79 = einsum(t2, (0, 1, 2, 3), tmp78, (2, 4), (0, 1, 4, 3)) * 2
    del tmp78
    tmp81 += np.transpose(tmp79, (1, 0, 3, 2))
    tmp80 = einsum(tmp1, (0, 1), t2, (2, 0, 3, 4), (2, 1, 4, 3))
    tmp81 += np.transpose(tmp80, (0, 1, 3, 2))
    tmp81 += einsum(tmp45, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    del tmp45
    rdm2.oovv += tmp81 * -1
    rdm2.oovv += np.transpose(tmp81, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp81, (1, 0, 2, 3))
    rdm2.oovv += np.transpose(tmp81, (1, 0, 3, 2)) * -1
    rdm2.oovv += t2
    rdm2.oovv += tmp51
    rdm2.oovv += np.transpose(tmp65, (0, 1, 3, 2))
    rdm2.oovv += tmp63
    rdm2.oovv += tmp67
    tmp82 = einsum(tmp2, (0, 1), t1, (0, 2), (1, 2))
    del tmp2
    rdm2.oovv += einsum(tmp82, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * -1
    tmp83 = einsum(tmp17, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    del tmp17
    tmp84 = np.copy(tmp83)
    del tmp83
    tmp84 += tmp59
    del tmp59
    rdm2.oovv += tmp84
    rdm2.oovv += np.transpose(tmp84, (1, 0, 3, 2))
    tmp85 = einsum(t2, (0, 1, 2, 3), tmp50, (1, 4, 3, 5), (0, 4, 2, 5))
    del tmp50
    tmp88 = np.copy(tmp85) * 2
    del tmp85
    tmp88 += tmp72 * 2
    del tmp72
    tmp88 += np.transpose(tmp79, (1, 0, 3, 2))
    del tmp79
    tmp88 += np.transpose(tmp80, (0, 1, 3, 2))
    del tmp80
    tmp87 = np.copy(tmp34)
    del tmp34
    tmp87 += tmp36 * -1
    del tmp36
    tmp86 = einsum(t1, (0, 1), tmp1, (0, 2), (2, 1))
    del tmp1
    tmp87 += tmp86
    del tmp86
    tmp88 += einsum(tmp87, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    del tmp87
    rdm2.oovv += tmp88 * -1
    rdm2.oovv += np.transpose(tmp88, (1, 0, 3, 2)) * -1
    tmp89 = einsum(tmp12, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    del tmp12
    rdm2.oovv += np.transpose(tmp89, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp89, (1, 0, 2, 3))
    tmp91 = np.copy(tmp55)
    del tmp55
    tmp90 = einsum(tmp10, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    del tmp10
    tmp91 += tmp90
    del tmp90
    rdm2.oovv += np.transpose(tmp91, (0, 1, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp91, (1, 0, 2, 3)) * -1
    tmp92 = einsum(t2, (0, 1, 2, 3), tmp68, (1, 4, 3, 5), (4, 0, 5, 2))
    del tmp68
    tmp93 = einsum(t2, (0, 1, 2, 3), tmp92, (1, 4, 3, 5), (4, 0, 5, 2)) * 2
    del tmp92
    rdm2.oovv += np.transpose(tmp93, (1, 0, 3, 2))
    tmp94 = einsum(tmp5, (0, 1, 2, 3), tmp7, (0, 1, 4, 5), (2, 3, 4, 5))
    del tmp5
    rdm2.oovv += np.transpose(tmp94, (1, 0, 3, 2))
    tmp95 = np.copy(t1)
    tmp95 += tmp82 * -1
    rdm2.oovv += einsum(tmp95, (0, 1), t1, (2, 3), (0, 2, 1, 3))
    rdm2.oovv += t2
    rdm2.oovv += tmp51
    del tmp51
    rdm2.oovv += np.transpose(tmp65, (0, 1, 3, 2))
    del tmp65
    rdm2.oovv += tmp63
    del tmp63
    rdm2.oovv += tmp67
    del tmp67
    rdm2.oovv += einsum(tmp82, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * -1
    del tmp82
    rdm2.oovv += tmp84
    rdm2.oovv += np.transpose(tmp84, (1, 0, 3, 2))
    del tmp84
    rdm2.oovv += tmp88 * -1
    rdm2.oovv += np.transpose(tmp88, (1, 0, 3, 2)) * -1
    del tmp88
    rdm2.oovv += np.transpose(tmp89, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp89, (1, 0, 2, 3))
    del tmp89
    rdm2.oovv += np.transpose(tmp91, (0, 1, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp91, (1, 0, 2, 3)) * -1
    del tmp91
    rdm2.oovv += np.transpose(tmp93, (1, 0, 3, 2))
    del tmp93
    rdm2.oovv += np.transpose(tmp94, (1, 0, 3, 2))
    del tmp94
    rdm2.oovv += einsum(tmp95, (0, 1), t1, (2, 3), (0, 2, 1, 3))
    del tmp95
    rdm2.oovv += np.transpose(tmp7, (0, 1, 3, 2)) * -1
    rdm2.oovv += tmp7
    del tmp7
    rdm2.oovv += tmp54
    rdm2.oovv += np.transpose(tmp54, (0, 1, 3, 2)) * -1
    del tmp54
    rdm2.oovv += tmp62
    rdm2.oovv += np.transpose(tmp62, (0, 1, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp62, (1, 0, 2, 3)) * -1
    rdm2.oovv += np.transpose(tmp62, (1, 0, 3, 2))
    del tmp62
    rdm2.oovv += tmp71
    rdm2.oovv += np.transpose(tmp71, (0, 1, 3, 2)) * -1
    del tmp71
    rdm2.oovv += tmp81 * -1
    rdm2.oovv += np.transpose(tmp81, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp81, (1, 0, 2, 3))
    rdm2.oovv += np.transpose(tmp81, (1, 0, 3, 2)) * -1
    del tmp81

    rdm2 = pack_2e(rdm2.oooo, rdm2.ooov, rdm2.oovo, rdm2.ovoo, rdm2.vooo, rdm2.oovv, rdm2.ovov, rdm2.ovvo, rdm2.voov, rdm2.vovo, rdm2.vvoo, rdm2.ovvv, rdm2.vovv, rdm2.vvov, rdm2.vvvo, rdm2.vvvv).transpose((0, 2, 1, 3))

    return rdm2

def hbar_matvec_ip_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp1: 
        tmp10: 
        tmp13: 
        tmp17: 
        tmp19: 
        tmp20: 
        tmp22: 
        tmp24: 
        tmp25: 
        tmp3: 
        tmp31: 
    """

    tmp0 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 1), (4, 2, 0, 3))
    tmp1 = np.copy(tmp0)
    tmp1 += np.transpose(tmp0, (0, 2, 1, 3)) * -0.5
    tmp2 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3)))
    tmp2 += np.transpose(v.ovov, (2, 0, 3, 1)) * -0.5
    tmp3 = einsum(t1, (0, 1), tmp2, (0, 2, 3, 1), (2, 3)) * 2
    del tmp2
    tmp13 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1)))
    tmp13 += einsum(v.ooov, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3)) * -1
    tmp13 += einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp13 += einsum(t2, (0, 1, 2, 3), v.ovov, (1, 4, 5, 3), (0, 5, 2, 4)) * -1
    tmp12 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -1
    tmp12 += np.transpose(t2, (1, 0, 3, 2)) * 2
    tmp13 += einsum(tmp12, (0, 1, 2, 3), v.ovov, (0, 2, 4, 5), (1, 4, 3, 5))
    del tmp12
    tmp19 = np.copy(np.transpose(v.oooo, (2, 3, 1, 0)))
    tmp19 += einsum(t2, (0, 1, 2, 3), v.ovov, (4, 3, 5, 2), (4, 1, 0, 5))
    tmp18 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp19 += np.transpose(tmp18, (3, 0, 2, 1))
    tmp19 += np.transpose(tmp18, (2, 1, 0, 3))
    del tmp18
    tmp5 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp10 = np.copy(tmp5)
    tmp6 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * 2
    tmp6 += np.transpose(v.ovov, (2, 0, 3, 1)) * -1
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp6, (0, 4, 3, 2), (4, 1))
    del tmp6
    tmp10 += tmp7
    tmp8 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -0.5
    tmp8 += np.transpose(v.ooov, (2, 1, 0, 3))
    tmp9 = einsum(tmp8, (0, 1, 2, 3), t1, (0, 3), (1, 2)) * 2
    del tmp8
    tmp10 += np.transpose(tmp9, (1, 0))
    tmp22 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp22 += einsum(t1, (0, 1), f.ov, (0, 2), (2, 1)) * -1
    tmp20 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * -0.5
    tmp20 += np.transpose(v.ovov, (2, 0, 3, 1))
    tmp22 += einsum(t2, (0, 1, 2, 3), tmp20, (0, 1, 2, 4), (4, 3)) * -2
    tmp21 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2))) * -0.5
    tmp21 += np.transpose(v.ovvv, (0, 3, 1, 2))
    tmp22 += einsum(t1, (0, 1), tmp21, (0, 2, 1, 3), (2, 3)) * 2
    del tmp21
    tmp25 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp25 += tmp5
    del tmp5
    tmp25 += tmp7
    del tmp7
    tmp25 += np.transpose(tmp9, (1, 0))
    del tmp9
    tmp17 = np.copy(np.transpose(v.oovv, (1, 0, 3, 2))) * -1
    tmp14 = einsum(t1, (0, 1), v.ooov, (2, 3, 0, 4), (2, 3, 1, 4))
    tmp17 += np.transpose(tmp14, (1, 0, 2, 3))
    del tmp14
    tmp15 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3))
    tmp17 += np.transpose(tmp15, (1, 0, 3, 2)) * -1
    del tmp15
    tmp16 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 0, 3, 5), (4, 2, 5, 1))
    tmp17 += np.transpose(tmp16, (1, 0, 2, 3))
    del tmp16
    tmp24 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3)))
    tmp24 += einsum(t1, (0, 1), v.oooo, (2, 3, 4, 0), (3, 2, 4, 1)) * -1
    tmp24 += einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 1, 0, 2))
    tmp24 += np.transpose(tmp0, (2, 0, 1, 3))
    del tmp0
    tmp24 += einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (3, 2, 0, 4))
    tmp24 += einsum(v.ooov, (0, 1, 2, 3), t2, (4, 1, 3, 5), (2, 4, 0, 5)) * -1
    tmp24 += einsum(v.ooov, (0, 1, 2, 3), t2, (4, 2, 3, 5), (1, 0, 4, 5)) * -1
    tmp24 += einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 1, 3), (0, 4, 5, 2))
    tmp23 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -1
    tmp23 += np.transpose(v.ooov, (2, 1, 0, 3)) * 2
    tmp24 += einsum(t2, (0, 1, 2, 3), tmp23, (0, 4, 5, 2), (5, 4, 1, 3))
    del tmp23
    tmp31 = np.copy(f.ov)
    tmp31 += einsum(t1, (0, 1), f.oo, (2, 0), (2, 1)) * -1
    tmp31 += einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    tmp27 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2)))
    tmp27 += np.transpose(v.ovvv, (0, 3, 1, 2)) * -0.5
    tmp31 += einsum(t2, (0, 1, 2, 3), tmp27, (0, 2, 3, 4), (1, 4)) * 2
    del tmp27
    tmp28 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3)))
    tmp28 += np.transpose(v.ooov, (2, 1, 0, 3)) * -0.5
    tmp31 += einsum(t2, (0, 1, 2, 3), tmp28, (1, 4, 0, 2), (4, 3)) * -2
    del tmp28
    tmp29 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1)))
    tmp29 += np.transpose(v.oovv, (1, 0, 3, 2)) * -0.5
    tmp31 += einsum(tmp29, (0, 1, 2, 3), t1, (0, 2), (1, 3)) * 2
    del tmp29
    tmp30 = np.copy(np.transpose(t2, (1, 0, 2, 3)))
    tmp30 += np.transpose(t2, (1, 0, 3, 2)) * -0.5
    tmp31 += einsum(tmp30, (0, 1, 2, 3), f.ov, (0, 3), (1, 2)) * 2
    del tmp30

    return {"tmp1": tmp1, "tmp10": tmp10, "tmp13": tmp13, "tmp17": tmp17, "tmp19": tmp19, "tmp20": tmp20, "tmp22": tmp22, "tmp24": tmp24, "tmp25": tmp25, "tmp3": tmp3, "tmp31": tmp31}

def hbar_matvec_ip(ints=None, r1=None, r2=None, t2=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        ints: 
        r1: 
        r2: 
        t2: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(r1, (0,), ints.tmp10, (0, 1), (1,)) * -1
    r1new += einsum(r2, (0, 1, 2), ints.tmp1, (3, 0, 1, 2), (3,)) * 2
    tmp0 = np.copy(r2) * 2
    tmp0 += np.transpose(r2, (1, 0, 2)) * -1
    r1new += einsum(tmp0, (0, 1, 2), ints.tmp3, (0, 2), (1,)) * -1
    del tmp0
    r2new = einsum(ints.tmp17, (0, 1, 2, 3), r2, (4, 0, 3), (4, 1, 2))
    r2new += einsum(ints.tmp17, (0, 1, 2, 3), r2, (0, 4, 3), (1, 4, 2))
    r2new += einsum(ints.tmp22, (0, 1), r2, (2, 3, 0), (2, 3, 1))
    tmp1 = einsum(r2, (0, 1, 2), ints.tmp20, (1, 0, 3, 2), (3,))
    r2new += einsum(tmp1, (0,), t2, (1, 2, 3, 0), (1, 2, 3)) * -2
    del tmp1
    r2new += einsum(r1, (0,), ints.tmp31, (1, 2), (1, 0, 2)) * -1
    r2new += einsum(ints.tmp24, (0, 1, 2, 3), r1, (0,), (2, 1, 3))
    r2new += einsum(ints.tmp25, (0, 1), r2, (0, 2, 3), (1, 2, 3)) * -1
    r2new += einsum(r2, (0, 1, 2), ints.tmp25, (1, 3), (0, 3, 2)) * -1
    r2new += einsum(ints.tmp19, (0, 1, 2, 3), r2, (3, 0, 4), (2, 1, 4))
    tmp2 = np.copy(r2) * -1
    tmp2 += np.transpose(r2, (1, 0, 2)) * 2
    r2new += einsum(ints.tmp13, (0, 1, 2, 3), tmp2, (4, 1, 3), (0, 4, 2))
    del tmp2

    return {"r1new": r1new, "r2new": r2new}

def hbar_matvec_ea_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp0: 
        tmp1: 
        tmp10: 
        tmp14: 
        tmp16: 
        tmp19: 
        tmp21: 
        tmp27: 
        tmp6: 
        tmp8: 
    """

    tmp0 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3)))
    tmp0 += np.transpose(v.ovov, (2, 0, 3, 1)) * -0.5
    tmp1 = einsum(t1, (0, 1), tmp0, (0, 2, 3, 1), (2, 3)) * 2
    tmp3 = einsum(t1, (0, 1), f.ov, (0, 2), (2, 1))
    tmp6 = np.copy(tmp3) * 0.5
    tmp4 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * 2
    tmp4 += np.transpose(v.ovov, (2, 0, 3, 1)) * -1
    tmp6 += einsum(tmp4, (0, 1, 2, 3), t2, (0, 1, 4, 2), (3, 4)) * 0.5
    tmp5 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2))) * -1
    tmp5 += np.transpose(v.ovvv, (0, 3, 1, 2)) * 2
    tmp6 += einsum(t1, (0, 1), tmp5, (0, 2, 1, 3), (2, 3)) * -0.5
    tmp8 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3)))
    tmp8 += einsum(t1, (0, 1), v.ooov, (2, 0, 3, 4), (2, 3, 4, 1)) * -1
    tmp8 += einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp8 += einsum(v.ovov, (0, 1, 2, 3), t2, (4, 0, 1, 5), (4, 2, 3, 5)) * -1
    tmp8 += einsum(t2, (0, 1, 2, 3), tmp4, (0, 4, 5, 2), (1, 4, 5, 3))
    tmp10 = np.copy(np.transpose(v.vvvv, (2, 3, 1, 0)))
    tmp10 += einsum(t2, (0, 1, 2, 3), v.ovov, (0, 4, 1, 5), (5, 3, 2, 4))
    tmp9 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 4), (4, 1, 2, 3))
    tmp10 += np.transpose(tmp9, (1, 0, 3, 2)) * -1
    tmp10 += np.transpose(tmp9, (3, 2, 0, 1)) * -1
    del tmp9
    tmp21 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp21 += einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp21 += einsum(t2, (0, 1, 2, 3), tmp4, (0, 4, 3, 2), (4, 1))
    tmp20 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -0.5
    tmp20 += np.transpose(v.ooov, (2, 1, 0, 3))
    tmp21 += einsum(tmp20, (0, 1, 2, 3), t1, (0, 3), (2, 1)) * 2
    del tmp20
    tmp14 = np.copy(np.transpose(v.oovv, (1, 0, 3, 2)))
    tmp11 = einsum(t1, (0, 1), v.ooov, (2, 3, 0, 4), (2, 3, 1, 4))
    tmp14 += np.transpose(tmp11, (1, 0, 3, 2)) * -1
    del tmp11
    tmp12 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3))
    tmp14 += np.transpose(tmp12, (0, 1, 3, 2))
    del tmp12
    tmp13 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 0, 3, 5), (4, 2, 5, 1))
    tmp14 += np.transpose(tmp13, (0, 1, 3, 2)) * -1
    del tmp13
    tmp19 = np.copy(np.transpose(f.vv, (1, 0))) * -1
    tmp19 += tmp3
    del tmp3
    tmp17 = einsum(tmp4, (0, 1, 2, 3), t2, (0, 1, 4, 2), (3, 4))
    del tmp4
    tmp19 += tmp17
    del tmp17
    tmp18 = einsum(t1, (0, 1), tmp5, (0, 2, 1, 3), (2, 3))
    del tmp5
    tmp19 += tmp18 * -1
    del tmp18
    tmp16 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2))) * -1
    tmp16 += einsum(t2, (0, 1, 2, 3), f.ov, (1, 4), (0, 2, 4, 3))
    tmp16 += einsum(t1, (0, 1), v.oovv, (2, 0, 3, 4), (2, 1, 4, 3))
    tmp16 += einsum(t1, (0, 1), v.ovov, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp16 += einsum(t1, (0, 1), v.vvvv, (2, 1, 3, 4), (0, 2, 3, 4)) * -1
    tmp16 += einsum(t2, (0, 1, 2, 3), v.ooov, (4, 1, 0, 5), (4, 3, 5, 2)) * -1
    tmp16 += einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 0, 5, 3), (4, 5, 1, 2))
    tmp16 += einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 2), (0, 5, 4, 3))
    tmp15 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * 2
    tmp15 += np.transpose(t2, (1, 0, 3, 2)) * -1
    tmp16 += einsum(v.ovvv, (0, 1, 2, 3), tmp15, (0, 4, 5, 1), (4, 5, 3, 2)) * -1
    del tmp15
    tmp27 = np.copy(f.ov) * 0.5
    tmp27 += einsum(t1, (0, 1), f.oo, (2, 0), (2, 1)) * -0.5
    tmp27 += einsum(f.vv, (0, 1), t1, (2, 1), (2, 0)) * 0.5
    tmp23 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2))) * -0.5
    tmp23 += np.transpose(v.ovvv, (0, 3, 1, 2))
    tmp27 += einsum(t2, (0, 1, 2, 3), tmp23, (0, 3, 2, 4), (1, 4))
    del tmp23
    tmp24 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3)))
    tmp24 += np.transpose(v.ooov, (2, 1, 0, 3)) * -0.5
    tmp27 += einsum(t2, (0, 1, 2, 3), tmp24, (1, 4, 0, 2), (4, 3)) * -1
    del tmp24
    tmp25 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1)))
    tmp25 += np.transpose(v.oovv, (1, 0, 3, 2)) * -0.5
    tmp27 += einsum(t1, (0, 1), tmp25, (0, 2, 1, 3), (2, 3))
    del tmp25
    tmp26 = np.copy(np.transpose(t2, (1, 0, 2, 3)))
    tmp26 += np.transpose(t2, (1, 0, 3, 2)) * -0.5
    tmp27 += einsum(tmp26, (0, 1, 2, 3), f.ov, (0, 3), (1, 2))
    del tmp26

    return {"tmp0": tmp0, "tmp1": tmp1, "tmp10": tmp10, "tmp14": tmp14, "tmp16": tmp16, "tmp19": tmp19, "tmp21": tmp21, "tmp27": tmp27, "tmp6": tmp6, "tmp8": tmp8}

def hbar_matvec_ea(ints=None, r1=None, r2=None, t1=None, t2=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        ints: 
        r1: 
        r2: 
        t1: 
        t2: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(r1, (0,), ints.tmp6, (0, 1), (1,)) * -2
    tmp0 = einsum(ints.tmp0, (0, 1, 2, 3), r2, (3, 2, 0), (1,))
    r1new += einsum(tmp0, (0,), t1, (0, 1), (1,)) * 2
    tmp1 = np.copy(np.transpose(r2, (2, 0, 1))) * 2
    tmp1 += np.transpose(r2, (2, 1, 0)) * -1
    r1new += einsum(ints.tmp1, (0, 1), tmp1, (0, 1, 2), (2,)) * -1
    del tmp1
    r2new = einsum(t2, (0, 1, 2, 3), tmp0, (1,), (2, 3, 0)) * -2
    del tmp0
    r2new += einsum(r2, (0, 1, 2), ints.tmp14, (3, 2, 1, 4), (0, 4, 3)) * -1
    r2new += einsum(r2, (0, 1, 2), ints.tmp14, (3, 2, 0, 4), (4, 1, 3)) * -1
    r2new += einsum(r2, (0, 1, 2), ints.tmp10, (1, 3, 4, 0), (4, 3, 2))
    r2new += einsum(r1, (0,), ints.tmp16, (1, 2, 0, 3), (2, 3, 1))
    r2new += einsum(r2, (0, 1, 2), ints.tmp19, (0, 3), (3, 1, 2)) * -1
    r2new += einsum(ints.tmp19, (0, 1), r2, (2, 0, 3), (2, 1, 3)) * -1
    r2new += einsum(ints.tmp27, (0, 1), r1, (2,), (1, 2, 0)) * -2
    r2new += einsum(r2, (0, 1, 2), ints.tmp21, (2, 3), (0, 1, 3)) * -1
    tmp2 = np.copy(np.transpose(r2, (2, 0, 1))) * -1
    tmp2 += np.transpose(r2, (2, 1, 0)) * 2
    r2new += einsum(tmp2, (0, 1, 2), ints.tmp8, (3, 0, 2, 4), (4, 1, 3))
    del tmp2

    return {"r1new": r1new, "r2new": r2new}

def hbar_lmatvec_ip_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp12: 
        tmp16: 
        tmp19: 
        tmp23: 
        tmp28: 
        tmp29: 
        tmp31: 
        tmp32: 
        tmp36: 
        tmp37: 
        tmp39: 
        tmp42: 
    """

    tmp32 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1)))
    tmp32 += einsum(v.ooov, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3)) * -1
    tmp32 += einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp32 += einsum(t2, (0, 1, 2, 3), v.ovov, (4, 2, 0, 5), (1, 4, 3, 5)) * -1
    tmp31 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -1
    tmp31 += np.transpose(t2, (1, 0, 3, 2)) * 2
    tmp32 += einsum(v.ovov, (0, 1, 2, 3), tmp31, (0, 4, 1, 5), (4, 2, 5, 3))
    tmp37 = np.copy(np.transpose(v.oooo, (2, 3, 1, 0)))
    tmp29 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp37 += np.transpose(tmp29, (2, 1, 3, 0))
    tmp37 += einsum(v.ovov, (0, 1, 2, 3), t2, (4, 5, 3, 1), (5, 0, 2, 4))
    tmp39 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp39 += einsum(f.ov, (0, 1), t1, (0, 2), (2, 1)) * -1
    tmp21 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * -1
    tmp21 += np.transpose(v.ovov, (2, 0, 3, 1)) * 2
    tmp39 += einsum(tmp21, (0, 1, 2, 3), t2, (0, 1, 2, 4), (4, 3)) * -1
    tmp38 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2)))
    tmp38 += np.transpose(v.ovvv, (0, 3, 1, 2)) * -0.5
    tmp39 += einsum(tmp38, (0, 1, 2, 3), t1, (0, 1), (3, 2)) * 2
    del tmp38
    tmp14 = np.copy(np.transpose(t2, (1, 0, 2, 3)))
    tmp14 += np.transpose(t2, (1, 0, 3, 2)) * -0.5
    tmp13 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3)))
    tmp13 += np.transpose(v.ooov, (1, 2, 0, 3)) * -0.5
    tmp8 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp13 += tmp8 * -0.5
    tmp13 += np.transpose(tmp8, (0, 2, 1, 3))
    tmp16 = einsum(tmp13, (0, 1, 2, 3), tmp14, (2, 4, 5, 3), (0, 4, 1, 5)) * -4
    del tmp13, tmp14
    tmp15 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1))) * 2
    tmp15 += np.transpose(v.oovv, (1, 0, 3, 2)) * -1
    tmp16 += einsum(tmp15, (0, 1, 2, 3), t1, (4, 2), (4, 1, 0, 3)) * -1
    tmp25 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp28 = np.copy(tmp25)
    tmp28 += einsum(t2, (0, 1, 2, 3), tmp21, (0, 4, 2, 3), (4, 1))
    tmp26 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -0.5
    tmp26 += np.transpose(v.ooov, (2, 1, 0, 3))
    tmp27 = einsum(t1, (0, 1), tmp26, (0, 2, 3, 1), (2, 3)) * 2
    del tmp26
    tmp28 += np.transpose(tmp27, (1, 0))
    tmp36 = np.copy(np.transpose(v.oovv, (1, 0, 3, 2))) * -1
    tmp33 = einsum(t1, (0, 1), v.ooov, (2, 3, 0, 4), (2, 3, 1, 4))
    tmp36 += np.transpose(tmp33, (1, 0, 2, 3))
    del tmp33
    tmp34 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3))
    tmp36 += np.transpose(tmp34, (0, 1, 3, 2)) * -1
    del tmp34
    tmp35 = einsum(v.ovov, (0, 1, 2, 3), t2, (0, 4, 5, 3), (4, 2, 5, 1))
    tmp36 += tmp35
    del tmp35
    tmp42 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp42 += np.transpose(tmp25, (1, 0))
    del tmp25
    tmp5 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3)))
    tmp5 += np.transpose(v.ovov, (2, 0, 3, 1)) * -0.5
    tmp41 = einsum(tmp5, (0, 1, 2, 3), t2, (0, 4, 3, 2), (4, 1)) * 2
    tmp42 += tmp41
    del tmp41
    tmp42 += tmp27
    del tmp27
    tmp0 = einsum(t1, (0, 1), v.oooo, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp12 = np.copy(np.transpose(tmp0, (1, 2, 0, 3))) * -0.5
    tmp12 += np.transpose(tmp0, (2, 1, 0, 3))
    del tmp0
    tmp1 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 2), (4, 1, 0, 3))
    tmp12 += np.transpose(tmp1, (1, 2, 0, 3)) * -1
    tmp12 += np.transpose(tmp1, (2, 1, 0, 3)) * 0.5
    del tmp1
    tmp3 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2)))
    tmp2 = einsum(v.ovov, (0, 1, 2, 3), t1, (2, 4), (0, 4, 1, 3))
    tmp3 += np.transpose(tmp2, (0, 2, 3, 1)) * -1
    del tmp2
    tmp4 = einsum(t2, (0, 1, 2, 3), tmp3, (4, 3, 2, 5), (0, 1, 4, 5)) * 0.5
    del tmp3
    tmp12 += np.transpose(tmp4, (1, 0, 2, 3))
    tmp12 += tmp4 * -2
    del tmp4
    tmp6 = einsum(t1, (0, 1), tmp5, (0, 2, 3, 1), (2, 3)) * 2
    del tmp5
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp6, (4, 2), (0, 1, 4, 3))
    tmp12 += np.transpose(tmp7, (1, 0, 2, 3)) * -1
    tmp12 += tmp7 * 0.5
    del tmp7
    tmp9 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * 2
    tmp9 += np.transpose(v.ooov, (1, 2, 0, 3)) * -1
    tmp9 += tmp8 * -1
    tmp9 += np.transpose(tmp8, (0, 2, 1, 3)) * 2
    tmp12 += einsum(tmp9, (0, 1, 2, 3), t2, (2, 4, 3, 5), (0, 4, 1, 5)) * 0.5
    del tmp9
    tmp10 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -0.5
    tmp10 += np.transpose(v.ooov, (1, 2, 0, 3))
    tmp10 += tmp8
    tmp10 += np.transpose(tmp8, (0, 2, 1, 3)) * -0.5
    tmp12 += einsum(t2, (0, 1, 2, 3), tmp10, (4, 5, 0, 3), (4, 1, 5, 2))
    del tmp10
    tmp11 = np.copy(np.transpose(v.oovv, (1, 0, 3, 2))) * 2
    tmp11 += np.transpose(v.ovov, (2, 0, 3, 1)) * -1
    tmp12 += einsum(tmp11, (0, 1, 2, 3), t1, (4, 2), (4, 1, 0, 3)) * -0.5
    del tmp11
    tmp23 = einsum(f.vv, (0, 1), t1, (2, 0), (2, 1)) * -0.5
    tmp23 += einsum(t2, (0, 1, 2, 3), v.ooov, (1, 4, 0, 3), (4, 2)) * -0.5
    tmp17 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -0.5
    tmp17 += np.transpose(t2, (1, 0, 3, 2))
    tmp23 += einsum(tmp17, (0, 1, 2, 3), v.ovvv, (0, 2, 3, 4), (1, 4)) * -1
    del tmp17
    tmp18 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3)))
    tmp18 += np.transpose(tmp8, (1, 0, 2, 3)) * -0.5
    tmp18 += np.transpose(tmp8, (2, 0, 1, 3))
    del tmp8
    tmp23 += einsum(t2, (0, 1, 2, 3), tmp18, (1, 4, 0, 2), (4, 3))
    del tmp18
    tmp20 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * 2
    tmp20 += np.transpose(t2, (1, 0, 3, 2)) * -1
    tmp19 = np.copy(f.ov)
    tmp19 += tmp6
    del tmp6
    tmp23 += einsum(tmp19, (0, 1), tmp20, (0, 2, 3, 1), (2, 3)) * -0.5
    del tmp20
    tmp23 += einsum(t1, (0, 1), tmp15, (0, 2, 1, 3), (2, 3)) * -0.5
    del tmp15
    tmp22 = np.copy(np.transpose(f.oo, (1, 0))) * 0.5
    tmp22 += einsum(t2, (0, 1, 2, 3), tmp21, (0, 4, 2, 3), (4, 1)) * 0.5
    del tmp21
    tmp23 += einsum(t1, (0, 1), tmp22, (0, 2), (2, 1))
    del tmp22

    return {"tmp12": tmp12, "tmp16": tmp16, "tmp19": tmp19, "tmp23": tmp23, "tmp28": tmp28, "tmp29": tmp29, "tmp31": tmp31, "tmp32": tmp32, "tmp36": tmp36, "tmp37": tmp37, "tmp39": tmp39, "tmp42": tmp42}

def hbar_lmatvec_ip(ints=None, r1=None, r2=None, t1=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        ints: 
        r1: 
        r2: 
        t1: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(ints.tmp28, (0, 1), r1, (1,), (0,)) * -1
    r1new += einsum(r2, (0, 1, 2), ints.tmp16, (1, 0, 3, 2), (3,)) * -1
    r1new += einsum(ints.tmp12, (0, 1, 2, 3), r2, (0, 1, 3), (2,)) * -2
    tmp0 = np.copy(r2)
    tmp0 += np.transpose(r2, (1, 0, 2)) * -0.5
    r1new += einsum(ints.tmp23, (0, 1), tmp0, (0, 2, 1), (2,)) * 4
    del tmp0
    r2new = einsum(r2, (0, 1, 2), ints.tmp36, (1, 3, 2, 4), (0, 3, 4))
    r2new += einsum(r2, (0, 1, 2), ints.tmp36, (0, 3, 2, 4), (3, 1, 4))
    r2new += einsum(ints.tmp39, (0, 1), r2, (2, 3, 0), (2, 3, 1))
    r2new += einsum(r1, (0,), ints.tmp19, (1, 2), (1, 0, 2)) * -1
    r2new += einsum(v.ooov, (0, 1, 2, 3), r1, (1,), (2, 0, 3))
    r2new += einsum(r2, (0, 1, 2), ints.tmp42, (0, 3), (3, 1, 2)) * -1
    r2new += einsum(r2, (0, 1, 2), ints.tmp42, (1, 3), (0, 3, 2)) * -1
    tmp1 = np.copy(r2) * -1
    tmp1 += np.transpose(r2, (1, 0, 2)) * 2
    r2new += einsum(ints.tmp32, (0, 1, 2, 3), tmp1, (4, 0, 2), (1, 4, 3))
    del tmp1
    tmp2 = np.copy(ints.tmp29)
    tmp2 += np.transpose(ints.tmp37, (0, 2, 3, 1))
    r2new += einsum(tmp2, (0, 1, 2, 3), r2, (2, 0, 4), (1, 3, 4))
    del tmp2
    tmp3 = einsum(r1, (0,), t1, (0, 1), (1,)) * -1
    tmp3 += einsum(ints.tmp31, (0, 1, 2, 3), r2, (1, 0, 3), (2,))
    r2new += einsum(v.ovov, (0, 1, 2, 3), tmp3, (1,), (2, 0, 3)) * -1
    del tmp3

    return {"r1new": r1new, "r2new": r2new}

def hbar_lmatvec_ea_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp13: 
        tmp17: 
        tmp20: 
        tmp23: 
        tmp28: 
        tmp30: 
        tmp34: 
        tmp35: 
        tmp38: 
        tmp41: 
        tmp9: 
    """

    tmp35 = np.copy(np.transpose(v.vvvv, (2, 3, 1, 0)))
    tmp35 += einsum(t1, (0, 1), v.ovvv, (0, 2, 3, 4), (4, 3, 1, 2)) * -1
    tmp35 += einsum(t2, (0, 1, 2, 3), v.ovov, (0, 4, 1, 5), (3, 5, 2, 4))
    tmp30 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3)))
    tmp30 += einsum(t1, (0, 1), v.ooov, (2, 0, 3, 4), (2, 3, 4, 1)) * -1
    tmp30 += einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp30 += einsum(v.ovov, (0, 1, 2, 3), t2, (0, 4, 5, 1), (4, 2, 3, 5)) * -1
    tmp21 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * 2
    tmp21 += np.transpose(v.ovov, (2, 0, 3, 1)) * -1
    tmp30 += einsum(tmp21, (0, 1, 2, 3), t2, (0, 4, 3, 5), (4, 1, 2, 5))
    tmp25 = einsum(t1, (0, 1), f.ov, (0, 2), (2, 1))
    tmp28 = np.copy(tmp25) * 0.5
    tmp26 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * -1
    tmp26 += np.transpose(v.ovov, (2, 0, 3, 1)) * 2
    tmp28 += einsum(t2, (0, 1, 2, 3), tmp26, (0, 1, 2, 4), (4, 3)) * 0.5
    tmp27 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2))) * -1
    tmp27 += np.transpose(v.ovvv, (0, 3, 1, 2)) * 2
    tmp28 += einsum(tmp27, (0, 1, 2, 3), t1, (0, 2), (1, 3)) * -0.5
    tmp41 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp41 += einsum(f.ov, (0, 1), t1, (2, 1), (2, 0))
    tmp39 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * -0.5
    tmp39 += np.transpose(v.ovov, (2, 0, 3, 1))
    tmp41 += einsum(t2, (0, 1, 2, 3), tmp39, (0, 4, 2, 3), (1, 4)) * 2
    del tmp39
    tmp40 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -0.5
    tmp40 += np.transpose(v.ooov, (2, 1, 0, 3))
    tmp41 += einsum(tmp40, (0, 1, 2, 3), t1, (0, 3), (1, 2)) * 2
    del tmp40
    tmp34 = np.copy(np.transpose(v.oovv, (1, 0, 3, 2)))
    tmp31 = einsum(t1, (0, 1), v.ooov, (2, 3, 0, 4), (2, 3, 1, 4))
    tmp34 += np.transpose(tmp31, (1, 0, 2, 3)) * -1
    del tmp31
    tmp32 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3))
    tmp34 += np.transpose(tmp32, (0, 1, 3, 2))
    del tmp32
    tmp33 = einsum(v.ovov, (0, 1, 2, 3), t2, (0, 4, 5, 3), (4, 2, 5, 1))
    tmp34 += tmp33 * -1
    del tmp33
    tmp9 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * 2
    tmp9 += np.transpose(t2, (1, 0, 3, 2)) * -1
    tmp14 = np.copy(np.transpose(v.ovvv, (0, 3, 1, 2))) * -1
    tmp10 = einsum(v.ovov, (0, 1, 2, 3), t1, (2, 4), (0, 4, 1, 3))
    tmp14 += tmp10
    tmp17 = einsum(tmp9, (0, 1, 2, 3), tmp14, (0, 4, 3, 5), (1, 4, 2, 5)) * -1
    tmp15 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -0.5
    tmp15 += np.transpose(t2, (1, 0, 3, 2))
    tmp17 += einsum(tmp14, (0, 1, 2, 3), tmp15, (0, 4, 5, 3), (4, 1, 5, 2)) * -2
    del tmp14, tmp15
    tmp16 = np.copy(np.transpose(v.oovv, (1, 0, 3, 2)))
    tmp16 += np.transpose(v.ovov, (2, 0, 3, 1)) * -0.5
    tmp17 += einsum(t1, (0, 1), tmp16, (0, 2, 3, 4), (2, 1, 4, 3)) * 2
    del tmp16
    tmp38 = np.copy(np.transpose(f.vv, (1, 0))) * -1
    tmp38 += tmp25
    del tmp25
    tmp36 = einsum(tmp26, (0, 1, 2, 3), t2, (0, 1, 2, 4), (4, 3))
    del tmp26
    tmp38 += np.transpose(tmp36, (1, 0))
    del tmp36
    tmp37 = einsum(tmp27, (0, 1, 2, 3), t1, (0, 2), (1, 3))
    del tmp27
    tmp38 += tmp37 * -1
    del tmp37
    tmp0 = einsum(t2, (0, 1, 2, 3), f.ov, (1, 4), (0, 4, 2, 3))
    tmp13 = np.copy(np.transpose(tmp0, (0, 2, 3, 1)))
    tmp13 += np.transpose(tmp0, (0, 3, 2, 1)) * -2
    del tmp0
    tmp1 = einsum(t1, (0, 1), v.vvvv, (2, 3, 1, 4), (0, 2, 3, 4))
    tmp13 += np.transpose(tmp1, (0, 2, 3, 1)) * 2
    tmp13 += np.transpose(tmp1, (0, 3, 2, 1)) * -1
    del tmp1
    tmp2 = einsum(t2, (0, 1, 2, 3), v.ooov, (1, 4, 0, 5), (4, 3, 2, 5))
    tmp6 = np.copy(tmp2)
    del tmp2
    tmp3 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3)))
    tmp3 += np.transpose(v.ovov, (2, 0, 3, 1)) * -0.5
    tmp4 = einsum(t1, (0, 1), tmp3, (0, 2, 3, 1), (2, 3)) * 2
    del tmp3
    tmp5 = einsum(tmp4, (0, 1), t2, (0, 2, 3, 4), (2, 3, 4, 1))
    tmp6 += np.transpose(tmp5, (0, 2, 1, 3)) * -1
    del tmp5
    tmp13 += tmp6 * -1
    tmp13 += np.transpose(tmp6, (0, 2, 1, 3)) * 2
    del tmp6
    tmp7 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 1), (4, 2, 0, 3))
    tmp8 = einsum(t2, (0, 1, 2, 3), tmp7, (4, 1, 0, 5), (4, 3, 2, 5))
    tmp13 += tmp8 * 2
    tmp13 += np.transpose(tmp8, (0, 2, 1, 3)) * -1
    del tmp8
    tmp11 = np.copy(np.transpose(v.ovvv, (0, 3, 1, 2))) * 0.5
    tmp11 += np.transpose(v.ovvv, (0, 3, 2, 1)) * -1
    tmp11 += tmp10 * -0.5
    tmp11 += np.transpose(tmp10, (0, 1, 3, 2))
    del tmp10
    tmp13 += einsum(tmp9, (0, 1, 2, 3), tmp11, (0, 4, 5, 3), (1, 4, 2, 5)) * -2
    del tmp11
    tmp12 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1))) * 2
    tmp12 += np.transpose(v.oovv, (1, 0, 3, 2)) * -1
    tmp13 += einsum(tmp12, (0, 1, 2, 3), t1, (0, 4), (1, 4, 3, 2)) * -1
    tmp23 = einsum(f.vv, (0, 1), t1, (2, 0), (2, 1)) * -0.5
    tmp23 += einsum(t2, (0, 1, 2, 3), v.ooov, (1, 4, 0, 3), (4, 2)) * -0.5
    tmp18 = np.copy(np.transpose(t2, (1, 0, 2, 3)))
    tmp18 += np.transpose(t2, (1, 0, 3, 2)) * -0.5
    tmp23 += einsum(tmp18, (0, 1, 2, 3), v.ovvv, (0, 3, 2, 4), (1, 4)) * -1
    del tmp18
    tmp19 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3)))
    tmp19 += np.transpose(tmp7, (1, 0, 2, 3)) * -0.5
    tmp19 += np.transpose(tmp7, (2, 0, 1, 3))
    del tmp7
    tmp23 += einsum(tmp19, (0, 1, 2, 3), t2, (2, 0, 3, 4), (1, 4))
    del tmp19
    tmp20 = np.copy(f.ov)
    tmp20 += tmp4
    del tmp4
    tmp23 += einsum(tmp9, (0, 1, 2, 3), tmp20, (0, 3), (1, 2)) * -0.5
    tmp23 += einsum(tmp12, (0, 1, 2, 3), t1, (0, 2), (1, 3)) * -0.5
    del tmp12
    tmp22 = np.copy(np.transpose(f.oo, (1, 0))) * 0.5
    tmp22 += einsum(t2, (0, 1, 2, 3), tmp21, (0, 4, 3, 2), (4, 1)) * 0.5
    del tmp21
    tmp23 += einsum(t1, (0, 1), tmp22, (0, 2), (2, 1))
    del tmp22

    return {"tmp13": tmp13, "tmp17": tmp17, "tmp20": tmp20, "tmp23": tmp23, "tmp28": tmp28, "tmp30": tmp30, "tmp34": tmp34, "tmp35": tmp35, "tmp38": tmp38, "tmp41": tmp41, "tmp9": tmp9}

def hbar_lmatvec_ea(ints=None, r1=None, r2=None, t1=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        ints: 
        r1: 
        r2: 
        t1: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(ints.tmp17, (0, 1, 2, 3), r2, (1, 2, 0), (3,))
    r1new += einsum(ints.tmp13, (0, 1, 2, 3), r2, (2, 1, 0), (3,)) * -1
    r1new += einsum(ints.tmp28, (0, 1), r1, (1,), (0,)) * -2
    tmp0 = np.copy(np.transpose(r2, (2, 0, 1)))
    tmp0 += np.transpose(r2, (2, 1, 0)) * -0.5
    r1new += einsum(tmp0, (0, 1, 2), ints.tmp23, (0, 1), (2,)) * 4
    del tmp0
    r2new = einsum(ints.tmp34, (0, 1, 2, 3), r2, (4, 2, 0), (4, 3, 1)) * -1
    r2new += einsum(r2, (0, 1, 2), ints.tmp34, (2, 3, 0, 4), (4, 1, 3)) * -1
    r2new += einsum(ints.tmp35, (0, 1, 2, 3), r2, (0, 2, 4), (1, 3, 4))
    r2new += einsum(r1, (0,), v.ovvv, (1, 2, 3, 0), (2, 3, 1)) * -1
    r2new += einsum(r2, (0, 1, 2), ints.tmp38, (3, 0), (3, 1, 2)) * -1
    r2new += einsum(r2, (0, 1, 2), ints.tmp38, (3, 1), (0, 3, 2)) * -1
    r2new += einsum(ints.tmp20, (0, 1), r1, (2,), (1, 2, 0)) * -1
    tmp1 = einsum(t1, (0, 1), r2, (1, 2, 3), (3, 0, 2))
    r2new += einsum(tmp1, (0, 1, 2), v.ovvv, (1, 3, 4, 2), (3, 4, 0)) * -1
    del tmp1
    r2new += einsum(r2, (0, 1, 2), ints.tmp41, (2, 3), (0, 1, 3)) * -1
    tmp2 = np.copy(np.transpose(r2, (2, 0, 1))) * -1
    tmp2 += np.transpose(r2, (2, 1, 0)) * 2
    r2new += einsum(tmp2, (0, 1, 2), ints.tmp30, (0, 3, 4, 2), (4, 1, 3))
    del tmp2
    tmp3 = einsum(r1, (0,), t1, (1, 0), (1,)) * -1
    tmp3 += einsum(ints.tmp9, (0, 1, 2, 3), r2, (3, 2, 0), (1,))
    r2new += einsum(v.ovov, (0, 1, 2, 3), tmp3, (0,), (3, 1, 2)) * -1
    del tmp3

    return {"r1new": r1new, "r2new": r2new}

