"""
Code generated by `albert`:
https://github.com/obackhouse/albert

  * date: 2024-09-28T13:31:14.845186
  * python version: 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
  * albert version: 0.0.0
  * caller: /opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/albert/codegen/einsum.py
  * node: fv-az1272-977
  * system: Linux
  * processor: x86_64
  * release: 6.8.0-1014-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-28T13:31:15.106736.

    Parameters
    ----------
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    e_cc : float
        Coupled cluster energy.
    """

    e_cc = einsum(v.ovov, (0, 1, 2, 3), t2, (0, 2, 1, 3), ()) * 2
    e_cc += einsum(v.ovov, (0, 1, 2, 3), t2, (0, 2, 3, 1), ()) * -1

    return e_cc

def update_amps(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-28T13:31:20.921310.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    t1new : array
        Updated T1 residuals.
    t2new : array
        Updated T2 residuals.
    """

    tmp3 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * -1
    tmp3 += np.transpose(v.ovov, (0, 2, 1, 3)) * 2
    tmp14 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * -0.5
    tmp14 += np.transpose(v.ovov, (0, 2, 1, 3))
    tmp11 = einsum(tmp3, (0, 1, 2, 3), t2, (4, 0, 5, 2), (4, 1, 5, 3))
    tmp17 = einsum(tmp14, (0, 1, 2, 3), t2, (4, 0, 3, 2), (4, 1)) * 2
    tmp15 = einsum(t2, (0, 1, 2, 3), tmp14, (0, 1, 2, 4), (3, 4))
    del tmp14
    tmp10 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3))
    tmp12 = einsum(t2, (0, 1, 2, 3), tmp11, (4, 1, 5, 2), (0, 4, 3, 5))
    tmp18 = einsum(tmp17, (0, 1), t2, (2, 1, 3, 4), (2, 0, 4, 3))
    del tmp17
    tmp16 = einsum(t2, (0, 1, 2, 3), tmp15, (4, 2), (0, 1, 3, 4)) * 2
    del tmp15
    tmp22 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp21 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp9 = einsum(t2, (0, 1, 2, 3), v.ovov, (4, 5, 1, 2), (0, 4, 3, 5))
    tmp1 = einsum(t1, (0, 1), v.ovov, (2, 3, 4, 1), (0, 2, 4, 3))
    tmp7 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * 2
    tmp7 += np.transpose(v.ovov, (0, 2, 1, 3)) * -1
    tmp20 = einsum(t2, (0, 1, 2, 3), f.oo, (4, 1), (4, 0, 2, 3))
    tmp13 = np.copy(tmp10)
    del tmp10
    tmp13 += np.transpose(tmp12, (1, 0, 3, 2))
    del tmp12
    tmp27 = np.copy(v.oovv) * -1
    tmp27 += einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 1, 5), (4, 0, 5, 3))
    tmp25 = np.copy(v.oooo)
    tmp25 += einsum(t2, (0, 1, 2, 3), v.ovov, (4, 2, 5, 3), (4, 0, 1, 5))
    tmp19 = np.copy(np.transpose(tmp16, (1, 0, 2, 3)))
    del tmp16
    tmp19 += np.transpose(tmp18, (0, 1, 3, 2))
    del tmp18
    tmp23 = np.copy(tmp21)
    del tmp21
    tmp23 += tmp22
    del tmp22
    tmp24 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * 2
    tmp24 += v.oovv * -1
    tmp24 += tmp11 * 2
    del tmp11
    tmp26 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * -1
    tmp26 += tmp9
    tmp6 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3))) * 2
    tmp6 += v.oovv * -1
    tmp2 = np.copy(v.ooov)
    tmp2 += np.transpose(v.ooov, (0, 2, 1, 3)) * -0.5
    tmp2 += tmp1 * -0.5
    tmp2 += np.transpose(tmp1, (0, 2, 1, 3))
    del tmp1
    tmp8 = np.copy(f.oo)
    tmp8 += einsum(t2, (0, 1, 2, 3), tmp7, (1, 4, 2, 3), (4, 0))
    del tmp7
    tmp5 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -1
    tmp5 += t2 * 2
    tmp4 = np.copy(f.ov)
    tmp4 += einsum(t1, (0, 1), tmp3, (0, 2, 1, 3), (2, 3))
    del tmp3
    tmp0 = np.copy(v.ovvv) * -0.5
    tmp0 += np.transpose(v.ovvv, (0, 2, 1, 3))
    t2new = np.copy(np.transpose(v.ovov, (0, 2, 1, 3)))
    t2new += einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2)) * -1
    t2new += np.transpose(tmp9, (1, 0, 3, 2)) * -1
    del tmp9
    t2new += einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 3, 5), (0, 4, 5, 2)) * -1
    t2new += einsum(t2, (0, 1, 2, 3), v.ovov, (4, 5, 1, 3), (0, 4, 2, 5)) * 2
    t2new += einsum(t2, (0, 1, 2, 3), v.vvvv, (4, 2, 5, 3), (0, 1, 4, 5))
    t2new += tmp13 * -1
    t2new += np.transpose(tmp13, (1, 0, 3, 2)) * -1
    del tmp13
    t2new += tmp19 * -1
    t2new += np.transpose(tmp19, (1, 0, 3, 2)) * -1
    del tmp19
    t2new += np.transpose(tmp20, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp20, (1, 0, 2, 3)) * -1
    del tmp20
    t2new += np.transpose(tmp23, (0, 1, 3, 2))
    t2new += np.transpose(tmp23, (1, 0, 2, 3))
    del tmp23
    t2new += einsum(tmp24, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5))
    del tmp24
    t2new += einsum(tmp25, (0, 1, 2, 3), t2, (0, 3, 4, 5), (2, 1, 5, 4))
    del tmp25
    t2new += einsum(t2, (0, 1, 2, 3), tmp26, (4, 1, 5, 2), (0, 4, 3, 5))
    del tmp26
    t2new += einsum(tmp27, (0, 1, 2, 3), t2, (4, 1, 3, 5), (4, 0, 2, 5))
    del tmp27
    t1new = einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    t1new += einsum(t2, (0, 1, 2, 3), tmp0, (1, 2, 3, 4), (0, 4)) * 2
    del tmp0
    t1new += einsum(t2, (0, 1, 2, 3), tmp2, (4, 1, 0, 2), (4, 3)) * -2
    del tmp2
    t1new += einsum(tmp5, (0, 1, 2, 3), tmp4, (0, 2), (1, 3))
    del tmp5, tmp4
    t1new += einsum(t1, (0, 1), tmp6, (0, 2, 1, 3), (2, 3))
    del tmp6
    t1new += einsum(tmp8, (0, 1), t1, (0, 2), (1, 2)) * -1
    del tmp8

    return {f"t1new": t1new, f"t2new": t2new}

