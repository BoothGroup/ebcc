"""Code generated by `albert` version 0.0.0.

 * date: 2024-12-19T15:11:05.030852
 * python version: 3.10.15 (main, Sep  9 2024, 03:03:06) [GCC 13.2.0]
 * albert version: 0.0.0
 * caller: /opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/albert/code/einsum.py
 * node: fv-az1676-657
 * system: Linux
 * processor: x86_64
 * release: 6.8.0-1017-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        t2: 
        v: 

    Returns:
        e_cc: 
    """

    e_cc = einsum(v.aaaa.ovov, (0, 1, 2, 3), t2.aaaa, (0, 2, 1, 3), ())
    e_cc += einsum(v.bbbb.ovov, (0, 1, 2, 3), t2.bbbb, (0, 2, 1, 3), ())
    e_cc += einsum(t2.abab, (0, 1, 2, 3), v.aabb.ovov, (0, 2, 1, 3), ())

    return e_cc

def make_rdm1_f(l2=None, t2=None, δ=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        l2: 
        t2: 
        δ: 

    Returns:
        rdm1: 
    """

    δ = Namespace()
    δ.aa = Namespace()
    δ.aa.oo = np.eye(t2.aaaa.shape[0])
    δ.bb = Namespace()
    δ.bb.oo = np.eye(t2.bbbb.shape[0])
    δ.aa.vv = np.eye(t2.aaaa.shape[-1])
    δ.bb.vv = np.eye(t2.bbbb.shape[-1])

    rdm1 = Namespace()
    rdm1.aa = Namespace()
    rdm1.aa.oo = einsum(l2.aaaa, (0, 1, 2, 3), t2.aaaa, (4, 3, 0, 1), (4, 2)) * -2
    rdm1.aa.oo += δ.aa.oo
    rdm1.aa.oo += einsum(l2.abab, (0, 1, 2, 3), t2.abab, (4, 3, 0, 1), (4, 2)) * -1
    rdm1.bb = Namespace()
    rdm1.bb.oo = np.copy(δ.bb.oo)
    rdm1.bb.oo += einsum(t2.abab, (0, 1, 2, 3), l2.abab, (2, 3, 0, 4), (1, 4)) * -1
    rdm1.bb.oo += einsum(l2.bbbb, (0, 1, 2, 3), t2.bbbb, (4, 3, 0, 1), (4, 2)) * -2
    rdm1.aa.vv = einsum(l2.aaaa, (0, 1, 2, 3), t2.aaaa, (2, 3, 4, 1), (0, 4)) * 2
    rdm1.aa.vv += einsum(t2.abab, (0, 1, 2, 3), l2.abab, (4, 3, 0, 1), (4, 2))
    rdm1.bb.vv = einsum(l2.abab, (0, 1, 2, 3), t2.abab, (2, 3, 0, 4), (1, 4))
    rdm1.bb.vv += einsum(l2.bbbb, (0, 1, 2, 3), t2.bbbb, (2, 3, 4, 1), (0, 4)) * 2

    rdm1.aa.ov = np.zeros((t2.aaaa.shape[0], t2.aaaa.shape[-1]))
    rdm1.aa.vo = np.zeros((t2.aaaa.shape[-1], t2.aaaa.shape[0]))
    rdm1.bb.ov = np.zeros((t2.bbbb.shape[0], t2.bbbb.shape[-1]))
    rdm1.bb.vo = np.zeros((t2.bbbb.shape[-1], t2.bbbb.shape[0]))
    rdm1.aa = np.block([[rdm1.aa.oo, rdm1.aa.ov], [rdm1.aa.vo, rdm1.aa.vv]])
    rdm1.bb = np.block([[rdm1.bb.oo, rdm1.bb.ov], [rdm1.bb.vo, rdm1.bb.vv]])

    return rdm1

def make_rdm2_f(l2=None, t2=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        l2: 
        t2: 

    Returns:
        rdm2: 
    """


    rdm2 = Namespace()
    rdm2.aaaa = Namespace()
    rdm2.aaaa.oovv = np.copy(t2.aaaa) * 2
    rdm2.abab = Namespace()
    rdm2.abab.oovv = np.copy(t2.abab)
    rdm2.bbbb = Namespace()
    rdm2.bbbb.oovv = np.copy(t2.bbbb) * 2
    rdm2.aaaa.vvoo = np.copy(l2.aaaa) * 2
    rdm2.abab.vvoo = np.copy(l2.abab)
    rdm2.bbbb.vvoo = np.copy(l2.bbbb) * 2

    rdm2.aaaa.oooo = np.zeros((t2.aaaa.shape[0], t2.aaaa.shape[0], t2.aaaa.shape[0], t2.aaaa.shape[0]))
    rdm2.aaaa.ooov = np.zeros((t2.aaaa.shape[0], t2.aaaa.shape[0], t2.aaaa.shape[0], t2.aaaa.shape[-1]))
    rdm2.aaaa.oovo = np.zeros((t2.aaaa.shape[0], t2.aaaa.shape[0], t2.aaaa.shape[-1], t2.aaaa.shape[0]))
    rdm2.aaaa.ovoo = np.zeros((t2.aaaa.shape[0], t2.aaaa.shape[-1], t2.aaaa.shape[0], t2.aaaa.shape[0]))
    rdm2.aaaa.ovov = np.zeros((t2.aaaa.shape[0], t2.aaaa.shape[-1], t2.aaaa.shape[0], t2.aaaa.shape[-1]))
    rdm2.aaaa.ovvo = np.zeros((t2.aaaa.shape[0], t2.aaaa.shape[-1], t2.aaaa.shape[-1], t2.aaaa.shape[0]))
    rdm2.aaaa.ovvv = np.zeros((t2.aaaa.shape[0], t2.aaaa.shape[-1], t2.aaaa.shape[-1], t2.aaaa.shape[-1]))
    rdm2.aaaa.vooo = np.zeros((t2.aaaa.shape[-1], t2.aaaa.shape[0], t2.aaaa.shape[0], t2.aaaa.shape[0]))
    rdm2.aaaa.voov = np.zeros((t2.aaaa.shape[-1], t2.aaaa.shape[0], t2.aaaa.shape[0], t2.aaaa.shape[-1]))
    rdm2.aaaa.vovo = np.zeros((t2.aaaa.shape[-1], t2.aaaa.shape[0], t2.aaaa.shape[-1], t2.aaaa.shape[0]))
    rdm2.aaaa.vovv = np.zeros((t2.aaaa.shape[-1], t2.aaaa.shape[0], t2.aaaa.shape[-1], t2.aaaa.shape[-1]))
    rdm2.aaaa.vvov = np.zeros((t2.aaaa.shape[-1], t2.aaaa.shape[-1], t2.aaaa.shape[0], t2.aaaa.shape[-1]))
    rdm2.aaaa.vvvo = np.zeros((t2.aaaa.shape[-1], t2.aaaa.shape[-1], t2.aaaa.shape[-1], t2.aaaa.shape[0]))
    rdm2.aaaa.vvvv = np.zeros((t2.aaaa.shape[-1], t2.aaaa.shape[-1], t2.aaaa.shape[-1], t2.aaaa.shape[-1]))
    rdm2.abab.oooo = np.zeros((t2.aaaa.shape[0], t2.bbbb.shape[0], t2.aaaa.shape[0], t2.bbbb.shape[0]))
    rdm2.abab.ooov = np.zeros((t2.aaaa.shape[0], t2.bbbb.shape[0], t2.aaaa.shape[0], t2.bbbb.shape[-1]))
    rdm2.abab.oovo = np.zeros((t2.aaaa.shape[0], t2.bbbb.shape[0], t2.aaaa.shape[-1], t2.bbbb.shape[0]))
    rdm2.abab.ovoo = np.zeros((t2.aaaa.shape[0], t2.bbbb.shape[-1], t2.aaaa.shape[0], t2.bbbb.shape[0]))
    rdm2.abab.ovov = np.zeros((t2.aaaa.shape[0], t2.bbbb.shape[-1], t2.aaaa.shape[0], t2.bbbb.shape[-1]))
    rdm2.abab.ovvo = np.zeros((t2.aaaa.shape[0], t2.bbbb.shape[-1], t2.aaaa.shape[-1], t2.bbbb.shape[0]))
    rdm2.abab.ovvv = np.zeros((t2.aaaa.shape[0], t2.bbbb.shape[-1], t2.aaaa.shape[-1], t2.bbbb.shape[-1]))
    rdm2.abab.vooo = np.zeros((t2.aaaa.shape[-1], t2.bbbb.shape[0], t2.aaaa.shape[0], t2.bbbb.shape[0]))
    rdm2.abab.voov = np.zeros((t2.aaaa.shape[-1], t2.bbbb.shape[0], t2.aaaa.shape[0], t2.bbbb.shape[-1]))
    rdm2.abab.vovo = np.zeros((t2.aaaa.shape[-1], t2.bbbb.shape[0], t2.aaaa.shape[-1], t2.bbbb.shape[0]))
    rdm2.abab.vovv = np.zeros((t2.aaaa.shape[-1], t2.bbbb.shape[0], t2.aaaa.shape[-1], t2.bbbb.shape[-1]))
    rdm2.abab.vvov = np.zeros((t2.aaaa.shape[-1], t2.bbbb.shape[-1], t2.aaaa.shape[0], t2.bbbb.shape[-1]))
    rdm2.abab.vvvo = np.zeros((t2.aaaa.shape[-1], t2.bbbb.shape[-1], t2.aaaa.shape[-1], t2.bbbb.shape[0]))
    rdm2.abab.vvvv = np.zeros((t2.aaaa.shape[-1], t2.bbbb.shape[-1], t2.aaaa.shape[-1], t2.bbbb.shape[-1]))
    rdm2.bbbb.oooo = np.zeros((t2.bbbb.shape[0], t2.bbbb.shape[0], t2.bbbb.shape[0], t2.bbbb.shape[0]))
    rdm2.bbbb.ooov = np.zeros((t2.bbbb.shape[0], t2.bbbb.shape[0], t2.bbbb.shape[0], t2.bbbb.shape[-1]))
    rdm2.bbbb.oovo = np.zeros((t2.bbbb.shape[0], t2.bbbb.shape[0], t2.bbbb.shape[-1], t2.bbbb.shape[0]))
    rdm2.bbbb.ovoo = np.zeros((t2.bbbb.shape[0], t2.bbbb.shape[-1], t2.bbbb.shape[0], t2.bbbb.shape[0]))
    rdm2.bbbb.ovov = np.zeros((t2.bbbb.shape[0], t2.bbbb.shape[-1], t2.bbbb.shape[0], t2.bbbb.shape[-1]))
    rdm2.bbbb.ovvo = np.zeros((t2.bbbb.shape[0], t2.bbbb.shape[-1], t2.bbbb.shape[-1], t2.bbbb.shape[0]))
    rdm2.bbbb.ovvv = np.zeros((t2.bbbb.shape[0], t2.bbbb.shape[-1], t2.bbbb.shape[-1], t2.bbbb.shape[-1]))
    rdm2.bbbb.vooo = np.zeros((t2.bbbb.shape[-1], t2.bbbb.shape[0], t2.bbbb.shape[0], t2.bbbb.shape[0]))
    rdm2.bbbb.voov = np.zeros((t2.bbbb.shape[-1], t2.bbbb.shape[0], t2.bbbb.shape[0], t2.bbbb.shape[-1]))
    rdm2.bbbb.vovo = np.zeros((t2.bbbb.shape[-1], t2.bbbb.shape[0], t2.bbbb.shape[-1], t2.bbbb.shape[0]))
    rdm2.bbbb.vovv = np.zeros((t2.bbbb.shape[-1], t2.bbbb.shape[0], t2.bbbb.shape[-1], t2.bbbb.shape[-1]))
    rdm2.bbbb.vvov = np.zeros((t2.bbbb.shape[-1], t2.bbbb.shape[-1], t2.bbbb.shape[0], t2.bbbb.shape[-1]))
    rdm2.bbbb.vvvo = np.zeros((t2.bbbb.shape[-1], t2.bbbb.shape[-1], t2.bbbb.shape[-1], t2.bbbb.shape[0]))
    rdm2.bbbb.vvvv = np.zeros((t2.bbbb.shape[-1], t2.bbbb.shape[-1], t2.bbbb.shape[-1], t2.bbbb.shape[-1]))
    rdm2.aaaa = pack_2e(rdm2.aaaa.oooo, rdm2.aaaa.ooov, rdm2.aaaa.oovo, rdm2.aaaa.ovoo, rdm2.aaaa.vooo, rdm2.aaaa.oovv, rdm2.aaaa.ovov, rdm2.aaaa.ovvo, rdm2.aaaa.voov, rdm2.aaaa.vovo, rdm2.aaaa.vvoo, rdm2.aaaa.ovvv, rdm2.aaaa.vovv, rdm2.aaaa.vvov, rdm2.aaaa.vvvo, rdm2.aaaa.vvvv).transpose((0, 2, 1, 3))
    rdm2.aabb = pack_2e(rdm2.abab.oooo, rdm2.abab.ooov, rdm2.abab.oovo, rdm2.abab.ovoo, rdm2.abab.vooo, rdm2.abab.oovv, rdm2.abab.ovov, rdm2.abab.ovvo, rdm2.abab.voov, rdm2.abab.vovo, rdm2.abab.vvoo, rdm2.abab.ovvv, rdm2.abab.vovv, rdm2.abab.vvov, rdm2.abab.vvvo, rdm2.abab.vvvv).transpose((0, 2, 1, 3))
    rdm2.bbbb = pack_2e(rdm2.bbbb.oooo, rdm2.bbbb.ooov, rdm2.bbbb.oovo, rdm2.bbbb.ovoo, rdm2.bbbb.vooo, rdm2.bbbb.oovv, rdm2.bbbb.ovov, rdm2.bbbb.ovvo, rdm2.bbbb.voov, rdm2.bbbb.vovo, rdm2.bbbb.vvoo, rdm2.bbbb.ovvv, rdm2.bbbb.vovv, rdm2.bbbb.vvov, rdm2.bbbb.vvvo, rdm2.bbbb.vvvv).transpose((0, 2, 1, 3))
    del rdm2.abab
    rdm1 = make_rdm1_f(t2=t2, l2=l2)
    delta = Namespace(
        aa=np.diag(np.concatenate([np.ones(t2.aaaa.shape[0]), np.zeros(t2.aaaa.shape[-1])])),
        bb=np.diag(np.concatenate([np.ones(t2.bbbb.shape[0]), np.zeros(t2.bbbb.shape[-1])])),
    )
    rdm1.aa -= delta.aa
    rdm1.bb -= delta.bb
    rdm2.aaaa += einsum(delta.aa, (0, 1), rdm1.aa, (3, 2), (0, 1, 2, 3))
    rdm2.aaaa += einsum(rdm1.aa, (1, 0), delta.aa, (2, 3), (0, 1, 2, 3))
    rdm2.aaaa -= einsum(delta.aa, (0, 3), rdm1.aa, (2, 1), (0, 1, 2, 3))
    rdm2.aaaa -= einsum(rdm1.aa, (0, 3), delta.aa, (1, 2), (0, 1, 2, 3))
    rdm2.aaaa += einsum(delta.aa, (0, 1), delta.aa, (2, 3), (0, 1, 2, 3))
    rdm2.aaaa -= einsum(delta.aa, (0, 3), delta.aa, (1, 2), (0, 1, 2, 3))
    rdm2.bbbb += einsum(delta.bb, (0, 1), rdm1.bb, (3, 2), (0, 1, 2, 3))
    rdm2.bbbb += einsum(rdm1.bb, (1, 0), delta.bb, (2, 3), (0, 1, 2, 3))
    rdm2.bbbb -= einsum(delta.bb, (0, 3), rdm1.bb, (2, 1), (0, 1, 2, 3))
    rdm2.bbbb -= einsum(rdm1.bb, (0, 3), delta.bb, (1, 2), (0, 1, 2, 3))
    rdm2.bbbb += einsum(delta.bb, (0, 1), delta.bb, (2, 3), (0, 1, 2, 3))
    rdm2.bbbb -= einsum(delta.bb, (0, 3), delta.bb, (1, 2), (0, 1, 2, 3))
    rdm2.aabb += einsum(delta.aa, (0, 1), rdm1.bb, (3, 2), (0, 1, 2, 3))
    rdm2.aabb += einsum(rdm1.aa, (1, 0), delta.bb, (2, 3), (0, 1, 2, 3))
    rdm2.aabb += einsum(delta.aa, (0, 1), delta.bb, (2, 3), (0, 1, 2, 3))

    return rdm2

def hbar_matvec_ip_intermediates(f=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t2: 
        v: 

    Returns:
        tmp3: 
        tmp7: 
    """

    tmp3 = np.copy(f.aa.oo)
    tmp1 = einsum(t2.abab, (0, 1, 2, 3), v.aabb.ovov, (4, 2, 1, 3), (0, 4))
    tmp2 = np.copy(tmp1) * 0.5
    del tmp1
    tmp0 = einsum(t2.aaaa, (0, 1, 2, 3), v.aaaa.ovov, (4, 2, 1, 3), (0, 4))
    tmp2 += tmp0
    del tmp0
    tmp3 += tmp2
    tmp3 += np.transpose(tmp2, (1, 0))
    del tmp2
    tmp7 = np.copy(f.bb.oo) * 2
    tmp5 = einsum(t2.bbbb, (0, 1, 2, 3), v.bbbb.ovov, (4, 2, 1, 3), (0, 4))
    tmp6 = np.copy(tmp5) * 2
    del tmp5
    tmp4 = einsum(t2.abab, (0, 1, 2, 3), v.aabb.ovov, (0, 2, 4, 3), (1, 4))
    tmp6 += tmp4
    del tmp4
    tmp7 += tmp6
    tmp7 += np.transpose(tmp6, (1, 0))
    del tmp6

    return {"tmp3": tmp3, "tmp7": tmp7}

def hbar_matvec_ip(f=None, ints=None, r1=None, r2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = Namespace()
    r1new.a = einsum(r1.a, (0,), ints.tmp3, (0, 1), (1,)) * -1
    r1new.a += einsum(r2.aaa, (0, 1, 2), v.aaaa.ooov, (3, 1, 0, 2), (3,)) * 2
    r1new.a += einsum(r2.bab, (0, 1, 2), v.aabb.ooov, (3, 1, 0, 2), (3,))
    r1new.b = einsum(r2.aba, (0, 1, 2), v.aabb.ovoo, (0, 2, 3, 1), (3,))
    r1new.b += einsum(r1.b, (0,), ints.tmp7, (0, 1), (1,)) * -0.5
    r1new.b += einsum(r2.bbb, (0, 1, 2), v.bbbb.ooov, (3, 1, 0, 2), (3,)) * 2
    tmp0 = einsum(r1.a, (0,), v.aaaa.ooov, (1, 0, 2, 3), (1, 2, 3))
    r2new = Namespace()
    r2new.aaa = np.copy(tmp0) * -1
    tmp1 = einsum(f.aa.oo, (0, 1), r2.aaa, (2, 1, 3), (0, 2, 3))
    r2new.aaa += tmp1 * 2
    r2new.aaa += np.transpose(tmp0, (1, 0, 2))
    del tmp0
    r2new.aaa += einsum(f.aa.vv, (0, 1), r2.aaa, (2, 3, 1), (2, 3, 0)) * 2
    r2new.aaa += np.transpose(tmp1, (1, 0, 2)) * -2
    del tmp1
    r2new.aba = einsum(r1.b, (0,), v.aabb.ovoo, (1, 2, 3, 0), (1, 3, 2))
    r2new.aba += einsum(f.aa.vv, (0, 1), r2.aba, (2, 3, 1), (2, 3, 0))
    r2new.aba += einsum(f.bb.oo, (0, 1), r2.aba, (2, 1, 3), (2, 0, 3)) * -1
    r2new.aba += einsum(f.aa.oo, (0, 1), r2.aba, (1, 2, 3), (0, 2, 3)) * -1
    r2new.bab = einsum(r1.a, (0,), v.aabb.ooov, (1, 0, 2, 3), (2, 1, 3))
    r2new.bab += einsum(f.aa.oo, (0, 1), r2.bab, (2, 1, 3), (2, 0, 3)) * -1
    r2new.bab += einsum(f.bb.vv, (0, 1), r2.bab, (2, 3, 1), (2, 3, 0))
    r2new.bab += einsum(f.bb.oo, (0, 1), r2.bab, (1, 2, 3), (0, 2, 3)) * -1
    tmp2 = einsum(r1.b, (0,), v.bbbb.ooov, (1, 0, 2, 3), (1, 2, 3))
    r2new.bbb = np.copy(tmp2) * -1
    tmp3 = einsum(f.bb.oo, (0, 1), r2.bbb, (2, 1, 3), (0, 2, 3))
    r2new.bbb += tmp3 * 2
    r2new.bbb += np.transpose(tmp2, (1, 0, 2))
    del tmp2
    r2new.bbb += einsum(f.bb.vv, (0, 1), r2.bbb, (2, 3, 1), (2, 3, 0)) * 2
    r2new.bbb += np.transpose(tmp3, (1, 0, 2)) * -2
    del tmp3

    return {"r1new": r1new, "r2new": r2new}

def hbar_matvec_ea_intermediates(f=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t2: 
        v: 

    Returns:
        tmp3: 
        tmp7: 
    """

    tmp3 = np.copy(f.aa.vv) * -2
    tmp0 = einsum(t2.aaaa, (0, 1, 2, 3), v.aaaa.ovov, (0, 4, 1, 3), (2, 4))
    tmp2 = np.copy(tmp0) * 2
    del tmp0
    tmp1 = einsum(t2.abab, (0, 1, 2, 3), v.aabb.ovov, (0, 4, 1, 3), (2, 4))
    tmp2 += tmp1
    del tmp1
    tmp3 += tmp2
    tmp3 += np.transpose(tmp2, (1, 0))
    del tmp2
    tmp7 = np.copy(f.bb.vv) * -1
    tmp4 = einsum(t2.abab, (0, 1, 2, 3), v.aabb.ovov, (0, 2, 1, 4), (3, 4))
    tmp6 = np.copy(tmp4) * 0.5
    del tmp4
    tmp5 = einsum(t2.bbbb, (0, 1, 2, 3), v.bbbb.ovov, (0, 4, 1, 3), (2, 4))
    tmp6 += tmp5
    del tmp5
    tmp7 += tmp6
    tmp7 += np.transpose(tmp6, (1, 0))
    del tmp6

    return {"tmp3": tmp3, "tmp7": tmp7}

def hbar_matvec_ea(f=None, ints=None, r1=None, r2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = Namespace()
    r1new.a = einsum(r1.a, (0,), ints.tmp3, (0, 1), (1,)) * -0.5
    r1new.a += einsum(r2.aaa, (0, 1, 2), v.aaaa.ovvv, (2, 0, 3, 1), (3,)) * -2
    r1new.a += einsum(r2.bab, (0, 1, 2), v.aabb.vvov, (3, 1, 2, 0), (3,)) * -1
    r1new.b = einsum(r2.aba, (0, 1, 2), v.aabb.ovvv, (2, 0, 3, 1), (3,)) * -1
    r1new.b += einsum(r1.b, (0,), ints.tmp7, (0, 1), (1,)) * -1
    r1new.b += einsum(r2.bbb, (0, 1, 2), v.bbbb.ovvv, (2, 1, 3, 0), (3,)) * 2
    tmp0 = einsum(r1.a, (0,), v.aaaa.ovvv, (1, 2, 3, 0), (1, 2, 3))
    r2new = Namespace()
    r2new.aaa = np.copy(np.transpose(tmp0, (1, 2, 0))) * -1
    r2new.aaa += einsum(f.aa.oo, (0, 1), r2.aaa, (2, 3, 1), (2, 3, 0)) * -2
    tmp1 = einsum(f.aa.vv, (0, 1), r2.aaa, (2, 1, 3), (3, 0, 2))
    r2new.aaa += np.transpose(tmp1, (1, 2, 0)) * -2
    r2new.aaa += np.transpose(tmp1, (2, 1, 0)) * 2
    del tmp1
    r2new.aaa += np.transpose(tmp0, (2, 1, 0))
    del tmp0
    r2new.aba = einsum(f.aa.oo, (0, 1), r2.aba, (2, 3, 1), (2, 3, 0)) * -1
    r2new.aba += einsum(r1.b, (0,), v.aabb.ovvv, (1, 2, 3, 0), (2, 3, 1)) * -1
    r2new.aba += einsum(f.aa.vv, (0, 1), r2.aba, (1, 2, 3), (0, 2, 3))
    r2new.aba += einsum(f.bb.vv, (0, 1), r2.aba, (2, 1, 3), (2, 0, 3))
    r2new.bab = einsum(f.bb.oo, (0, 1), r2.bab, (2, 3, 1), (2, 3, 0)) * -1
    r2new.bab += einsum(f.bb.vv, (0, 1), r2.bab, (1, 2, 3), (0, 2, 3))
    r2new.bab += einsum(f.aa.vv, (0, 1), r2.bab, (2, 1, 3), (2, 0, 3))
    r2new.bab += einsum(r1.a, (0,), v.aabb.vvov, (1, 0, 2, 3), (3, 1, 2)) * -1
    tmp2 = einsum(r1.b, (0,), v.bbbb.ovvv, (1, 2, 3, 0), (1, 2, 3))
    r2new.bbb = np.copy(np.transpose(tmp2, (1, 2, 0))) * -1
    r2new.bbb += einsum(f.bb.oo, (0, 1), r2.bbb, (2, 3, 1), (2, 3, 0)) * -2
    tmp3 = einsum(f.bb.vv, (0, 1), r2.bbb, (2, 1, 3), (3, 0, 2))
    r2new.bbb += np.transpose(tmp3, (1, 2, 0)) * -2
    r2new.bbb += np.transpose(tmp3, (2, 1, 0)) * 2
    del tmp3
    r2new.bbb += np.transpose(tmp2, (2, 1, 0))
    del tmp2

    return {"r1new": r1new, "r2new": r2new}

