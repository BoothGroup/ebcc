"""
Code generated by `albert`:
https://github.com/obackhouse/albert

  * date: 2024-08-09T21:29:17.473257
  * python version: 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
  * albert version: 0.0.0
  * caller: /opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/albert/codegen/einsum.py
  * node: fv-az1487-369
  * system: Linux
  * processor: x86_64
  * release: 6.5.0-1025-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, direct_sum, Namespace


def energy(t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-09T21:29:18.048163.

    Parameters
    ----------
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    e_cc : float
        Coupled cluster energy.
    """

    tmp0 = t2.transpose((0, 1, 3, 2)).copy() * -1
    tmp0 += t2 * 2
    tmp1 = einsum(v.xov, (0, 1, 2), tmp0, (1, 3, 2, 4), (3, 4, 0)) * 0.5
    del tmp0
    e_cc = einsum(v.xov, (0, 1, 2), tmp1, (1, 2, 0), ()) * 2
    del tmp1

    return e_cc

def update_amps(f=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-09T21:29:23.708188.

    Parameters
    ----------
    f : array
        Fock matrix.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    t2new : array
        Updated T2 residuals.
    """

    tmp0 = einsum(v.xov, (0, 1, 2), t2, (3, 1, 2, 4), (3, 4, 0))
    t2new = einsum(tmp0, (0, 1, 2), tmp0, (3, 4, 2), (0, 3, 1, 4))
    tmp1 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    t2new += tmp1.transpose((1, 0, 3, 2))
    tmp6 = v.xov.transpose((1, 2, 0)).copy()
    tmp6 += tmp0 * -1
    tmp11 = t2.transpose((0, 1, 3, 2)).copy() * -1
    tmp11 += t2 * 2
    tmp5 = einsum(v.xoo, (0, 1, 2), v.xvv, (0, 3, 4), (1, 2, 3, 4))
    tmp2 = einsum(t2, (0, 1, 2, 3), tmp1, (1, 4, 5, 2), (0, 4, 3, 5))
    t2new += einsum(t2, (0, 1, 2, 3), tmp2, (4, 1, 5, 2), (4, 0, 3, 5))
    tmp7 = einsum(v.xov, (0, 1, 2), tmp6, (3, 4, 0), (1, 3, 2, 4))
    del tmp6
    tmp12 = einsum(v.xov, (0, 1, 2), tmp11, (1, 3, 2, 4), (3, 4, 0))
    del tmp11
    tmp8 = tmp5.transpose((1, 0, 3, 2)).copy()
    tmp8 += tmp2 * -1
    del tmp2
    tmp8 += tmp7.transpose((1, 0, 3, 2)) * -2
    del tmp7
    tmp15 = einsum(v.xov, (0, 1, 2), tmp12, (3, 2, 0), (1, 3))
    tmp13 = einsum(v.xov, (0, 1, 2), tmp12, (1, 3, 0), (2, 3)) * 0.5
    del tmp12
    tmp20 = einsum(t2, (0, 1, 2, 3), tmp5, (4, 1, 5, 2), (0, 4, 3, 5))
    del tmp5
    tmp19 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp9 = einsum(t2, (0, 1, 2, 3), tmp8, (4, 1, 5, 3), (0, 4, 2, 5))
    del tmp8
    tmp4 = einsum(v.xov, (0, 1, 2), tmp0, (3, 4, 0), (3, 1, 4, 2))
    del tmp0
    tmp16 = einsum(t2, (0, 1, 2, 3), tmp15, (1, 4), (0, 4, 3, 2))
    del tmp15
    tmp14 = einsum(t2, (0, 1, 2, 3), tmp13, (2, 4), (0, 1, 3, 4)) * 2
    del tmp13
    tmp23 = tmp1.transpose((1, 0, 2, 3)).copy() * 2
    tmp23 += tmp1.transpose((1, 0, 3, 2)) * -1
    tmp21 = tmp19.copy()
    del tmp19
    tmp21 += tmp20 * -1
    del tmp20
    t2new += tmp21.transpose((1, 0, 2, 3))
    t2new += tmp21.transpose((0, 1, 3, 2))
    del tmp21
    tmp18 = einsum(t2, (0, 1, 2, 3), f.oo, (4, 1), (4, 0, 2, 3))
    t2new += tmp18.transpose((1, 0, 2, 3)) * -1
    t2new += tmp18.transpose((0, 1, 3, 2)) * -1
    del tmp18
    tmp3 = einsum(v.xvv, (0, 1, 2), v.xvv, (0, 3, 4), (1, 3, 4, 2))
    t2new += einsum(tmp3, (0, 1, 2, 3), t2, (4, 5, 3, 1), (4, 5, 0, 2))
    del tmp3
    tmp10 = tmp4.copy()
    del tmp4
    tmp10 += tmp9
    del tmp9
    t2new += tmp10.transpose((1, 0, 3, 2)) * -1
    t2new += tmp10 * -1
    del tmp10
    tmp17 = tmp14.transpose((1, 0, 2, 3)).copy()
    del tmp14
    tmp17 += tmp16.transpose((0, 1, 3, 2))
    del tmp16
    t2new += tmp17.transpose((1, 0, 3, 2)) * -1
    t2new += tmp17 * -1
    del tmp17
    tmp24 = einsum(t2, (0, 1, 2, 3), tmp23, (1, 4, 5, 3), (0, 4, 2, 5))
    del tmp23
    t2new += einsum(tmp24, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5)) * 2
    del tmp24
    tmp22 = einsum(v.xoo, (0, 1, 2), v.xoo, (0, 3, 4), (3, 1, 2, 4))
    tmp22 += einsum(tmp1, (0, 1, 2, 3), t2, (4, 5, 3, 2), (0, 4, 1, 5))
    del tmp1
    t2new += einsum(t2, (0, 1, 2, 3), tmp22, (0, 4, 1, 5), (4, 5, 3, 2))
    del tmp22

    return {f"t2new": t2new}

def update_lams(f=None, l2=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-09T21:29:31.700738.

    Parameters
    ----------
    f : array
        Fock matrix.
    l2 : array
        L2 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    l2new : array
        Updated L2 residuals.
    """

    tmp10 = t2.transpose((0, 1, 3, 2)).copy() * -1
    tmp10 += t2 * 2
    tmp6 = l2.transpose((3, 2, 0, 1)).copy() * 2
    tmp6 += l2.transpose((2, 3, 0, 1)) * -1
    tmp11 = einsum(v.xov, (0, 1, 2), tmp10, (1, 3, 2, 4), (3, 4, 0))
    del tmp10
    tmp30 = t2.transpose((0, 1, 3, 2)).copy() * -1
    tmp30 += t2 * 2
    tmp0 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    l2new = tmp0.transpose((3, 2, 1, 0)).copy()
    tmp22 = t2.transpose((0, 1, 3, 2)).copy()
    tmp22 += t2 * -0.5
    tmp5 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 5, 1), (5, 0, 4, 3))
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp6, (1, 4, 5, 3), (0, 4, 2, 5))
    del tmp6
    tmp13 = l2.transpose((3, 2, 0, 1)).copy() * -1
    tmp13 += l2.transpose((2, 3, 0, 1)) * 2
    tmp12 = v.xov.transpose((1, 2, 0)).copy()
    tmp12 += tmp11
    del tmp11
    tmp31 = einsum(v.xov, (0, 1, 2), tmp30, (1, 3, 2, 4), (3, 4, 0))
    del tmp30
    tmp18 = einsum(tmp0, (0, 1, 2, 3), t2, (4, 1, 2, 5), (4, 0, 5, 3))
    tmp3 = einsum(v.xoo, (0, 1, 2), v.xvv, (0, 3, 4), (1, 2, 3, 4))
    tmp26 = einsum(l2, (0, 1, 2, 3), tmp22, (3, 2, 4, 1), (0, 4)) * 2
    tmp23 = einsum(tmp22, (0, 1, 2, 3), l2, (3, 2, 0, 4), (4, 1)) * 2
    del tmp22
    tmp8 = tmp5.copy()
    del tmp5
    tmp8 += tmp7.transpose((1, 0, 3, 2)) * -1
    del tmp7
    tmp14 = einsum(tmp12, (0, 1, 2), tmp13, (0, 3, 1, 4), (3, 4, 2))
    del tmp12, tmp13
    tmp34 = einsum(v.xov, (0, 1, 2), tmp31, (3, 2, 0), (1, 3))
    tmp32 = einsum(v.xov, (0, 1, 2), tmp31, (1, 3, 0), (2, 3)) * 0.5
    del tmp31
    tmp19 = tmp3.transpose((1, 0, 3, 2)).copy() * -1
    tmp19 += tmp18
    del tmp18
    tmp27 = einsum(v.xov, (0, 1, 2), tmp26, (3, 2), (1, 3, 0))
    del tmp26
    tmp24 = einsum(tmp23, (0, 1), v.xov, (2, 1, 3), (0, 3, 2)) * 0.5
    del tmp23
    tmp9 = einsum(tmp8, (0, 1, 2, 3), tmp0, (1, 4, 5, 3), (4, 0, 5, 2))
    del tmp8
    tmp15 = einsum(tmp14, (0, 1, 2), v.xov, (2, 3, 4), (3, 0, 4, 1))
    del tmp14
    tmp4 = einsum(tmp3, (0, 1, 2, 3), l2, (4, 3, 5, 1), (5, 0, 4, 2))
    del tmp3
    tmp35 = einsum(tmp34, (0, 1), l2, (2, 3, 1, 4), (0, 4, 2, 3))
    del tmp34
    tmp33 = einsum(l2, (0, 1, 2, 3), tmp32, (4, 1), (3, 2, 0, 4)) * 2
    del tmp32
    tmp17 = einsum(f.vv, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    tmp20 = einsum(tmp19, (0, 1, 2, 3), l2, (4, 2, 0, 5), (5, 1, 4, 3))
    del tmp19
    tmp28 = einsum(v.xov, (0, 1, 2), tmp27, (3, 4, 0), (1, 3, 2, 4))
    del tmp27
    tmp25 = einsum(v.xov, (0, 1, 2), tmp24, (3, 4, 0), (1, 3, 2, 4)) * 2
    del tmp24
    tmp38 = einsum(v.xoo, (0, 1, 2), v.xoo, (0, 3, 4), (3, 1, 2, 4))
    tmp38 += einsum(tmp0, (0, 1, 2, 3), t2, (4, 5, 3, 2), (4, 5, 0, 1))
    l2new += einsum(l2, (0, 1, 2, 3), tmp38, (2, 3, 4, 5), (0, 1, 5, 4))
    del tmp38
    tmp16 = tmp4.copy()
    del tmp4
    tmp16 += tmp9.transpose((1, 0, 3, 2)) * -1
    del tmp9
    tmp16 += tmp15.transpose((1, 0, 3, 2)) * -1
    del tmp15
    l2new += tmp16.transpose((3, 2, 1, 0)) * -1
    l2new += tmp16.transpose((2, 3, 0, 1)) * -1
    del tmp16
    tmp36 = tmp33.transpose((1, 0, 2, 3)).copy()
    del tmp33
    tmp36 += tmp35.transpose((1, 0, 3, 2))
    del tmp35
    l2new += tmp36.transpose((3, 2, 1, 0)) * -1
    l2new += tmp36.transpose((2, 3, 0, 1)) * -1
    del tmp36
    tmp37 = einsum(l2, (0, 1, 2, 3), f.oo, (4, 3), (4, 2, 0, 1))
    l2new += tmp37.transpose((2, 3, 1, 0)) * -1
    l2new += tmp37.transpose((3, 2, 0, 1)) * -1
    del tmp37
    tmp21 = tmp17.copy()
    del tmp17
    tmp21 += tmp20
    del tmp20
    l2new += tmp21.transpose((2, 3, 1, 0))
    l2new += tmp21.transpose((3, 2, 0, 1))
    del tmp21
    tmp29 = tmp25.transpose((1, 0, 2, 3)).copy()
    del tmp25
    tmp29 += tmp28.transpose((0, 1, 3, 2))
    del tmp28
    l2new += tmp29.transpose((2, 3, 1, 0)) * -1
    l2new += tmp29.transpose((3, 2, 0, 1)) * -1
    del tmp29
    tmp1 = einsum(t2, (0, 1, 2, 3), l2, (3, 2, 4, 5), (5, 4, 0, 1))
    l2new += einsum(tmp0, (0, 1, 2, 3), tmp1, (4, 5, 0, 1), (3, 2, 5, 4))
    del tmp0, tmp1
    tmp2 = einsum(v.xvv, (0, 1, 2), v.xvv, (0, 3, 4), (1, 3, 4, 2))
    l2new += einsum(l2, (0, 1, 2, 3), tmp2, (4, 0, 5, 1), (5, 4, 2, 3))
    del tmp2

    return {f"l2new": l2new}

def make_rdm1_f(l2=None, t2=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-09T21:29:32.212250.

    Parameters
    ----------
    l2 : array
        L2 amplitudes.
    t2 : array
        T2 amplitudes.

    Returns
    -------
    rdm1 : array
        One-particle reduced density matrix.
    """

    rdm1 = Namespace()
    delta = Namespace(
        oo=np.eye(t2.shape[0]),
        vv=np.eye(t2.shape[-1]),
    )
    tmp1 = t2.transpose((0, 1, 3, 2)).copy()
    tmp1 += t2 * -0.5
    rdm1.vv = einsum(l2, (0, 1, 2, 3), tmp1, (3, 2, 4, 1), (0, 4)) * 4
    del tmp1
    tmp0 = t2.transpose((0, 1, 3, 2)).copy() * -0.5
    tmp0 += t2
    rdm1.oo = einsum(tmp0, (0, 1, 2, 3), l2, (2, 3, 0, 4), (1, 4)) * -4
    del tmp0
    rdm1.oo += delta.oo * 2
    del delta
    rdm1.ov = np.zeros((t2.shape[0], t2.shape[-1]))
    rdm1.vo = np.zeros((t2.shape[-1], t2.shape[0]))
    rdm1 = np.block([[rdm1.oo, rdm1.ov], [rdm1.vo, rdm1.vv]])

    return rdm1

def make_rdm2_f(l2=None, t2=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-09T21:29:50.994616.

    Parameters
    ----------
    l2 : array
        L2 amplitudes.
    t2 : array
        T2 amplitudes.

    Returns
    -------
    rdm2 : array
        Two-particle reduced density matrix.
    """

    rdm2 = Namespace()
    delta = Namespace(
        oo=np.eye(t2.shape[0]),
        vv=np.eye(t2.shape[-1]),
    )
    tmp0 = t2.transpose((0, 1, 3, 2)).copy()
    tmp0 += t2 * -0.5
    tmp12 = l2.transpose((3, 2, 0, 1)).copy() * 2
    tmp12 += l2.transpose((2, 3, 0, 1)) * -1
    tmp6 = l2.transpose((3, 2, 0, 1)).copy()
    tmp6 += l2.transpose((2, 3, 0, 1)) * -1
    tmp3 = l2.transpose((3, 2, 0, 1)).copy() * 2
    tmp3 += l2.transpose((2, 3, 0, 1)) * -1
    tmp1 = einsum(l2, (0, 1, 2, 3), tmp0, (2, 4, 1, 0), (3, 4)) * 2
    del tmp0
    rdm2.oooo = einsum(delta.oo, (0, 1), tmp1, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (1, 2, 3, 0))
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (2, 1, 0, 3))
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (1, 2, 3, 0))
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (2, 1, 0, 3))
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (1, 2, 0, 3)) * -1
    tmp13 = einsum(t2, (0, 1, 2, 3), tmp12, (0, 1, 4, 2), (3, 4)) * 0.5
    rdm2.ovvo = einsum(delta.oo, (0, 1), tmp13, (2, 3), (0, 3, 2, 1)) * -2
    rdm2.ovvo += einsum(delta.oo, (0, 1), tmp13, (2, 3), (0, 3, 2, 1)) * -2
    rdm2.ovov = einsum(delta.oo, (0, 1), tmp13, (2, 3), (0, 3, 1, 2)) * 2
    rdm2.ovov += einsum(delta.oo, (0, 1), tmp13, (2, 3), (0, 3, 1, 2)) * 2
    rdm2.ovov += einsum(delta.oo, (0, 1), tmp13, (2, 3), (0, 3, 1, 2)) * 2
    rdm2.ovov += einsum(delta.oo, (0, 1), tmp13, (2, 3), (0, 3, 1, 2)) * 2
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp6, (1, 4, 5, 2), (0, 4, 3, 5))
    del tmp6
    rdm2.ovvo += tmp7.transpose((0, 3, 2, 1)) * -1
    rdm2.ovvo += tmp7.transpose((0, 3, 2, 1)) * -1
    tmp4 = einsum(tmp3, (0, 1, 2, 3), t2, (4, 0, 5, 3), (1, 4, 2, 5))
    del tmp3
    rdm2.vovo = tmp4.transpose((2, 1, 3, 0)).copy() * -1
    rdm2.vovo += tmp4.transpose((2, 1, 3, 0)) * -1
    rdm2.voov = tmp4.transpose((2, 1, 0, 3)).copy()
    rdm2.voov += tmp4.transpose((2, 1, 0, 3))
    rdm2.ovvo += tmp4.transpose((1, 2, 3, 0))
    rdm2.ovvo += tmp4.transpose((1, 2, 3, 0))
    rdm2.ovvo += tmp4.transpose((1, 2, 3, 0))
    rdm2.ovvo += tmp4.transpose((1, 2, 3, 0))
    tmp26 = l2.transpose((3, 2, 0, 1)).copy() * -1
    tmp26 += l2.transpose((2, 3, 0, 1))
    tmp23 = t2.transpose((0, 1, 3, 2)).copy() * -1
    tmp23 += t2 * 2
    tmp21 = t2.transpose((0, 1, 3, 2)).copy() * -1
    tmp21 += t2
    tmp19 = einsum(l2, (0, 1, 2, 3), t2, (4, 2, 1, 5), (3, 4, 0, 5))
    rdm2.vovo += tmp19.transpose((2, 1, 3, 0)) * -1
    rdm2.vovo += tmp19.transpose((2, 1, 3, 0)) * -1
    rdm2.ovov += tmp19.transpose((1, 2, 0, 3)) * -1
    rdm2.ovov += tmp19.transpose((1, 2, 0, 3)) * -1
    tmp15 = einsum(tmp1, (0, 1), t2, (2, 0, 3, 4), (1, 2, 4, 3))
    del tmp1
    tmp14 = einsum(tmp13, (0, 1), t2, (2, 3, 1, 4), (2, 3, 4, 0)) * 2
    del tmp13
    tmp17 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 5, 1), (5, 0, 4, 3))
    rdm2.voov += tmp17.transpose((2, 1, 0, 3)) * -1
    rdm2.voov += tmp17.transpose((2, 1, 0, 3)) * -1
    rdm2.ovvo += tmp17.transpose((1, 2, 3, 0)) * -1
    rdm2.ovvo += tmp17.transpose((1, 2, 3, 0)) * -1
    tmp8 = einsum(t2, (0, 1, 2, 3), tmp7, (4, 1, 5, 2), (4, 0, 5, 3))
    del tmp7
    tmp5 = einsum(tmp4, (0, 1, 2, 3), t2, (4, 0, 5, 2), (1, 4, 3, 5))
    rdm2.oovv = tmp5.transpose((1, 0, 3, 2)).copy() * 2
    rdm2.oovv += tmp5.transpose((1, 0, 3, 2)) * 2
    tmp2 = einsum(t2, (0, 1, 2, 3), l2, (3, 2, 4, 5), (5, 4, 0, 1))
    rdm2.oooo += tmp2.transpose((3, 2, 1, 0))
    rdm2.oooo += tmp2.transpose((2, 3, 1, 0)) * -1
    rdm2.oooo += tmp2.transpose((3, 2, 1, 0))
    rdm2.oooo += tmp2.transpose((3, 2, 1, 0))
    rdm2.oooo += tmp2.transpose((3, 2, 1, 0))
    rdm2.oooo += tmp2.transpose((2, 3, 1, 0)) * -1
    tmp28 = einsum(l2, (0, 1, 2, 3), t2, (3, 2, 4, 5), (0, 1, 5, 4))
    rdm2.vvvv = tmp28.transpose((1, 0, 3, 2)).copy()
    rdm2.vvvv += tmp28.transpose((1, 0, 2, 3)) * -1
    rdm2.vvvv += tmp28.transpose((1, 0, 3, 2))
    rdm2.vvvv += tmp28.transpose((1, 0, 3, 2))
    rdm2.vvvv += tmp28.transpose((1, 0, 3, 2))
    rdm2.vvvv += tmp28.transpose((1, 0, 2, 3)) * -1
    del tmp28
    tmp25 = einsum(t2, (0, 1, 2, 3), tmp12, (0, 1, 4, 2), (3, 4))
    del tmp12
    rdm2.vovo += einsum(delta.oo, (0, 1), tmp25, (2, 3), (3, 0, 2, 1))
    rdm2.vovo += einsum(delta.oo, (0, 1), tmp25, (2, 3), (3, 0, 2, 1))
    rdm2.vovo += einsum(delta.oo, (0, 1), tmp25, (2, 3), (3, 0, 2, 1))
    rdm2.vovo += einsum(delta.oo, (0, 1), tmp25, (2, 3), (3, 0, 2, 1))
    rdm2.voov += einsum(delta.oo, (0, 1), tmp25, (2, 3), (3, 0, 1, 2)) * -1
    rdm2.voov += einsum(delta.oo, (0, 1), tmp25, (2, 3), (3, 0, 1, 2)) * -1
    del tmp25
    tmp27 = einsum(t2, (0, 1, 2, 3), tmp26, (1, 4, 5, 2), (0, 4, 3, 5))
    del tmp26
    rdm2.vovo += tmp27.transpose((3, 0, 2, 1)) * -1
    rdm2.vovo += tmp27.transpose((3, 0, 2, 1)) * -1
    del tmp27
    tmp24 = einsum(l2, (0, 1, 2, 3), tmp23, (3, 4, 1, 5), (2, 4, 0, 5))
    del tmp23
    rdm2.voov += tmp24.transpose((2, 1, 0, 3))
    rdm2.voov += tmp24.transpose((2, 1, 0, 3))
    rdm2.ovov += tmp24.transpose((1, 2, 0, 3)) * -1
    rdm2.ovov += tmp24.transpose((1, 2, 0, 3)) * -1
    del tmp24
    tmp22 = einsum(l2, (0, 1, 2, 3), tmp21, (2, 4, 1, 5), (3, 4, 0, 5))
    del tmp21
    rdm2.voov += tmp22.transpose((2, 1, 0, 3)) * -1
    rdm2.voov += tmp22.transpose((2, 1, 0, 3)) * -1
    rdm2.ovov += tmp22.transpose((1, 2, 0, 3))
    rdm2.ovov += tmp22.transpose((1, 2, 0, 3))
    del tmp22
    tmp20 = einsum(t2, (0, 1, 2, 3), tmp19, (1, 4, 2, 5), (0, 4, 3, 5))
    del tmp19
    rdm2.oovv += tmp20.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp20.transpose((0, 1, 3, 2))
    del tmp20
    tmp16 = tmp14.transpose((1, 0, 2, 3)).copy()
    del tmp14
    tmp16 += tmp15.transpose((1, 0, 3, 2))
    del tmp15
    rdm2.oovv += tmp16.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp16.transpose((1, 0, 2, 3))
    rdm2.oovv += tmp16.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp16 * -1
    rdm2.oovv += tmp16.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp16 * -1
    rdm2.oovv += tmp16.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp16 * -1
    rdm2.oovv += tmp16.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp16.transpose((1, 0, 2, 3))
    rdm2.oovv += tmp16.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp16 * -1
    del tmp16
    tmp18 = einsum(t2, (0, 1, 2, 3), tmp17, (1, 4, 2, 5), (0, 4, 3, 5))
    del tmp17
    rdm2.oovv += tmp18
    rdm2.oovv += tmp18
    del tmp18
    tmp10 = einsum(t2, (0, 1, 2, 3), tmp4, (1, 4, 2, 5), (4, 0, 5, 3))
    del tmp4
    rdm2.oovv += tmp10.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp10.transpose((1, 0, 2, 3))
    rdm2.oovv += tmp10.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp10 * -1
    rdm2.oovv += tmp10.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp10 * -1
    rdm2.oovv += tmp10.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp10 * -1
    rdm2.oovv += tmp10.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp10.transpose((1, 0, 2, 3))
    rdm2.oovv += tmp10.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp10 * -1
    del tmp10
    tmp9 = tmp5.transpose((1, 0, 3, 2)).copy() * 2
    del tmp5
    tmp9 += tmp8
    del tmp8
    rdm2.oovv += tmp9.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += tmp9
    rdm2.oovv += tmp9.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += tmp9
    del tmp9
    tmp11 = einsum(t2, (0, 1, 2, 3), tmp2, (1, 0, 4, 5), (5, 4, 2, 3))
    del tmp2
    rdm2.oovv += tmp11.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += tmp11
    rdm2.oovv += tmp11
    rdm2.oovv += tmp11
    rdm2.oovv += tmp11.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += tmp11
    del tmp11
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (2, 0, 3, 1))
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (2, 0, 3, 1))
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (2, 0, 3, 1))
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (2, 0, 3, 1))
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (0, 2, 3, 1)) * -1
    del delta
    rdm2.oovv += t2.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += t2
    rdm2.oovv += t2
    rdm2.oovv += t2
    rdm2.oovv += t2.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += t2
    rdm2.vvoo = l2.transpose((0, 1, 3, 2)).copy() * -1
    rdm2.vvoo += l2
    rdm2.vvoo += l2
    rdm2.vvoo += l2
    rdm2.vvoo += l2.transpose((0, 1, 3, 2)) * -1
    rdm2.vvoo += l2
    rdm2.ooov = np.zeros((t2.shape[0], t2.shape[0], t2.shape[0], t2.shape[-1]))
    rdm2.oovo = np.zeros((t2.shape[0], t2.shape[0], t2.shape[-1], t2.shape[0]))
    rdm2.ovoo = np.zeros((t2.shape[0], t2.shape[-1], t2.shape[0], t2.shape[0]))
    rdm2.vooo = np.zeros((t2.shape[-1], t2.shape[0], t2.shape[0], t2.shape[0]))
    rdm2.ovvv = np.zeros((t2.shape[0], t2.shape[-1], t2.shape[-1], t2.shape[-1]))
    rdm2.vovv = np.zeros((t2.shape[-1], t2.shape[0], t2.shape[-1], t2.shape[-1]))
    rdm2.vvov = np.zeros((t2.shape[-1], t2.shape[-1], t2.shape[0], t2.shape[-1]))
    rdm2.vvvo = np.zeros((t2.shape[-1], t2.shape[-1], t2.shape[-1], t2.shape[0]))
    rdm2 = pack_2e(rdm2.oooo, rdm2.ooov, rdm2.oovo, rdm2.ovoo, rdm2.vooo, rdm2.oovv, rdm2.ovov, rdm2.ovvo, rdm2.voov, rdm2.vovo, rdm2.vvoo, rdm2.ovvv, rdm2.vovv, rdm2.vvov, rdm2.vvvo, rdm2.vvvv)
    rdm2 = rdm2.swapaxes(1, 2)

    return rdm2

