"""Code generated by `albert` version 0.0.0.

 * date: 2024-12-19T15:11:04.816941
 * python version: 3.10.15 (main, Sep  9 2024, 03:03:06) [GCC 13.2.0]
 * albert version: 0.0.0
 * caller: /opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/albert/code/einsum.py
 * node: fv-az1676-657
 * system: Linux
 * processor: x86_64
 * release: 6.8.0-1017-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        t2: 
        v: 

    Returns:
        e_cc: 
    """

    tmp0 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -1
    tmp0 += np.transpose(t2, (1, 0, 3, 2)) * 2
    tmp1 = einsum(v.xov, (0, 1, 2), tmp0, (1, 3, 2, 4), (3, 4, 0)) * 0.5
    del tmp0
    e_cc = einsum(tmp1, (0, 1, 2), v.xov, (2, 0, 1), ()) * 2
    del tmp1

    return e_cc

def update_amps(f=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t2: 
        v: 

    Returns:
        t2new: 
    """

    tmp0 = einsum(v.xvv, (0, 1, 2), v.xvv, (0, 3, 4), (3, 1, 2, 4))
    t2new = einsum(t2, (0, 1, 2, 3), tmp0, (4, 3, 5, 2), (0, 1, 4, 5))
    del tmp0
    tmp1 = einsum(t2, (0, 1, 2, 3), v.xov, (4, 1, 2), (0, 3, 4))
    t2new += einsum(tmp1, (0, 1, 2), tmp1, (3, 4, 2), (0, 3, 1, 4))
    tmp2 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    tmp3 = einsum(t2, (0, 1, 2, 3), tmp2, (1, 4, 5, 2), (0, 4, 3, 5))
    t2new += einsum(t2, (0, 1, 2, 3), tmp3, (4, 1, 5, 2), (0, 4, 5, 3))
    del tmp3
    t2new += np.transpose(tmp2, (1, 0, 3, 2))
    tmp4 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4))
    t2new += np.transpose(tmp4, (0, 1, 3, 2))
    t2new += np.transpose(tmp4, (1, 0, 2, 3))
    del tmp4
    tmp5 = einsum(t2, (0, 1, 2, 3), tmp2, (4, 1, 3, 5), (0, 4, 2, 5))
    tmp6 = einsum(t2, (0, 1, 2, 3), tmp5, (4, 1, 5, 2), (4, 0, 5, 3))
    del tmp5
    t2new += tmp6
    t2new += np.transpose(tmp6, (1, 0, 3, 2))
    del tmp6
    tmp7 = einsum(tmp1, (0, 1, 2), v.xov, (2, 3, 4), (0, 3, 1, 4))
    tmp19 = np.copy(tmp7)
    del tmp7
    tmp8 = einsum(v.xvv, (0, 1, 2), v.xoo, (0, 3, 4), (3, 4, 1, 2))
    tmp11 = np.copy(np.transpose(tmp8, (1, 0, 3, 2)))
    tmp9 = np.copy(np.transpose(v.xov, (1, 2, 0)))
    tmp9 += tmp1 * -1
    del tmp1
    tmp10 = einsum(tmp9, (0, 1, 2), v.xov, (2, 3, 4), (3, 0, 4, 1)) * 2
    del tmp9
    tmp11 += np.transpose(tmp10, (1, 0, 3, 2)) * -1
    del tmp10
    tmp12 = einsum(t2, (0, 1, 2, 3), tmp11, (4, 1, 5, 3), (0, 4, 2, 5))
    del tmp11
    tmp19 += tmp12
    del tmp12
    tmp13 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -1
    tmp13 += t2 * 2
    tmp14 = einsum(v.xov, (0, 1, 2), tmp13, (1, 3, 2, 4), (3, 4, 0))
    del tmp13
    tmp15 = einsum(v.xov, (0, 1, 2), tmp14, (1, 3, 0), (2, 3)) * 0.5
    tmp16 = einsum(t2, (0, 1, 2, 3), tmp15, (2, 4), (0, 1, 3, 4)) * 2
    del tmp15
    tmp19 += np.transpose(tmp16, (1, 0, 2, 3))
    del tmp16
    tmp17 = einsum(v.xov, (0, 1, 2), tmp14, (3, 2, 0), (1, 3))
    del tmp14
    tmp18 = einsum(t2, (0, 1, 2, 3), tmp17, (1, 4), (0, 4, 3, 2))
    del tmp17
    tmp19 += np.transpose(tmp18, (0, 1, 3, 2))
    del tmp18
    t2new += tmp19 * -1
    t2new += np.transpose(tmp19, (1, 0, 3, 2)) * -1
    del tmp19
    tmp20 = einsum(t2, (0, 1, 2, 3), f.oo, (4, 1), (4, 0, 2, 3))
    tmp22 = np.copy(tmp20)
    del tmp20
    tmp21 = einsum(t2, (0, 1, 2, 3), tmp8, (4, 1, 5, 2), (0, 4, 3, 5))
    del tmp8
    tmp22 += tmp21
    del tmp21
    t2new += np.transpose(tmp22, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp22, (1, 0, 2, 3)) * -1
    del tmp22
    tmp23 = einsum(v.xoo, (0, 1, 2), v.xoo, (0, 3, 4), (1, 3, 4, 2))
    tmp23 += einsum(t2, (0, 1, 2, 3), tmp2, (4, 5, 3, 2), (4, 0, 5, 1))
    t2new += einsum(t2, (0, 1, 2, 3), tmp23, (0, 4, 1, 5), (4, 5, 3, 2))
    del tmp23
    tmp24 = np.copy(np.transpose(tmp2, (1, 0, 2, 3))) * -0.5
    tmp24 += np.transpose(tmp2, (1, 0, 3, 2))
    del tmp2
    tmp25 = einsum(tmp24, (0, 1, 2, 3), t2, (4, 0, 5, 2), (4, 1, 5, 3)) * 2
    del tmp24
    t2new += einsum(t2, (0, 1, 2, 3), tmp25, (4, 1, 5, 3), (4, 0, 5, 2)) * 2
    del tmp25

    return {"t2new": t2new}

def update_lams(f=None, l2=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        l2: 
        t2: 
        v: 

    Returns:
        l2new: 
    """

    tmp0 = einsum(v.xvv, (0, 1, 2), v.xvv, (0, 3, 4), (3, 1, 2, 4))
    l2new = einsum(tmp0, (0, 1, 2, 3), l2, (1, 3, 4, 5), (2, 0, 4, 5))
    del tmp0
    tmp1 = einsum(v.xoo, (0, 1, 2), v.xoo, (0, 3, 4), (3, 1, 2, 4))
    l2new += einsum(l2, (0, 1, 2, 3), tmp1, (4, 3, 5, 2), (0, 1, 4, 5))
    del tmp1
    tmp3 = einsum(t2, (0, 1, 2, 3), l2, (3, 2, 4, 5), (5, 4, 0, 1))
    tmp2 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    l2new += einsum(tmp3, (0, 1, 2, 3), tmp2, (2, 3, 4, 5), (5, 4, 1, 0))
    del tmp3
    tmp4 = einsum(t2, (0, 1, 2, 3), tmp2, (4, 5, 2, 3), (0, 1, 4, 5))
    l2new += einsum(l2, (0, 1, 2, 3), tmp4, (2, 3, 4, 5), (0, 1, 4, 5))
    del tmp4
    l2new += np.transpose(tmp2, (3, 2, 1, 0))
    tmp5 = einsum(f.vv, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    tmp8 = np.copy(tmp5)
    del tmp5
    tmp6 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 1, 5), (5, 0, 4, 3))
    tmp7 = einsum(tmp2, (0, 1, 2, 3), tmp6, (4, 1, 5, 2), (4, 0, 5, 3))
    del tmp6
    tmp8 += tmp7
    del tmp7
    l2new += np.transpose(tmp8, (3, 2, 0, 1))
    l2new += np.transpose(tmp8, (2, 3, 1, 0))
    del tmp8
    tmp9 = einsum(t2, (0, 1, 2, 3), v.xov, (4, 1, 2), (0, 3, 4))
    tmp10 = einsum(tmp9, (0, 1, 2), l2, (3, 1, 0, 4), (4, 3, 2))
    del tmp9
    tmp11 = einsum(v.xov, (0, 1, 2), tmp10, (3, 4, 0), (3, 1, 4, 2))
    del tmp10
    tmp16 = np.copy(tmp11)
    del tmp11
    tmp12 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 5, 1), (5, 0, 4, 3))
    tmp14 = np.copy(tmp12)
    del tmp12
    tmp13 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 1, 5), (5, 0, 4, 2))
    tmp14 += tmp13
    del tmp13
    tmp15 = einsum(tmp2, (0, 1, 2, 3), tmp14, (4, 0, 5, 3), (4, 1, 5, 2))
    del tmp14
    tmp16 += tmp15
    del tmp15
    l2new += np.transpose(tmp16, (2, 3, 0, 1))
    l2new += np.transpose(tmp16, (3, 2, 1, 0))
    del tmp16
    tmp17 = einsum(f.oo, (0, 1), l2, (2, 3, 4, 1), (0, 4, 2, 3))
    tmp27 = np.copy(tmp17)
    del tmp17
    tmp18 = einsum(v.xvv, (0, 1, 2), v.xoo, (0, 3, 4), (3, 4, 1, 2))
    tmp19 = einsum(tmp18, (0, 1, 2, 3), l2, (4, 3, 1, 5), (5, 0, 4, 2))
    tmp27 += tmp19
    del tmp19
    tmp20 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -0.5
    tmp20 += t2
    tmp21 = einsum(l2, (0, 1, 2, 3), tmp20, (2, 4, 0, 1), (4, 3)) * 2
    tmp22 = einsum(v.xov, (0, 1, 2), tmp21, (1, 3), (3, 2, 0)) * 0.5
    del tmp21
    tmp23 = einsum(v.xov, (0, 1, 2), tmp22, (3, 4, 0), (3, 1, 4, 2)) * 2
    del tmp22
    tmp27 += np.transpose(tmp23, (0, 1, 3, 2))
    del tmp23
    tmp24 = einsum(tmp20, (0, 1, 2, 3), l2, (4, 3, 0, 1), (2, 4)) * 2
    del tmp20
    tmp25 = einsum(v.xov, (0, 1, 2), tmp24, (2, 3), (1, 3, 0))
    del tmp24
    tmp26 = einsum(tmp25, (0, 1, 2), v.xov, (2, 3, 4), (0, 3, 1, 4))
    del tmp25
    tmp27 += np.transpose(tmp26, (1, 0, 2, 3))
    del tmp26
    l2new += np.transpose(tmp27, (3, 2, 0, 1)) * -1
    l2new += np.transpose(tmp27, (2, 3, 1, 0)) * -1
    del tmp27
    tmp33 = np.copy(np.transpose(tmp18, (1, 0, 3, 2)))
    del tmp18
    tmp28 = einsum(t2, (0, 1, 2, 3), tmp2, (4, 1, 3, 5), (0, 4, 2, 5))
    del tmp2
    tmp33 += tmp28 * 2
    del tmp28
    tmp31 = np.copy(np.transpose(v.xov, (1, 2, 0)))
    tmp29 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -1
    tmp29 += t2 * 2
    tmp30 = einsum(v.xov, (0, 1, 2), tmp29, (1, 3, 2, 4), (3, 4, 0))
    del tmp29
    tmp31 += tmp30
    tmp32 = einsum(tmp31, (0, 1, 2), v.xov, (2, 3, 4), (0, 3, 1, 4)) * 2
    del tmp31
    tmp33 += tmp32 * -1
    del tmp32
    tmp34 = einsum(tmp33, (0, 1, 2, 3), l2, (4, 2, 5, 0), (1, 5, 3, 4))
    del tmp33
    tmp43 = np.copy(np.transpose(tmp34, (1, 0, 3, 2)))
    del tmp34
    tmp36 = np.copy(np.transpose(v.xov, (1, 2, 0)))
    tmp35 = einsum(v.xov, (0, 1, 2), t2, (3, 1, 4, 2), (3, 4, 0))
    tmp36 += tmp35 * 2
    del tmp35
    tmp37 = einsum(l2, (0, 1, 2, 3), tmp36, (2, 1, 4), (3, 0, 4)) * 0.5
    del tmp36
    tmp38 = einsum(tmp37, (0, 1, 2), v.xov, (2, 3, 4), (0, 3, 1, 4)) * 2
    del tmp37
    tmp43 += tmp38
    del tmp38
    tmp39 = einsum(v.xov, (0, 1, 2), tmp30, (1, 3, 0), (3, 2)) * 0.5
    tmp40 = einsum(tmp39, (0, 1), l2, (2, 0, 3, 4), (4, 3, 1, 2)) * 2
    del tmp39
    tmp43 += np.transpose(tmp40, (1, 0, 3, 2))
    del tmp40
    tmp41 = einsum(v.xov, (0, 1, 2), tmp30, (3, 2, 0), (3, 1))
    del tmp30
    tmp42 = einsum(l2, (0, 1, 2, 3), tmp41, (2, 4), (4, 3, 0, 1))
    del tmp41
    tmp43 += np.transpose(tmp42, (1, 0, 3, 2))
    del tmp42
    l2new += np.transpose(tmp43, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp43, (3, 2, 1, 0)) * -1
    del tmp43

    return {"l2new": l2new}

def make_rdm1_f(l2=None, t2=None, δ=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        l2: 
        t2: 
        δ: 

    Returns:
        rdm1: 
    """

    δ = Namespace()
    δ.oo = np.eye(t2.shape[0])
    δ.vv = np.eye(t2.shape[-1])

    rdm1 = Namespace()
    rdm1.oo = np.copy(δ.oo) * 2
    tmp0 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -0.5
    tmp0 += t2
    rdm1.oo += einsum(l2, (0, 1, 2, 3), tmp0, (2, 4, 0, 1), (4, 3)) * -4
    del tmp0
    tmp1 = np.copy(np.transpose(t2, (0, 1, 3, 2)))
    tmp1 += t2 * -0.5
    rdm1.vv = einsum(tmp1, (0, 1, 2, 3), l2, (4, 3, 1, 0), (4, 2)) * 4
    del tmp1

    rdm1 = np.block([[rdm1.oo, rdm1.ov], [rdm1.vo, rdm1.vv]])

    return rdm1

def make_rdm2_f(l2=None, t2=None, δ=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        l2: 
        t2: 
        δ: 

    Returns:
        rdm2: 
    """

    δ = Namespace()
    δ.oo = np.eye(t2.shape[0])
    δ.vv = np.eye(t2.shape[-1])

    rdm2 = Namespace()
    rdm2.vvoo = np.copy(np.transpose(l2, (0, 1, 3, 2))) * -1
    rdm2.vvoo += l2
    rdm2.vvoo += l2
    rdm2.vvoo += l2
    rdm2.vvoo += np.transpose(l2, (0, 1, 3, 2)) * -1
    rdm2.vvoo += l2
    tmp31 = einsum(t2, (0, 1, 2, 3), l2, (4, 5, 1, 0), (4, 5, 3, 2))
    rdm2.vvvv = np.copy(np.transpose(tmp31, (1, 0, 2, 3))) * -1
    rdm2.vvvv += np.transpose(tmp31, (1, 0, 3, 2))
    rdm2.vvvv += np.transpose(tmp31, (1, 0, 3, 2))
    rdm2.vvvv += np.transpose(tmp31, (1, 0, 3, 2))
    rdm2.vvvv += np.transpose(tmp31, (1, 0, 2, 3)) * -1
    rdm2.vvvv += np.transpose(tmp31, (1, 0, 3, 2))
    del tmp31
    tmp0 = einsum(t2, (0, 1, 2, 3), l2, (3, 2, 4, 5), (5, 4, 0, 1))
    rdm2.oooo = np.copy(np.transpose(tmp0, (2, 3, 1, 0))) * -1
    rdm2.oooo += np.transpose(tmp0, (3, 2, 1, 0))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (0, 2, 1, 3))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (2, 0, 1, 3)) * -1
    tmp1 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -0.5
    tmp1 += t2
    tmp2 = einsum(l2, (0, 1, 2, 3), tmp1, (2, 4, 0, 1), (3, 4)) * 2
    del tmp1
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (0, 3, 2, 1))
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (1, 2, 3, 0))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += np.transpose(tmp0, (3, 2, 1, 0))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (0, 2, 1, 3))
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += np.transpose(tmp0, (3, 2, 1, 0))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (0, 2, 1, 3))
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (0, 3, 1, 2)) * -1
    rdm2.oooo += np.transpose(tmp0, (2, 3, 1, 0)) * -1
    rdm2.oooo += np.transpose(tmp0, (3, 2, 1, 0))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (0, 2, 1, 3))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (0, 3, 2, 1))
    rdm2.oooo += einsum(tmp2, (0, 1), δ.oo, (2, 3), (1, 2, 3, 0))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp2, (2, 3), (0, 3, 1, 2)) * -1
    tmp19 = np.copy(np.transpose(t2, (0, 1, 3, 2)))
    tmp19 += t2 * -1
    tmp20 = einsum(tmp19, (0, 1, 2, 3), l2, (4, 3, 0, 5), (5, 1, 4, 2))
    del tmp19
    rdm2.ovov = np.copy(np.transpose(tmp20, (1, 2, 0, 3)))
    tmp21 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * 2
    tmp21 += t2 * -1
    tmp22 = einsum(l2, (0, 1, 2, 3), tmp21, (3, 4, 5, 1), (2, 4, 0, 5))
    del tmp21
    rdm2.ovov += np.transpose(tmp22, (1, 2, 0, 3)) * -1
    tmp14 = np.copy(np.transpose(l2, (3, 2, 0, 1))) * -1
    tmp14 += np.transpose(l2, (2, 3, 0, 1)) * 2
    tmp15 = einsum(tmp14, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2)) * 0.5
    rdm2.ovov += einsum(δ.oo, (0, 1), tmp15, (2, 3), (0, 3, 1, 2)) * 2
    tmp5 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 1, 5), (5, 0, 4, 3))
    rdm2.ovov += np.transpose(tmp5, (1, 2, 0, 3)) * -1
    rdm2.ovov += einsum(δ.oo, (0, 1), tmp15, (2, 3), (0, 3, 1, 2)) * 2
    rdm2.ovov += np.transpose(tmp5, (1, 2, 0, 3)) * -1
    rdm2.ovov += einsum(δ.oo, (0, 1), tmp15, (2, 3), (0, 3, 1, 2)) * 2
    rdm2.ovov += np.transpose(tmp20, (1, 2, 0, 3))
    rdm2.ovov += np.transpose(tmp22, (1, 2, 0, 3)) * -1
    rdm2.ovov += einsum(δ.oo, (0, 1), tmp15, (2, 3), (0, 3, 1, 2)) * 2
    tmp27 = np.copy(np.transpose(l2, (3, 2, 0, 1)))
    tmp27 += np.transpose(l2, (2, 3, 0, 1)) * -0.5
    tmp28 = einsum(tmp27, (0, 1, 2, 3), t2, (4, 0, 5, 3), (4, 1, 5, 2)) * 2
    del tmp27
    rdm2.vovo = np.copy(np.transpose(tmp28, (3, 0, 2, 1))) * -1
    tmp29 = np.copy(np.transpose(l2, (3, 2, 0, 1))) * -1
    tmp29 += np.transpose(l2, (2, 3, 0, 1))
    tmp30 = einsum(tmp29, (0, 1, 2, 3), t2, (4, 0, 3, 5), (4, 1, 5, 2))
    del tmp29
    rdm2.vovo += np.transpose(tmp30, (3, 0, 2, 1)) * -1
    tmp26 = einsum(tmp14, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    del tmp14
    rdm2.vovo += einsum(δ.oo, (0, 1), tmp26, (2, 3), (3, 0, 2, 1))
    rdm2.vovo += np.transpose(tmp5, (2, 1, 3, 0)) * -1
    rdm2.vovo += einsum(δ.oo, (0, 1), tmp26, (2, 3), (3, 0, 2, 1))
    rdm2.vovo += np.transpose(tmp5, (2, 1, 3, 0)) * -1
    rdm2.vovo += einsum(δ.oo, (0, 1), tmp26, (2, 3), (3, 0, 2, 1))
    rdm2.vovo += np.transpose(tmp28, (3, 0, 2, 1)) * -1
    del tmp28
    rdm2.vovo += np.transpose(tmp30, (3, 0, 2, 1)) * -1
    del tmp30
    rdm2.vovo += einsum(δ.oo, (0, 1), tmp26, (2, 3), (3, 0, 2, 1))
    tmp9 = np.copy(np.transpose(l2, (3, 2, 0, 1))) * 2
    tmp9 += np.transpose(l2, (2, 3, 0, 1)) * -1
    tmp10 = einsum(t2, (0, 1, 2, 3), tmp9, (1, 4, 5, 3), (4, 0, 5, 2))
    del tmp9
    rdm2.ovvo = np.copy(np.transpose(tmp10, (1, 2, 3, 0)))
    tmp23 = np.copy(np.transpose(l2, (3, 2, 0, 1)))
    tmp23 += np.transpose(l2, (2, 3, 0, 1)) * -1
    tmp24 = einsum(tmp23, (0, 1, 2, 3), t2, (4, 0, 3, 5), (4, 1, 5, 2))
    del tmp23
    rdm2.ovvo += np.transpose(tmp24, (0, 3, 2, 1)) * -1
    rdm2.ovvo += einsum(δ.oo, (0, 1), tmp15, (2, 3), (0, 3, 2, 1)) * -2
    tmp25 = einsum(l2, (0, 1, 2, 3), t2, (4, 2, 5, 1), (3, 4, 0, 5))
    rdm2.ovvo += np.transpose(tmp25, (1, 2, 3, 0)) * -1
    rdm2.ovvo += np.transpose(tmp22, (1, 2, 3, 0))
    rdm2.ovvo += np.transpose(tmp25, (1, 2, 3, 0)) * -1
    del tmp25
    rdm2.ovvo += np.transpose(tmp22, (1, 2, 3, 0))
    rdm2.ovvo += np.transpose(tmp10, (1, 2, 3, 0))
    rdm2.ovvo += np.transpose(tmp24, (0, 3, 2, 1)) * -1
    del tmp24
    rdm2.ovvo += einsum(δ.oo, (0, 1), tmp15, (2, 3), (0, 3, 2, 1)) * -2
    rdm2.voov = np.copy(np.transpose(tmp22, (2, 1, 0, 3)))
    rdm2.voov += np.transpose(tmp20, (2, 1, 0, 3)) * -1
    rdm2.voov += einsum(δ.oo, (0, 1), tmp26, (2, 3), (3, 0, 1, 2)) * -1
    tmp3 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 5, 1), (5, 0, 4, 3))
    rdm2.voov += np.transpose(tmp3, (2, 1, 0, 3)) * -1
    rdm2.voov += np.transpose(tmp10, (2, 1, 0, 3))
    rdm2.voov += np.transpose(tmp3, (2, 1, 0, 3)) * -1
    rdm2.voov += np.transpose(tmp10, (2, 1, 0, 3))
    rdm2.voov += np.transpose(tmp22, (2, 1, 0, 3))
    del tmp22
    rdm2.voov += np.transpose(tmp20, (2, 1, 0, 3)) * -1
    del tmp20
    rdm2.voov += einsum(δ.oo, (0, 1), tmp26, (2, 3), (3, 0, 1, 2)) * -1
    del tmp26
    rdm2.oovv = np.copy(np.transpose(t2, (0, 1, 3, 2))) * -1
    rdm2.oovv += t2
    tmp4 = einsum(t2, (0, 1, 2, 3), tmp3, (1, 4, 2, 5), (4, 0, 5, 3))
    rdm2.oovv += tmp4
    rdm2.oovv += np.transpose(tmp4, (0, 1, 3, 2)) * -1
    tmp6 = einsum(t2, (0, 1, 2, 3), tmp5, (1, 4, 3, 5), (0, 4, 2, 5))
    rdm2.oovv += tmp6
    rdm2.oovv += np.transpose(tmp6, (0, 1, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp6, (1, 0, 2, 3)) * -1
    rdm2.oovv += np.transpose(tmp6, (1, 0, 3, 2))
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp0, (1, 0, 4, 5), (4, 5, 3, 2))
    del tmp0
    tmp12 = np.copy(tmp7)
    tmp8 = einsum(t2, (0, 1, 2, 3), tmp5, (1, 4, 2, 5), (4, 0, 5, 3))
    del tmp5
    tmp12 += tmp8 * -1
    tmp11 = einsum(t2, (0, 1, 2, 3), tmp10, (1, 4, 3, 5), (4, 0, 5, 2)) * 2
    del tmp10
    tmp12 += tmp11
    rdm2.oovv += tmp12
    rdm2.oovv += np.transpose(tmp12, (0, 1, 3, 2)) * -1
    tmp13 = einsum(t2, (0, 1, 2, 3), tmp3, (1, 4, 3, 5), (0, 4, 2, 5))
    del tmp3
    tmp18 = np.copy(tmp13) * 2
    del tmp13
    tmp16 = einsum(t2, (0, 1, 2, 3), tmp15, (4, 2), (0, 1, 3, 4)) * 2
    del tmp15
    tmp18 += np.transpose(tmp16, (1, 0, 2, 3))
    del tmp16
    tmp17 = einsum(tmp2, (0, 1), t2, (2, 0, 3, 4), (1, 2, 4, 3))
    del tmp2
    tmp18 += np.transpose(tmp17, (1, 0, 3, 2))
    del tmp17
    rdm2.oovv += tmp18 * -1
    rdm2.oovv += np.transpose(tmp18, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp18, (1, 0, 2, 3))
    rdm2.oovv += np.transpose(tmp18, (1, 0, 3, 2)) * -1
    rdm2.oovv += t2
    rdm2.oovv += tmp4
    rdm2.oovv += np.transpose(tmp8, (0, 1, 3, 2))
    rdm2.oovv += tmp7
    rdm2.oovv += tmp6
    rdm2.oovv += np.transpose(tmp6, (1, 0, 3, 2))
    rdm2.oovv += tmp18 * -1
    rdm2.oovv += np.transpose(tmp18, (1, 0, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp11, (1, 0, 3, 2))
    rdm2.oovv += t2
    rdm2.oovv += tmp4
    rdm2.oovv += np.transpose(tmp8, (0, 1, 3, 2))
    del tmp8
    rdm2.oovv += tmp7
    del tmp7
    rdm2.oovv += tmp6
    rdm2.oovv += np.transpose(tmp6, (1, 0, 3, 2))
    rdm2.oovv += tmp18 * -1
    rdm2.oovv += np.transpose(tmp18, (1, 0, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp11, (1, 0, 3, 2))
    del tmp11
    rdm2.oovv += np.transpose(t2, (0, 1, 3, 2)) * -1
    rdm2.oovv += t2
    rdm2.oovv += tmp4
    rdm2.oovv += np.transpose(tmp4, (0, 1, 3, 2)) * -1
    del tmp4
    rdm2.oovv += tmp6
    rdm2.oovv += np.transpose(tmp6, (0, 1, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp6, (1, 0, 2, 3)) * -1
    rdm2.oovv += np.transpose(tmp6, (1, 0, 3, 2))
    del tmp6
    rdm2.oovv += tmp12
    rdm2.oovv += np.transpose(tmp12, (0, 1, 3, 2)) * -1
    del tmp12
    rdm2.oovv += tmp18 * -1
    rdm2.oovv += np.transpose(tmp18, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp18, (1, 0, 2, 3))
    rdm2.oovv += np.transpose(tmp18, (1, 0, 3, 2)) * -1
    del tmp18

    rdm2 = pack_2e(rdm2.oooo, rdm2.ooov, rdm2.oovo, rdm2.ovoo, rdm2.vooo, rdm2.oovv, rdm2.ovov, rdm2.ovvo, rdm2.voov, rdm2.vovo, rdm2.vvoo, rdm2.ovvv, rdm2.vovv, rdm2.vvov, rdm2.vvvo, rdm2.vvvv).transpose((0, 2, 1, 3))

    return rdm2

def hbar_matvec_ip_intermediates(f=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t2: 
        v: 

    Returns:
        tmp0: 
        tmp10: 
        tmp11: 
        tmp12: 
        tmp14: 
        tmp16: 
        tmp20: 
        tmp23: 
        tmp25: 
        tmp5: 
        tmp6: 
    """

    tmp5 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp3 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -1
    tmp3 += np.transpose(t2, (1, 0, 3, 2)) * 2
    tmp4 = einsum(v.xov, (0, 1, 2), tmp3, (1, 3, 2, 4), (3, 4, 0)) * 0.5
    tmp5 += einsum(v.xov, (0, 1, 2), tmp4, (3, 2, 0), (1, 3)) * 2
    tmp16 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp15 = einsum(v.xov, (0, 1, 2), tmp3, (1, 3, 2, 4), (3, 4, 0))
    tmp16 += einsum(v.xov, (0, 1, 2), tmp15, (1, 3, 0), (2, 3)) * -1
    tmp7 = einsum(v.xvv, (0, 1, 2), v.xoo, (0, 3, 4), (3, 4, 1, 2))
    tmp11 = np.copy(np.transpose(tmp7, (1, 0, 3, 2))) * -1
    tmp6 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    tmp11 += einsum(t2, (0, 1, 2, 3), tmp6, (1, 4, 5, 2), (0, 4, 3, 5))
    tmp12 = einsum(v.xoo, (0, 1, 2), v.xoo, (0, 3, 4), (2, 3, 4, 1))
    tmp12 += einsum(t2, (0, 1, 2, 3), tmp6, (4, 5, 2, 3), (4, 1, 5, 0))
    tmp23 = np.copy(np.transpose(f.oo, (1, 0))) * 0.5
    tmp22 = einsum(v.xov, (0, 1, 2), tmp15, (3, 2, 0), (3, 1)) * 0.5
    tmp23 += tmp22
    del tmp22
    tmp10 = np.copy(np.transpose(tmp6, (1, 0, 3, 2)))
    tmp10 += np.transpose(tmp7, (1, 0, 3, 2)) * -0.5
    del tmp7
    tmp8 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * 2
    tmp8 += np.transpose(t2, (1, 0, 3, 2)) * -1
    tmp9 = np.copy(np.transpose(tmp6, (1, 0, 2, 3))) * -0.5
    tmp9 += np.transpose(tmp6, (1, 0, 3, 2))
    tmp10 += einsum(tmp8, (0, 1, 2, 3), tmp9, (0, 4, 3, 5), (1, 4, 2, 5))
    del tmp8, tmp9
    tmp14 = einsum(t2, (0, 1, 2, 3), tmp6, (1, 4, 5, 3), (0, 4, 2, 5)) * -1
    tmp13 = np.copy(np.transpose(v.xov, (1, 2, 0))) * 0.5
    tmp13 += tmp4
    del tmp4
    tmp14 += einsum(tmp13, (0, 1, 2), v.xov, (2, 3, 4), (0, 3, 1, 4)) * 2
    del tmp13
    tmp20 = einsum(f.ov, (0, 1), t2, (2, 3, 1, 4), (0, 3, 2, 4))
    tmp0 = einsum(v.xoo, (0, 1, 2), v.xov, (0, 3, 4), (1, 2, 3, 4))
    tmp20 += einsum(t2, (0, 1, 2, 3), tmp0, (4, 1, 5, 2), (5, 4, 0, 3)) * -1
    tmp17 = einsum(v.xov, (0, 1, 2), v.xvv, (0, 3, 4), (1, 3, 4, 2))
    tmp20 += einsum(t2, (0, 1, 2, 3), tmp17, (4, 5, 2, 3), (4, 0, 1, 5))
    del tmp17
    tmp18 = np.copy(np.transpose(tmp0, (1, 0, 2, 3))) * -1
    tmp18 += np.transpose(tmp0, (2, 1, 0, 3)) * 2
    tmp20 += einsum(t2, (0, 1, 2, 3), tmp18, (0, 4, 5, 2), (5, 1, 4, 3))
    del tmp18
    tmp19 = np.copy(np.transpose(v.xov, (1, 2, 0))) * -1
    tmp19 += einsum(t2, (0, 1, 2, 3), v.xov, (4, 1, 2), (0, 3, 4))
    tmp20 += einsum(tmp19, (0, 1, 2), v.xoo, (2, 3, 4), (4, 0, 3, 1)) * -1
    del tmp19
    tmp25 = np.copy(f.ov)
    tmp25 += einsum(tmp0, (0, 1, 2, 3), tmp3, (2, 0, 3, 4), (1, 4)) * -1
    del tmp3
    tmp25 += einsum(v.xvv, (0, 1, 2), tmp15, (3, 1, 0), (3, 2))
    del tmp15
    tmp24 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -0.5
    tmp24 += np.transpose(t2, (1, 0, 3, 2))
    tmp25 += einsum(tmp24, (0, 1, 2, 3), f.ov, (0, 2), (1, 3)) * 2
    del tmp24

    return {"tmp0": tmp0, "tmp10": tmp10, "tmp11": tmp11, "tmp12": tmp12, "tmp14": tmp14, "tmp16": tmp16, "tmp20": tmp20, "tmp23": tmp23, "tmp25": tmp25, "tmp5": tmp5, "tmp6": tmp6}

def hbar_matvec_ip(f=None, ints=None, r1=None, r2=None, t2=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        t2: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(r1, (0,), ints.tmp5, (0, 1), (1,)) * -1
    tmp0 = np.copy(r2) * 2
    tmp0 += np.transpose(r2, (1, 0, 2)) * -1
    r1new += einsum(tmp0, (0, 1, 2), ints.tmp0, (1, 3, 0, 2), (3,))
    r1new += einsum(f.ov, (0, 1), tmp0, (0, 2, 1), (2,)) * -1
    del tmp0
    r2new = einsum(r1, (0,), ints.tmp25, (1, 2), (1, 0, 2)) * -1
    r2new += einsum(ints.tmp12, (0, 1, 2, 3), r2, (2, 0, 4), (1, 3, 4))
    r2new += einsum(ints.tmp16, (0, 1), r2, (2, 3, 0), (2, 3, 1))
    r2new += einsum(ints.tmp20, (0, 1, 2, 3), r1, (0,), (1, 2, 3))
    r2new += einsum(ints.tmp23, (0, 1), r2, (1, 2, 3), (0, 2, 3)) * -2
    r2new += einsum(r2, (0, 1, 2), ints.tmp23, (3, 1), (0, 3, 2)) * -2
    r2new += einsum(ints.tmp11, (0, 1, 2, 3), r2, (4, 1, 3), (4, 0, 2))
    r2new += einsum(r2, (0, 1, 2), ints.tmp10, (3, 0, 4, 2), (3, 1, 4)) * 2
    r2new += einsum(ints.tmp14, (0, 1, 2, 3), r2, (4, 1, 3), (0, 4, 2)) * -1
    tmp1 = np.copy(r2) * -1
    tmp1 += np.transpose(r2, (1, 0, 2)) * 2
    tmp2 = einsum(tmp1, (0, 1, 2), ints.tmp6, (1, 0, 2, 3), (3,)) * 0.5
    del tmp1
    r2new += einsum(t2, (0, 1, 2, 3), tmp2, (2,), (1, 0, 3)) * -2
    del tmp2

    return {"r1new": r1new, "r2new": r2new}

def hbar_matvec_ea_intermediates(f=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t2: 
        v: 

    Returns:
        tmp0: 
        tmp10: 
        tmp11: 
        tmp12: 
        tmp15: 
        tmp18: 
        tmp20: 
        tmp21: 
        tmp24: 
        tmp5: 
        tmp6: 
    """

    tmp5 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp3 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -1
    tmp3 += np.transpose(t2, (1, 0, 3, 2)) * 2
    tmp4 = einsum(v.xov, (0, 1, 2), tmp3, (1, 3, 2, 4), (3, 4, 0))
    tmp5 += einsum(v.xov, (0, 1, 2), tmp4, (1, 3, 0), (2, 3)) * -1
    tmp21 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp13 = einsum(v.xov, (0, 1, 2), tmp3, (1, 3, 2, 4), (3, 4, 0)) * 0.5
    tmp21 += einsum(v.xov, (0, 1, 2), tmp13, (3, 2, 0), (1, 3)) * 2
    tmp7 = einsum(v.xvv, (0, 1, 2), v.xoo, (0, 3, 4), (3, 4, 1, 2))
    tmp11 = np.copy(np.transpose(tmp7, (1, 0, 3, 2))) * -1
    tmp6 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    tmp11 += einsum(t2, (0, 1, 2, 3), tmp6, (1, 4, 5, 2), (0, 4, 3, 5))
    tmp12 = einsum(v.xvv, (0, 1, 2), v.xvv, (0, 3, 4), (2, 3, 4, 1))
    tmp12 += einsum(t2, (0, 1, 2, 3), tmp6, (0, 1, 4, 5), (4, 3, 5, 2))
    tmp20 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp19 = einsum(tmp13, (0, 1, 2), v.xov, (2, 0, 3), (1, 3)) * 2
    tmp20 += tmp19 * -1
    del tmp19
    tmp10 = np.copy(np.transpose(tmp6, (1, 0, 3, 2)))
    tmp10 += np.transpose(tmp7, (1, 0, 3, 2)) * -0.5
    del tmp7
    tmp8 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * 2
    tmp8 += np.transpose(t2, (1, 0, 3, 2)) * -1
    tmp9 = np.copy(np.transpose(tmp6, (1, 0, 2, 3))) * -0.5
    tmp9 += np.transpose(tmp6, (1, 0, 3, 2))
    tmp10 += einsum(tmp8, (0, 1, 2, 3), tmp9, (0, 4, 3, 5), (1, 4, 2, 5))
    del tmp8, tmp9
    tmp15 = einsum(t2, (0, 1, 2, 3), tmp6, (1, 4, 5, 3), (0, 4, 2, 5)) * -1
    tmp14 = np.copy(np.transpose(v.xov, (1, 2, 0))) * 0.5
    tmp14 += tmp13
    del tmp13
    tmp15 += einsum(tmp14, (0, 1, 2), v.xov, (2, 3, 4), (0, 3, 1, 4)) * 2
    del tmp14
    tmp18 = einsum(t2, (0, 1, 2, 3), f.ov, (1, 4), (0, 4, 2, 3))
    tmp16 = einsum(v.xoo, (0, 1, 2), v.xov, (0, 3, 4), (1, 2, 3, 4))
    tmp18 += einsum(t2, (0, 1, 2, 3), tmp16, (4, 1, 0, 5), (4, 5, 3, 2)) * -1
    tmp0 = einsum(v.xov, (0, 1, 2), v.xvv, (0, 3, 4), (1, 3, 4, 2))
    tmp18 += einsum(tmp0, (0, 1, 2, 3), t2, (4, 0, 5, 2), (4, 3, 5, 1))
    tmp18 += einsum(t2, (0, 1, 2, 3), tmp0, (1, 4, 2, 5), (0, 5, 4, 3))
    tmp17 = np.copy(np.transpose(v.xov, (1, 2, 0)))
    tmp17 += tmp4
    tmp18 += einsum(tmp17, (0, 1, 2), v.xvv, (2, 3, 4), (0, 4, 1, 3)) * -1
    del tmp17
    tmp24 = np.copy(f.ov)
    tmp24 += einsum(tmp3, (0, 1, 2, 3), tmp16, (1, 4, 0, 2), (4, 3)) * -1
    del tmp16, tmp3
    tmp24 += einsum(tmp4, (0, 1, 2), v.xvv, (2, 1, 3), (0, 3))
    del tmp4
    tmp23 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -0.5
    tmp23 += np.transpose(t2, (1, 0, 3, 2))
    tmp24 += einsum(f.ov, (0, 1), tmp23, (0, 2, 1, 3), (2, 3)) * 2
    del tmp23

    return {"tmp0": tmp0, "tmp10": tmp10, "tmp11": tmp11, "tmp12": tmp12, "tmp15": tmp15, "tmp18": tmp18, "tmp20": tmp20, "tmp21": tmp21, "tmp24": tmp24, "tmp5": tmp5, "tmp6": tmp6}

def hbar_matvec_ea(f=None, ints=None, r1=None, r2=None, t2=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        t2: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(ints.tmp5, (0, 1), r1, (0,), (1,))
    tmp0 = np.copy(np.transpose(r2, (2, 0, 1))) * -0.5
    tmp0 += np.transpose(r2, (2, 1, 0))
    r1new += einsum(tmp0, (0, 1, 2), ints.tmp0, (0, 1, 3, 2), (3,)) * -2
    del tmp0
    tmp1 = np.copy(np.transpose(r2, (2, 0, 1))) * 2
    tmp1 += np.transpose(r2, (2, 1, 0)) * -1
    r1new += einsum(f.ov, (0, 1), tmp1, (0, 1, 2), (2,)) * -1
    del tmp1
    r2new = einsum(r1, (0,), ints.tmp18, (1, 0, 2, 3), (2, 3, 1))
    r2new += einsum(ints.tmp20, (0, 1), r2, (1, 2, 3), (0, 2, 3))
    r2new += einsum(ints.tmp20, (0, 1), r2, (2, 1, 3), (2, 0, 3))
    r2new += einsum(r2, (0, 1, 2), ints.tmp11, (3, 2, 4, 1), (0, 4, 3))
    r2new += einsum(ints.tmp10, (0, 1, 2, 3), r2, (3, 4, 1), (2, 4, 0)) * 2
    r2new += einsum(ints.tmp15, (0, 1, 2, 3), r2, (4, 3, 1), (2, 4, 0)) * -1
    r2new += einsum(ints.tmp24, (0, 1), r1, (2,), (1, 2, 0)) * -1
    r2new += einsum(ints.tmp12, (0, 1, 2, 3), r2, (2, 0, 4), (1, 3, 4))
    r2new += einsum(ints.tmp21, (0, 1), r2, (2, 3, 0), (2, 3, 1)) * -1
    tmp2 = np.copy(np.transpose(r2, (2, 0, 1))) * -1
    tmp2 += np.transpose(r2, (2, 1, 0)) * 2
    tmp3 = einsum(tmp2, (0, 1, 2), ints.tmp6, (0, 3, 2, 1), (3,)) * 0.5
    del tmp2
    r2new += einsum(tmp3, (0,), t2, (0, 1, 2, 3), (3, 2, 1)) * -2
    del tmp3

    return {"r1new": r1new, "r2new": r2new}

def hbar_lmatvec_ip_intermediates(f=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t2: 
        v: 

    Returns:
        tmp11: 
        tmp12: 
        tmp14: 
        tmp15: 
        tmp16: 
        tmp17: 
        tmp20: 
        tmp21: 
        tmp24: 
        tmp25: 
        tmp26: 
        tmp29: 
        tmp3: 
        tmp8: 
    """

    tmp15 = einsum(v.xoo, (0, 1, 2), v.xoo, (0, 3, 4), (3, 2, 1, 4))
    tmp26 = np.copy(np.transpose(t2, (1, 0, 2, 3)))
    tmp26 += np.transpose(t2, (1, 0, 3, 2)) * -0.5
    tmp14 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp5 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -1
    tmp5 += np.transpose(t2, (1, 0, 3, 2)) * 2
    tmp6 = einsum(tmp5, (0, 1, 2, 3), v.xov, (4, 0, 2), (1, 3, 4))
    tmp14 += einsum(v.xov, (0, 1, 2), tmp6, (3, 2, 0), (3, 1))
    tmp16 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    tmp17 = einsum(t2, (0, 1, 2, 3), tmp16, (4, 5, 3, 2), (1, 0, 4, 5))
    tmp25 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp22 = einsum(tmp5, (0, 1, 2, 3), v.xov, (4, 0, 2), (1, 3, 4)) * 0.5
    tmp25 += einsum(v.xov, (0, 1, 2), tmp22, (1, 3, 0), (3, 2)) * -2
    tmp3 = einsum(v.xoo, (0, 1, 2), v.xov, (0, 3, 4), (1, 2, 3, 4))
    tmp11 = np.copy(np.transpose(tmp3, (1, 0, 2, 3)))
    tmp9 = np.copy(np.transpose(tmp3, (1, 0, 2, 3))) * -1
    tmp9 += np.transpose(tmp3, (2, 1, 0, 3)) * 2
    tmp10 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -0.5
    tmp10 += np.transpose(t2, (1, 0, 3, 2))
    tmp11 += einsum(tmp10, (0, 1, 2, 3), tmp9, (0, 4, 5, 2), (4, 5, 1, 3))
    del tmp9
    tmp29 = np.copy(np.transpose(f.oo, (1, 0))) * 0.5
    tmp28 = einsum(v.xov, (0, 1, 2), tmp6, (3, 2, 0), (3, 1)) * 0.5
    tmp29 += tmp28
    del tmp28
    tmp18 = einsum(v.xvv, (0, 1, 2), v.xoo, (0, 3, 4), (3, 4, 1, 2))
    tmp21 = np.copy(np.transpose(tmp18, (1, 0, 3, 2))) * -1
    tmp21 += einsum(t2, (0, 1, 2, 3), tmp16, (4, 1, 2, 5), (0, 4, 3, 5))
    tmp24 = einsum(tmp16, (0, 1, 2, 3), t2, (4, 1, 5, 2), (4, 0, 5, 3)) * -1
    tmp23 = np.copy(np.transpose(v.xov, (1, 2, 0))) * 0.5
    tmp23 += tmp22
    del tmp22
    tmp24 += einsum(v.xov, (0, 1, 2), tmp23, (3, 4, 0), (3, 1, 4, 2)) * 2
    del tmp23
    tmp12 = np.copy(f.ov)
    tmp12 += einsum(tmp3, (0, 1, 2, 3), tmp5, (2, 0, 3, 4), (1, 4)) * -1
    del tmp5
    tmp12 += einsum(v.xvv, (0, 1, 2), tmp6, (3, 1, 0), (3, 2))
    tmp12 += einsum(f.ov, (0, 1), tmp10, (0, 2, 1, 3), (2, 3)) * 2
    del tmp10
    tmp20 = np.copy(np.transpose(tmp16, (1, 0, 3, 2)))
    tmp20 += np.transpose(tmp18, (1, 0, 3, 2)) * -0.5
    del tmp18
    tmp4 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * 2
    tmp4 += np.transpose(t2, (1, 0, 3, 2)) * -1
    tmp19 = np.copy(np.transpose(tmp16, (1, 0, 2, 3))) * -0.5
    tmp19 += np.transpose(tmp16, (1, 0, 3, 2))
    tmp20 += einsum(tmp19, (0, 1, 2, 3), tmp4, (0, 4, 5, 2), (4, 1, 5, 3))
    del tmp19
    tmp0 = einsum(f.ov, (0, 1), t2, (2, 3, 1, 4), (0, 3, 2, 4))
    tmp8 = np.copy(np.transpose(tmp0, (1, 0, 2, 3))) * -1
    tmp8 += np.transpose(tmp0, (2, 0, 1, 3)) * 0.5
    del tmp0
    tmp1 = einsum(v.xov, (0, 1, 2), v.xvv, (0, 3, 4), (1, 3, 4, 2))
    tmp2 = einsum(tmp1, (0, 1, 2, 3), t2, (4, 5, 3, 1), (4, 5, 0, 2))
    del tmp1
    tmp8 += np.transpose(tmp2, (0, 2, 1, 3)) * 0.5
    tmp8 += np.transpose(tmp2, (1, 2, 0, 3)) * -1
    del tmp2
    tmp8 += einsum(tmp3, (0, 1, 2, 3), tmp4, (0, 4, 3, 5), (1, 2, 4, 5)) * 0.5
    del tmp4
    tmp7 = np.copy(np.transpose(v.xov, (1, 2, 0)))
    tmp7 += tmp6
    del tmp6
    tmp8 += einsum(tmp7, (0, 1, 2), v.xoo, (2, 3, 4), (4, 3, 0, 1)) * 0.5
    del tmp7

    return {"tmp11": tmp11, "tmp12": tmp12, "tmp14": tmp14, "tmp15": tmp15, "tmp16": tmp16, "tmp17": tmp17, "tmp20": tmp20, "tmp21": tmp21, "tmp24": tmp24, "tmp25": tmp25, "tmp26": tmp26, "tmp29": tmp29, "tmp3": tmp3, "tmp8": tmp8}

def hbar_lmatvec_ip(f=None, ints=None, r1=None, r2=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(ints.tmp11, (0, 1, 2, 3), r2, (2, 0, 3), (1,)) * 2
    r1new += einsum(r2, (0, 1, 2), ints.tmp8, (0, 3, 1, 2), (3,)) * -2
    r1new += einsum(ints.tmp14, (0, 1), r1, (0,), (1,)) * -1
    tmp0 = np.copy(r2) * 2
    tmp0 += np.transpose(r2, (1, 0, 2)) * -1
    r1new += einsum(tmp0, (0, 1, 2), ints.tmp12, (0, 2), (1,)) * -1
    del tmp0
    r2new = einsum(r1, (0,), f.ov, (1, 2), (1, 0, 2)) * -1
    r2new += einsum(ints.tmp15, (0, 1, 2, 3), r2, (1, 3, 4), (2, 0, 4))
    r2new += einsum(ints.tmp17, (0, 1, 2, 3), r2, (1, 0, 4), (3, 2, 4))
    r2new += einsum(r2, (0, 1, 2), ints.tmp25, (2, 3), (0, 1, 3))
    tmp1 = einsum(ints.tmp26, (0, 1, 2, 3), r2, (1, 0, 2), (3,))
    r2new += einsum(tmp1, (0,), ints.tmp16, (1, 2, 0, 3), (2, 1, 3)) * -2
    del tmp1
    r2new += einsum(ints.tmp3, (0, 1, 2, 3), r1, (1,), (2, 0, 3))
    r2new += einsum(ints.tmp29, (0, 1), r2, (0, 2, 3), (1, 2, 3)) * -2
    r2new += einsum(ints.tmp29, (0, 1), r2, (2, 0, 3), (2, 1, 3)) * -2
    r2new += einsum(ints.tmp21, (0, 1, 2, 3), r2, (4, 0, 2), (4, 1, 3))
    r2new += einsum(r2, (0, 1, 2), ints.tmp20, (0, 3, 2, 4), (3, 1, 4)) * 2
    r2new += einsum(ints.tmp24, (0, 1, 2, 3), r2, (4, 0, 2), (1, 4, 3)) * -1

    return {"r1new": r1new, "r2new": r2new}

def hbar_lmatvec_ea_intermediates(f=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t2: 
        v: 

    Returns:
        tmp0: 
        tmp11: 
        tmp12: 
        tmp16: 
        tmp17: 
        tmp20: 
        tmp21: 
        tmp22: 
        tmp24: 
        tmp25: 
        tmp5: 
        tmp6: 
    """

    tmp22 = einsum(v.xvv, (0, 1, 2), v.xvv, (0, 3, 4), (2, 3, 4, 1))
    tmp17 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    tmp22 += einsum(tmp17, (0, 1, 2, 3), t2, (0, 1, 4, 5), (5, 2, 4, 3))
    tmp25 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp8 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -1
    tmp8 += np.transpose(t2, (1, 0, 3, 2)) * 2
    tmp9 = einsum(v.xov, (0, 1, 2), tmp8, (1, 3, 2, 4), (3, 4, 0))
    tmp25 += einsum(tmp9, (0, 1, 2), v.xov, (2, 3, 1), (0, 3))
    tmp16 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp14 = einsum(v.xov, (0, 1, 2), tmp8, (1, 3, 2, 4), (3, 4, 0)) * 0.5
    tmp15 = einsum(tmp14, (0, 1, 2), v.xov, (2, 0, 3), (1, 3)) * 2
    tmp16 += tmp15 * -1
    del tmp15
    tmp18 = einsum(v.xvv, (0, 1, 2), v.xoo, (0, 3, 4), (3, 4, 1, 2))
    tmp21 = np.copy(np.transpose(tmp18, (1, 0, 3, 2))) * -1
    tmp21 += einsum(t2, (0, 1, 2, 3), tmp17, (4, 1, 2, 5), (0, 4, 3, 5))
    tmp24 = einsum(t2, (0, 1, 2, 3), tmp17, (4, 1, 3, 5), (0, 4, 2, 5)) * -1
    tmp23 = np.copy(np.transpose(v.xov, (1, 2, 0))) * 0.5
    tmp23 += tmp14
    del tmp14
    tmp24 += einsum(v.xov, (0, 1, 2), tmp23, (3, 4, 0), (3, 1, 4, 2)) * 2
    del tmp23
    tmp0 = einsum(v.xov, (0, 1, 2), v.xvv, (0, 3, 4), (1, 3, 4, 2))
    tmp6 = np.copy(np.transpose(tmp0, (0, 2, 1, 3)))
    tmp1 = einsum(t2, (0, 1, 2, 3), f.ov, (1, 4), (0, 4, 2, 3))
    tmp6 += np.transpose(tmp1, (0, 2, 1, 3)) * 0.5
    tmp6 += np.transpose(tmp1, (0, 3, 1, 2)) * -1
    del tmp1
    tmp2 = einsum(v.xoo, (0, 1, 2), v.xov, (0, 3, 4), (1, 2, 3, 4))
    tmp3 = einsum(tmp2, (0, 1, 2, 3), t2, (2, 1, 4, 5), (0, 5, 4, 3))
    tmp6 += np.transpose(tmp3, (0, 1, 3, 2)) * -0.5
    tmp6 += np.transpose(tmp3, (0, 2, 3, 1))
    del tmp3
    tmp5 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * -0.5
    tmp5 += np.transpose(t2, (1, 0, 3, 2))
    tmp4 = np.copy(np.transpose(tmp0, (0, 2, 1, 3))) * 2
    tmp4 += np.transpose(tmp0, (0, 3, 2, 1)) * -1
    tmp6 += einsum(tmp4, (0, 1, 2, 3), tmp5, (0, 4, 3, 5), (4, 2, 1, 5))
    del tmp4
    tmp7 = np.copy(np.transpose(t2, (1, 0, 2, 3))) * 2
    tmp7 += np.transpose(t2, (1, 0, 3, 2)) * -1
    tmp11 = einsum(tmp0, (0, 1, 2, 3), tmp7, (0, 4, 1, 5), (4, 2, 3, 5))
    tmp10 = np.copy(np.transpose(v.xov, (1, 2, 0)))
    tmp10 += tmp9
    tmp11 += einsum(tmp10, (0, 1, 2), v.xvv, (2, 3, 4), (0, 4, 3, 1))
    del tmp10
    tmp12 = np.copy(f.ov)
    tmp12 += einsum(tmp2, (0, 1, 2, 3), tmp8, (2, 0, 3, 4), (1, 4)) * -1
    del tmp2, tmp8
    tmp12 += einsum(v.xvv, (0, 1, 2), tmp9, (3, 1, 0), (3, 2))
    del tmp9
    tmp12 += einsum(tmp5, (0, 1, 2, 3), f.ov, (0, 2), (1, 3)) * 2
    tmp20 = np.copy(np.transpose(tmp17, (1, 0, 3, 2)))
    tmp20 += np.transpose(tmp18, (1, 0, 3, 2)) * -0.5
    del tmp18
    tmp19 = np.copy(np.transpose(tmp17, (1, 0, 2, 3))) * -0.5
    tmp19 += np.transpose(tmp17, (1, 0, 3, 2))
    tmp20 += einsum(tmp19, (0, 1, 2, 3), tmp7, (0, 4, 5, 2), (4, 1, 5, 3))
    del tmp19, tmp7

    return {"tmp0": tmp0, "tmp11": tmp11, "tmp12": tmp12, "tmp16": tmp16, "tmp17": tmp17, "tmp20": tmp20, "tmp21": tmp21, "tmp22": tmp22, "tmp24": tmp24, "tmp25": tmp25, "tmp5": tmp5, "tmp6": tmp6}

def hbar_lmatvec_ea(f=None, ints=None, r1=None, r2=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(ints.tmp16, (0, 1), r1, (0,), (1,))
    r1new += einsum(ints.tmp11, (0, 1, 2, 3), r2, (1, 3, 0), (2,))
    r1new += einsum(r2, (0, 1, 2), ints.tmp6, (2, 1, 3, 0), (3,)) * -2
    tmp0 = np.copy(np.transpose(r2, (2, 0, 1))) * 2
    tmp0 += np.transpose(r2, (2, 1, 0)) * -1
    r1new += einsum(tmp0, (0, 1, 2), ints.tmp12, (0, 1), (2,)) * -1
    del tmp0
    r2new = einsum(r2, (0, 1, 2), ints.tmp16, (0, 3), (3, 1, 2))
    r2new += einsum(ints.tmp16, (0, 1), r2, (2, 0, 3), (2, 1, 3))
    r2new += einsum(r1, (0,), ints.tmp0, (1, 2, 0, 3), (3, 2, 1)) * -1
    r2new += einsum(r2, (0, 1, 2), ints.tmp21, (2, 3, 1, 4), (0, 4, 3))
    r2new += einsum(ints.tmp20, (0, 1, 2, 3), r2, (2, 4, 0), (3, 4, 1)) * 2
    r2new += einsum(ints.tmp24, (0, 1, 2, 3), r2, (4, 2, 0), (3, 4, 1)) * -1
    r2new += einsum(r1, (0,), f.ov, (1, 2), (2, 0, 1)) * -1
    r2new += einsum(ints.tmp22, (0, 1, 2, 3), r2, (2, 0, 4), (1, 3, 4))
    tmp1 = einsum(ints.tmp5, (0, 1, 2, 3), r2, (2, 3, 0), (1,))
    r2new += einsum(tmp1, (0,), ints.tmp17, (0, 1, 2, 3), (3, 2, 1)) * -2
    del tmp1
    r2new += einsum(r2, (0, 1, 2), ints.tmp25, (2, 3), (0, 1, 3)) * -1

    return {"r1new": r1new, "r2new": r2new}

