# Code generated by qwick.

import numpy as np
from pyscf import lib
from types import SimpleNamespace
from ebcc.codegen import common_no_codegen as common

def energy(f=None, v=None, w=None, g=None, G=None, nocc=None, nvir=None, nbos=None, t1=None, t2=None, s1=None, s2=None, u11=None, u12=None, **kwargs):
    # Energy
    x0 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x0 += lib.einsum("jiba->ijab", t2)
    x0 += lib.einsum("ia,jb->ijab", t1, t1) * 2
    e_cc = 0
    e_cc += lib.einsum("ijab,ijab->", v.oovv, x0) * 0.25
    del x0
    x1 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x1 += lib.einsum("sia->sia", u11)
    x1 += lib.einsum("s,ia->sia", s1, t1)
    e_cc += lib.einsum("sia,sia->", g.bov, x1)
    del x1
    e_cc += lib.einsum("ia,ia->", f.ov, t1)
    e_cc += lib.einsum("s,s->", G, s1)

    return e_cc

def update_amps(f=None, v=None, w=None, g=None, G=None, nocc=None, nvir=None, nbos=None, t1=None, t2=None, s1=None, s2=None, u11=None, u12=None, **kwargs):
    # Get boson coupling creation array:
    gc = SimpleNamespace(
        boo=g.boo.transpose(0, 2, 1),
        bov=g.bvo.transpose(0, 2, 1),
        bvo=g.bov.transpose(0, 2, 1),
        bvv=g.bvv.transpose(0, 2, 1),
    )

    # T1, T2, S1, S2, U11 and U12 amplitudes
    x0 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x0 += lib.einsum("jc,klbc->jklb", t1, v.oovv)
    x1 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x1 += lib.einsum("jlkb->jklb", x0) * -1
    x30 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x30 += lib.einsum("kmbc,jmlc->jklb", t2, x0)
    x31 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x31 -= lib.einsum("jlkb->jklb", x30)
    del x30
    x65 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x65 += lib.einsum("kb,jmlb->jklm", t1, x0)
    x66 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x66 += lib.einsum("mljk->jklm", x65) * -1
    x67 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x67 += lib.einsum("mljk->jklm", x65) * -1
    del x65
    x107 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x107 += lib.einsum("lkjb->jklb", x0)
    del x0
    x1 += lib.einsum("lkjb->jklb", v.ooov)
    t1new = np.zeros((nocc, nvir), dtype=np.float64)
    t1new += lib.einsum("klcb,jklc->jb", t2, x1) * -0.5
    del x1
    x2 = np.zeros((nocc, nvir), dtype=np.float64)
    x2 += lib.einsum("u,ujb->jb", s1, g.bov)
    x4 = np.zeros((nocc, nvir), dtype=np.float64)
    x4 += lib.einsum("jb->jb", x2)
    x11 = np.zeros((nocc, nvir), dtype=np.float64)
    x11 += lib.einsum("jb->jb", x2)
    del x2
    x3 = np.zeros((nocc, nvir), dtype=np.float64)
    x3 += lib.einsum("kc,jkbc->jb", t1, v.oovv)
    x4 += lib.einsum("jb->jb", x3)
    x11 += lib.einsum("jb->jb", x3)
    del x3
    x4 += lib.einsum("jb->jb", f.ov)
    x38 = np.zeros((nocc, nocc), dtype=np.float64)
    x38 += lib.einsum("jb,kb->jk", t1, x4)
    x39 = np.zeros((nocc, nocc), dtype=np.float64)
    x39 += lib.einsum("jk->jk", x38)
    del x38
    x52 = np.zeros((nvir, nvir), dtype=np.float64)
    x52 += lib.einsum("jb,jc->bc", t1, x4)
    x53 = np.zeros((nvir, nvir), dtype=np.float64)
    x53 += lib.einsum("bc->bc", x52)
    del x52
    x90 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x90 += lib.einsum("kb,ujb->ujk", x4, u11)
    x93 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x93 += lib.einsum("ukj->ujk", x90)
    del x90
    t1new += lib.einsum("kc,kjcb->jb", x4, t2)
    s1new = np.zeros((nbos), dtype=np.float64)
    s1new += lib.einsum("jb,ujb->u", x4, u11)
    s2new = np.zeros((nbos, nbos), dtype=np.float64)
    s2new += lib.einsum("jb,xujb->ux", x4, u12)
    del x4
    x5 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x5 += lib.einsum("kb,ujb->ujk", t1, g.bov)
    x6 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x6 += lib.einsum("ujk->ujk", x5)
    del x5
    x6 += lib.einsum("ujk->ujk", g.boo)
    x25 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x25 += lib.einsum("kb,ukj->ujb", t1, x6)
    x26 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x26 -= lib.einsum("ujb->ujb", x25)
    del x25
    t1new -= lib.einsum("ukb,ukj->jb", u11, x6)
    u11new = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    u11new -= lib.einsum("xkj,xukb->ujb", x6, u12)
    del x6
    x7 = np.zeros((nocc, nocc), dtype=np.float64)
    x7 += lib.einsum("u,ujk->jk", s1, g.boo)
    x13 = np.zeros((nocc, nocc), dtype=np.float64)
    x13 += lib.einsum("jk->jk", x7) * 2
    x39 += lib.einsum("kj->jk", x7)
    del x7
    x8 = np.zeros((nocc, nocc), dtype=np.float64)
    x8 += lib.einsum("ujb,ukb->jk", g.bov, u11)
    x13 += lib.einsum("jk->jk", x8) * 2
    x41 = np.zeros((nocc, nocc), dtype=np.float64)
    x41 += lib.einsum("jk->jk", x8)
    del x8
    x9 = np.zeros((nocc, nocc), dtype=np.float64)
    x9 -= lib.einsum("lb,ljkb->jk", t1, v.ooov)
    x13 += lib.einsum("jk->jk", x9) * 2
    x41 += lib.einsum("jk->jk", x9)
    del x9
    x42 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x42 += lib.einsum("lk,ljbc->jkbc", x41, t2)
    del x41
    x43 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x43 -= lib.einsum("jkcb->jkbc", x42)
    del x42
    x10 = np.zeros((nocc, nocc), dtype=np.float64)
    x10 -= lib.einsum("jlcb,lkcb->jk", t2, v.oovv)
    x13 += lib.einsum("kj->jk", x10)
    x45 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x45 += lib.einsum("kl,jlbc->jkbc", x10, t2)
    del x10
    x46 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x46 += lib.einsum("jkcb->jkbc", x45) * -0.5
    del x45
    x11 += lib.einsum("jb->jb", f.ov)
    x12 = np.zeros((nocc, nocc), dtype=np.float64)
    x12 += lib.einsum("jb,kb->jk", t1, x11) * 2
    x13 += lib.einsum("kj->jk", x12)
    del x12
    x77 = np.zeros((nvir, nvir), dtype=np.float64)
    x77 += lib.einsum("jb,jc->bc", t1, x11) * 2
    del x11
    x78 = np.zeros((nvir, nvir), dtype=np.float64)
    x78 += lib.einsum("bc->bc", x77)
    del x77
    x13 += lib.einsum("jk->jk", f.oo) * 2
    t1new += lib.einsum("kb,kj->jb", t1, x13) * -0.5
    u11new += lib.einsum("kj,ukb->ujb", x13, u11) * -0.5
    u12new = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    u12new += lib.einsum("kj,xukb->uxjb", x13, u12) * -0.5
    del x13
    x14 = np.zeros((nvir, nvir), dtype=np.float64)
    x14 += lib.einsum("u,ubc->bc", s1, g.bvv)
    x16 = np.zeros((nvir, nvir), dtype=np.float64)
    x16 += lib.einsum("bc->bc", x14)
    x53 -= lib.einsum("bc->bc", x14)
    x54 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x54 += lib.einsum("cd,jkdb->jkbc", x53, t2)
    del x53
    x58 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x58 -= lib.einsum("kjcb->jkbc", x54)
    del x54
    x78 += lib.einsum("bc->bc", x14) * -2
    del x14
    x15 = np.zeros((nvir, nvir), dtype=np.float64)
    x15 -= lib.einsum("jd,jbdc->bc", t1, v.ovvv)
    x16 -= lib.einsum("bc->bc", x15)
    x56 = np.zeros((nvir, nvir), dtype=np.float64)
    x56 += lib.einsum("bc->bc", x15)
    x78 += lib.einsum("bc->bc", x15) * 2
    del x15
    x16 += lib.einsum("bc->bc", f.vv)
    t1new += lib.einsum("jc,bc->jb", t1, x16)
    del x16
    x17 = np.zeros((nbos), dtype=np.float64)
    x17 += lib.einsum("jb,ujb->u", t1, g.bov)
    x18 = np.zeros((nbos), dtype=np.float64)
    x18 += lib.einsum("u->u", x17)
    del x17
    x18 += lib.einsum("u->u", G)
    t1new += lib.einsum("u,ujb->jb", x18, u11)
    s1new += lib.einsum("x,xu->u", x18, s2)
    u11new += lib.einsum("x,xujb->ujb", x18, u12)
    del x18
    x19 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x19 += lib.einsum("je,bcde->jbcd", t1, v.vvvv)
    t2new = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    t2new -= lib.einsum("jd,kcbd->jkbc", t1, x19)
    del x19
    x20 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x20 += lib.einsum("jlbd,lckd->jkbc", t2, v.ovov)
    x33 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x33 -= lib.einsum("jkbc->jkbc", x20)
    del x20
    x21 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x21 += lib.einsum("jd,kbcd->jkbc", t1, v.ovvv)
    x22 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x22 -= lib.einsum("klbd,jlcd->jkbc", t2, x21)
    x33 += lib.einsum("jkbc->jkbc", x22)
    del x22
    x48 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x48 -= lib.einsum("kc,jlbc->jklb", t1, x21)
    x49 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x49 -= lib.einsum("lb,kjlc->jkbc", t1, x48)
    del x48
    x58 += lib.einsum("jkbc->jkbc", x49)
    del x49
    x106 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x106 -= lib.einsum("kjbc->jkbc", x21)
    del x21
    x23 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x23 += lib.einsum("jc,ubc->ujb", t1, g.bvv)
    x26 += lib.einsum("ujb->ujb", x23)
    del x23
    x24 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x24 += lib.einsum("ukc,jkbc->ujb", g.bov, t2)
    x26 += lib.einsum("ujb->ujb", x24)
    del x24
    x26 += lib.einsum("ubj->ujb", g.bvo)
    x27 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x27 += lib.einsum("ujb,ukc->jkbc", u11, x26)
    del x26
    x33 += lib.einsum("kjcb->jkbc", x27)
    del x27
    x28 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x28 += lib.einsum("jc,kblc->jklb", t1, v.ovov)
    x31 += lib.einsum("jklb->jklb", x28)
    del x28
    x29 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x29 -= lib.einsum("jmbc,mklc->jklb", t2, v.ooov)
    x31 += lib.einsum("jklb->jklb", x29)
    del x29
    x32 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x32 += lib.einsum("lb,jlkc->jkbc", t1, x31)
    del x31
    x33 += lib.einsum("jkbc->jkbc", x32)
    del x32
    t2new += lib.einsum("jkbc->jkbc", x33)
    t2new -= lib.einsum("jkcb->jkbc", x33)
    t2new -= lib.einsum("kjbc->jkbc", x33)
    t2new += lib.einsum("kjcb->jkbc", x33)
    del x33
    x34 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x34 += lib.einsum("jd,bckd->jkbc", t1, v.vvov)
    x43 += lib.einsum("jkcb->jkbc", x34)
    del x34
    x35 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x35 += lib.einsum("jb,klmb->jklm", t1, v.ooov)
    x36 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x36 += lib.einsum("mb,jkml->jklb", t1, x35)
    x37 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x37 -= lib.einsum("lc,jlkb->jkbc", t1, x36)
    del x36
    x43 += lib.einsum("jkcb->jkbc", x37)
    del x37
    x44 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x44 += lib.einsum("mlbc,jmlk->jkbc", t2, x35)
    del x35
    x46 += lib.einsum("jkcb->jkbc", x44) * -0.5
    del x44
    t2new += lib.einsum("jkbc->jkbc", x46) * -1
    t2new += lib.einsum("kjbc->jkbc", x46)
    del x46
    x39 += lib.einsum("kj->jk", f.oo)
    x40 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x40 += lib.einsum("kl,ljbc->jkbc", x39, t2)
    del x39
    x43 += lib.einsum("kjcb->jkbc", x40)
    del x40
    t2new += lib.einsum("jkbc->jkbc", x43)
    t2new -= lib.einsum("kjbc->jkbc", x43)
    del x43
    x47 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x47 += lib.einsum("bd,jkcd->jkbc", f.vv, t2)
    t2new += lib.einsum("kjbc->jkbc", x47)
    t2new -= lib.einsum("kjcb->jkbc", x47)
    del x47
    x50 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x50 += lib.einsum("jlbd,lkdc->jkbc", t2, v.oovv)
    x51 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x51 += lib.einsum("jlbd,klcd->jkbc", t2, x50)
    del x50
    x58 -= lib.einsum("jkbc->jkbc", x51)
    del x51
    x55 = np.zeros((nvir, nvir), dtype=np.float64)
    x55 += lib.einsum("ujb,ujc->bc", g.bov, u11)
    x56 += lib.einsum("cb->bc", x55)
    x57 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x57 += lib.einsum("cd,jkdb->jkbc", x56, t2)
    del x56
    x58 += lib.einsum("kjbc->jkbc", x57)
    del x57
    t2new -= lib.einsum("jkbc->jkbc", x58)
    t2new += lib.einsum("jkcb->jkbc", x58)
    del x58
    x78 += lib.einsum("cb->bc", x55) * 2
    del x55
    x59 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x59 += lib.einsum("jkdc,lbdc->jklb", t2, v.ovvv)
    x60 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x60 += lib.einsum("lb,jklc->jkbc", t1, x59)
    del x59
    x63 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x63 += lib.einsum("jkbc->jkbc", x60) * 0.5
    del x60
    x61 = np.zeros((nvir, nvir), dtype=np.float64)
    x61 -= lib.einsum("kjbd,kjdc->bc", t2, v.oovv)
    x62 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x62 += lib.einsum("cd,jkbd->jkbc", x61, t2)
    x63 += lib.einsum("jkbc->jkbc", x62) * 0.5
    del x62
    t2new += lib.einsum("jkbc->jkbc", x63) * -1
    t2new += lib.einsum("jkcb->jkbc", x63)
    del x63
    x78 += lib.einsum("bc->bc", x61)
    del x61
    x64 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x64 += lib.einsum("jkcb,lmcb->jklm", t2, v.oovv)
    x66 += lib.einsum("mlkj->jklm", x64) * 0.49999999999999967
    x67 += lib.einsum("mlkj->jklm", x64) * 0.5000000000000003
    del x64
    x66 += lib.einsum("kjml->jklm", v.oooo) * 0.9999999999999993
    t2new += lib.einsum("lmcb,lmkj->jkbc", t2, x66) * 0.5000000000000003
    del x66
    x67 += lib.einsum("kjml->jklm", v.oooo)
    x68 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x68 += lib.einsum("mb,mlkj->jklb", t1, x67)
    del x67
    x68 += lib.einsum("lbkj->jklb", v.ovoo)
    t2new += lib.einsum("lb,jklc->jkbc", t1, x68)
    del x68
    x69 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x69 += lib.einsum("ukc,kjcb->ujb", u11, v.oovv)
    x76 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x76 += lib.einsum("ujb->ujb", x69)
    x99 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x99 += lib.einsum("jb,ujc->ubc", t1, x69)
    x100 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x100 += lib.einsum("ucb->ubc", x99)
    del x99
    x102 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x102 += lib.einsum("jb,ukb->ujk", t1, x69)
    x103 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x103 += lib.einsum("ukj->ujk", x102)
    del x102
    s2new += lib.einsum("ujb,xjb->ux", u11, x69)
    del x69
    x70 = np.zeros((nbos, nbos), dtype=np.float64)
    x70 += lib.einsum("ujb,xjb->ux", gc.bov, u11)
    x74 = np.zeros((nbos, nbos), dtype=np.float64)
    x74 += lib.einsum("ux->ux", x70)
    del x70
    x71 = np.zeros((nbos, nbos), dtype=np.float64)
    x71 += lib.einsum("ujb,xjb->ux", g.bov, u11)
    x72 = np.zeros((nbos, nbos), dtype=np.float64)
    x72 += lib.einsum("xu->ux", x71)
    x89 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x89 += lib.einsum("yu,xyjb->uxjb", x71, u12)
    del x71
    x105 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x105 -= lib.einsum("uxjb->uxjb", x89)
    del x89
    x72 += lib.einsum("ux->ux", w)
    x73 = np.zeros((nbos, nbos), dtype=np.float64)
    x73 += lib.einsum("yu,xy->ux", s2, x72)
    x74 += lib.einsum("ux->ux", x73)
    del x73
    s2new += lib.einsum("ux->ux", x74)
    s2new += lib.einsum("xu->ux", x74)
    del x74
    u11new += lib.einsum("ux,xjb->ujb", x72, u11)
    del x72
    x75 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x75 += lib.einsum("ux,xjb->ujb", s2, g.bov)
    x76 += lib.einsum("ujb->ujb", x75)
    x91 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x91 += lib.einsum("ujb->ujb", x75)
    del x75
    x76 += lib.einsum("ujb->ujb", gc.bov)
    x82 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x82 += lib.einsum("kb,ujb->ujk", t1, x76)
    u11new += lib.einsum("ukc,kjcb->ujb", x76, t2)
    del x76
    x78 += lib.einsum("bc->bc", f.vv) * -2
    u11new += lib.einsum("bc,ujc->ujb", x78, u11) * -0.5
    u12new += lib.einsum("bc,xujc->uxjb", x78, u12) * -0.5
    del x78
    x79 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x79 += lib.einsum("ux,xjk->ujk", s2, g.boo)
    x82 += lib.einsum("ujk->ujk", x79)
    x93 += lib.einsum("ujk->ujk", x79)
    del x79
    x80 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x80 += lib.einsum("xjb,uxkb->ujk", g.bov, u12)
    x82 += lib.einsum("ujk->ujk", x80)
    x103 += lib.einsum("ujk->ujk", x80)
    del x80
    x81 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x81 -= lib.einsum("ulb,ljkb->ujk", u11, v.ooov)
    x82 += lib.einsum("ujk->ujk", x81)
    x103 += lib.einsum("ujk->ujk", x81)
    del x81
    x104 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x104 += lib.einsum("ukb,xkj->uxjb", u11, x103)
    del x103
    x105 += lib.einsum("uxjb->uxjb", x104)
    del x104
    x82 += lib.einsum("ujk->ujk", gc.boo)
    u11new -= lib.einsum("kb,ukj->ujb", t1, x82)
    del x82
    x83 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x83 += lib.einsum("ux,xbc->ubc", s2, g.bvv)
    x85 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x85 += lib.einsum("ubc->ubc", x83)
    x96 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x96 += lib.einsum("ubc->ubc", x83)
    del x83
    x84 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x84 -= lib.einsum("ujd,jbdc->ubc", u11, v.ovvv)
    x85 -= lib.einsum("ubc->ubc", x84)
    x100 += lib.einsum("ucb->ubc", x84)
    del x84
    x85 += lib.einsum("ubc->ubc", gc.bvv)
    u11new += lib.einsum("jc,ubc->ujb", t1, x85)
    del x85
    x86 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x86 += lib.einsum("uxkc,kjcb->uxjb", u12, v.oovv)
    u12new += lib.einsum("jkbc,xukc->uxjb", t2, x86)
    del x86
    x87 = np.zeros((nbos, nbos, nbos), dtype=np.float64)
    x87 += lib.einsum("ujb,xyjb->uxy", g.bov, u12)
    u12new += lib.einsum("yjb,yxu->uxjb", u11, x87)
    del x87
    x88 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x88 += lib.einsum("xy,uyjb->uxjb", w, u12)
    x105 -= lib.einsum("uxjb->uxjb", x88)
    del x88
    x91 += lib.einsum("ujb->ujb", gc.bov)
    x92 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x92 += lib.einsum("jb,ukb->ujk", t1, x91)
    x93 += lib.einsum("ukj->ujk", x92)
    del x92
    x95 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x95 += lib.einsum("jb,ujc->ubc", t1, x91)
    del x91
    x96 -= lib.einsum("ubc->ubc", x95)
    del x95
    x93 += lib.einsum("ujk->ujk", gc.boo)
    x94 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x94 += lib.einsum("ukb,xkj->uxjb", u11, x93)
    del x93
    x105 += lib.einsum("xujb->uxjb", x94)
    del x94
    x96 += lib.einsum("ubc->ubc", gc.bvv)
    x97 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x97 += lib.einsum("ujc,xbc->uxjb", u11, x96)
    del x96
    x105 -= lib.einsum("xujb->uxjb", x97)
    del x97
    x98 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x98 += lib.einsum("xjb,uxjc->ubc", g.bov, u12)
    x100 += lib.einsum("ubc->ubc", x98)
    del x98
    x101 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x101 += lib.einsum("ujc,xcb->uxjb", u11, x100)
    del x100
    x105 += lib.einsum("uxjb->uxjb", x101)
    del x101
    u12new -= lib.einsum("uxjb->uxjb", x105)
    u12new -= lib.einsum("xujb->uxjb", x105)
    del x105
    x106 += lib.einsum("jbkc->jkbc", v.ovov)
    u12new -= lib.einsum("xukc,kjbc->uxjb", u12, x106)
    del x106
    x107 -= lib.einsum("kjlb->jklb", v.ooov)
    x108 = np.zeros((nbos, nbos, nocc, nocc), dtype=np.float64)
    x108 -= lib.einsum("xulb,ljkb->uxjk", u12, x107)
    del x107
    u12new -= lib.einsum("kb,xukj->uxjb", t1, x108)
    del x108
    t1new -= lib.einsum("kc,kbjc->jb", t1, v.ovov)
    t1new += lib.einsum("u,ubj->jb", s1, g.bvo)
    t1new += lib.einsum("jkdc,kbdc->jb", t2, v.ovvv) * -0.5
    t1new += lib.einsum("bj->jb", f.vo)
    t1new += lib.einsum("ubc,ujc->jb", g.bvv, u11)
    t2new += lib.einsum("kjed,cbed->jkbc", t2, v.vvvv) * 0.5
    t2new -= lib.einsum("lc,lbkj->jkbc", t1, v.ovoo)
    t2new += lib.einsum("cbkj->jkbc", v.vvoo)
    s1new += lib.einsum("jb,ujb->u", t1, gc.bov)
    s1new += lib.einsum("u->u", G)
    s1new += lib.einsum("xjb,uxjb->u", g.bov, u12)
    s1new += lib.einsum("x,ux->u", s1, w)
    u11new -= lib.einsum("ukc,kbjc->ujb", u11, v.ovov)
    u11new += lib.einsum("xbc,uxjc->ujb", g.bvv, u12)
    u11new += lib.einsum("ubj->ujb", gc.bvo)
    u11new += lib.einsum("ux,xbj->ujb", s2, g.bvo)

    return {"t1new": t1new, "t2new": t2new, "s1new": s1new, "s2new": s2new, "u11new": u11new, "u12new": u12new}

def update_lams(f=None, v=None, w=None, g=None, G=None, nocc=None, nvir=None, nbos=None, t1=None, t2=None, s1=None, s2=None, u11=None, u12=None, l1=None, l2=None, ls1=None, ls2=None, lu11=None, lu12=None, **kwargs):
    # Get boson coupling creation array:
    gc = SimpleNamespace(
        boo=g.boo.transpose(0, 2, 1),
        bov=g.bvo.transpose(0, 2, 1),
        bvo=g.bov.transpose(0, 2, 1),
        bvv=g.bvv.transpose(0, 2, 1),
    )

    # L1, L2, LS1, LS2, LU11 and LU12 amplitudes
    x0 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x0 -= lib.einsum("VpB,BAop->VoA", u11, l2)
    x86 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x86 += lib.einsum("pA,VoA->Vop", t1, x0) * 2
    x118 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x118 += lib.einsum("VoA->VoA", x0)
    l1new = np.zeros((nvir, nocc), dtype=np.float64)
    l1new += lib.einsum("VBA,VoB->Ao", g.bvv, x0)
    x1 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x1 += lib.einsum("BAop,IJBA->opIJ", l2, t2)
    x18 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x18 += lib.einsum("poJI->opIJ", x1) * -1
    x147 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x147 += lib.einsum("poJI->opIJ", x1) * -0.5
    l1new += lib.einsum("JIpA,opJI->Ao", v.ooov, x1) * -0.25
    del x1
    x2 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x2 += lib.einsum("IB,ABop->opIA", t1, l2)
    x3 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x3 += lib.einsum("IA,opJA->opIJ", t1, x2)
    x18 += lib.einsum("opJI->opIJ", x3) * 2.0000000000000013
    x19 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x19 += lib.einsum("JA,JoIp->opIA", t1, x18) * 0.25
    del x18
    x147 += lib.einsum("opJI->opIJ", x3)
    l2new = np.zeros((nvir, nvir, nocc, nocc), dtype=np.float64)
    l2new += lib.einsum("IJBA,poIJ->ABop", v.oovv, x147) * -0.5
    del x147
    l1new += lib.einsum("IpJA,oJpI->Ao", v.ooov, x3) * 0.5
    del x3
    x19 += lib.einsum("IJAB,oJpB->opIA", t2, x2) * -1
    x56 = np.zeros((nocc, nvir), dtype=np.float64)
    x56 += lib.einsum("IpBA,IpoB->oA", t2, x2)
    x65 = np.zeros((nocc, nvir), dtype=np.float64)
    x65 += lib.einsum("oA->oA", x56)
    del x56
    l2new += lib.einsum("ICBA,poIC->ABop", v.ovvv, x2)
    x4 = np.zeros((nocc, nocc), dtype=np.float64)
    x4 += lib.einsum("Ao,pA->op", l1, t1)
    x63 = np.zeros((nocc, nocc), dtype=np.float64)
    x63 += lib.einsum("op->op", x4) * 2
    x88 = np.zeros((nocc, nocc), dtype=np.float64)
    x88 += lib.einsum("op->op", x4) * 2
    x125 = np.zeros((nocc, nocc), dtype=np.float64)
    x125 += lib.einsum("op->op", x4)
    x154 = np.zeros((nocc, nocc), dtype=np.float64)
    x154 += lib.einsum("op->op", x4)
    x5 = np.zeros((nocc, nvir), dtype=np.float64)
    x5 += lib.einsum("V,VoA->oA", s1, g.bov)
    x10 = np.zeros((nocc, nvir), dtype=np.float64)
    x10 += lib.einsum("oA->oA", x5)
    x74 = np.zeros((nocc, nvir), dtype=np.float64)
    x74 += lib.einsum("oA->oA", x5)
    x100 = np.zeros((nocc, nvir), dtype=np.float64)
    x100 += lib.einsum("oA->oA", x5)
    l1new -= lib.einsum("op,pA->Ao", x4, x5)
    del x4
    del x5
    x6 = np.zeros((nocc, nocc), dtype=np.float64)
    x6 += lib.einsum("BAIo,IpBA->op", l2, t2)
    x19 += lib.einsum("IA,op->opIA", t1, x6) * 0.5
    x63 += lib.einsum("op->op", x6)
    x85 = np.zeros((nocc, nocc), dtype=np.float64)
    x85 += lib.einsum("op->op", x6) * 0.5
    x132 = np.zeros((nocc, nocc), dtype=np.float64)
    x132 += lib.einsum("op->op", x6)
    x154 += lib.einsum("op->op", x6) * 0.5
    l1new += lib.einsum("pA,op->Ao", f.ov, x6) * -0.5
    del x6
    x7 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x7 += lib.einsum("oB,pIAB->opIA", t1, v.oovv)
    x8 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x8 += lib.einsum("oIpA->opIA", x7) * -1
    x12 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x12 += lib.einsum("IpoA->opIA", x7) * 0.5000000000000003
    x23 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x23 += lib.einsum("IpoA->opIA", x7)
    x115 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x115 -= lib.einsum("oIpA->opIA", x7)
    x145 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x145 += lib.einsum("IpoA->opIA", x7) * 0.5
    x8 += lib.einsum("IpoA->opIA", v.ooov)
    x16 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x16 += lib.einsum("JIBA,pJoB->opIA", t2, x8) * 1.9999999999999987
    x32 = np.zeros((nocc, nvir), dtype=np.float64)
    x32 += lib.einsum("pIBA,opIB->oA", t2, x8)
    x51 = np.zeros((nocc, nvir), dtype=np.float64)
    x51 += lib.einsum("oA->oA", x32)
    del x32
    x168 = np.zeros((nocc, nvir), dtype=np.float64)
    x168 += lib.einsum("pIBA,opIB->oA", t2, x8) * 0.5
    del x8
    x9 = np.zeros((nocc, nvir), dtype=np.float64)
    x9 += lib.einsum("pB,opAB->oA", t1, v.oovv)
    x10 += lib.einsum("oA->oA", x9)
    x74 += lib.einsum("oA->oA", x9)
    x89 = np.zeros((nocc, nvir), dtype=np.float64)
    x89 += lib.einsum("oA->oA", x9)
    x106 = np.zeros((nvir, nvir), dtype=np.float64)
    x106 += lib.einsum("oA,oB->AB", t1, x9)
    x107 = np.zeros((nvir, nvir), dtype=np.float64)
    x107 += lib.einsum("AB->AB", x106)
    del x106
    x120 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x120 += lib.einsum("Ao,pB->opAB", l1, x9)
    x127 = np.zeros((nocc, nocc), dtype=np.float64)
    x127 += lib.einsum("oA,pA->op", t1, x9)
    del x9
    x128 = np.zeros((nocc, nocc), dtype=np.float64)
    x128 += lib.einsum("po->op", x127)
    del x127
    x10 += lib.einsum("oA->oA", f.ov)
    x16 += lib.einsum("oB,IpBA->opIA", x10, t2) * -0.9999999999999993
    x27 = np.zeros((nbos, nbos, nocc, nocc), dtype=np.float64)
    x27 += lib.einsum("oA,WVpA->VWop", x10, u12) * 0.5
    x33 = np.zeros((nocc, nvir), dtype=np.float64)
    x33 += lib.einsum("pB,poBA->oA", x10, t2) * 2
    x51 += lib.einsum("oA->oA", x33) * -1
    del x33
    x41 = np.zeros((nocc, nocc), dtype=np.float64)
    x41 += lib.einsum("oA,pA->op", t1, x10)
    x42 = np.zeros((nocc, nocc), dtype=np.float64)
    x42 += lib.einsum("po->op", x41)
    del x41
    x84 = np.zeros((nbos, nbos), dtype=np.float64)
    x84 += lib.einsum("oA,WVoA->VW", x10, u12) * 0.5
    x148 = np.zeros((nvir, nvir), dtype=np.float64)
    x148 += lib.einsum("oA,oB->AB", t1, x10)
    x149 = np.zeros((nvir, nvir), dtype=np.float64)
    x149 += lib.einsum("AB->AB", x148)
    del x148
    x168 += lib.einsum("pB,poBA->oA", x10, t2) * -1
    lu11new = np.zeros((nbos, nvir, nocc), dtype=np.float64)
    lu11new += lib.einsum("V,oA->VAo", ls1, x10) * 2
    lu12new = np.zeros((nbos, nbos, nvir, nocc), dtype=np.float64)
    lu12new += lib.einsum("WV,oA->VWAo", ls2, x10) * 2
    del x10
    x11 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x11 += lib.einsum("opBA,IJBA->opIJ", t2, v.oovv)
    x13 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x13 += lib.einsum("JIpo->opIJ", x11)
    x146 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x146 += lib.einsum("JIpo->opIJ", x11)
    del x11
    x12 += lib.einsum("poIA->opIA", v.ooov) * -1
    x13 += lib.einsum("JA,poIA->opIJ", t1, x12) * -4
    del x12
    x13 += lib.einsum("poJI->opIJ", v.oooo) * 2
    x16 += lib.einsum("JA,JoIp->opIA", t1, x13) * -0.49999999999999967
    del x13
    x14 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x14 += lib.einsum("oC,pABC->opAB", t1, v.ovvv)
    x15 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x15 += lib.einsum("poAB->opAB", x14) * -0.5
    x22 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x22 -= lib.einsum("poAB->opAB", x14)
    x113 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x113 += lib.einsum("opAB->opAB", x14)
    del x14
    x15 += lib.einsum("oApB->opAB", v.ovov)
    x16 += lib.einsum("pB,oIAB->opIA", t1, x15) * -1.9999999999999987
    del x15
    x16 += lib.einsum("oAIp->opIA", v.ovoo) * -0.9999999999999993
    x16 += lib.einsum("IpCB,oACB->opIA", t2, v.ovvv) * -0.49999999999999967
    l1new += lib.einsum("BApI,opIB->Ao", l2, x16) * 0.5000000000000003
    del x16
    x17 = np.zeros((nbos, nbos, nocc, nocc), dtype=np.float64)
    x17 += lib.einsum("pA,VWAo->VWop", t1, lu12)
    x19 += lib.einsum("WVIA,WVop->opIA", u12, x17) * 0.5
    x55 = np.zeros((nocc, nvir), dtype=np.float64)
    x55 += lib.einsum("WVpA,WVpo->oA", u12, x17)
    x65 += lib.einsum("oA->oA", x55)
    del x55
    x159 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x159 += lib.einsum("WpA,VWpo->VoA", u11, x17)
    x160 = np.zeros((nbos, nbos), dtype=np.float64)
    x160 += lib.einsum("VoA,WoA->VW", g.bov, x159)
    del x159
    x167 = np.zeros((nbos, nbos), dtype=np.float64)
    x167 -= lib.einsum("VW->VW", x160)
    del x160
    lu12new += lib.einsum("opIA,WVIp->VWAo", v.ooov, x17)
    lu12new -= lib.einsum("WVpI,poIA->VWAo", x17, x7)
    del x17
    del x7
    x19 += lib.einsum("Bo,IpAB->opIA", l1, t2) * 0.5
    l1new += lib.einsum("pIBA,opIB->Ao", v.oovv, x19)
    del x19
    x20 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x20 += lib.einsum("WVAo,WVpB->opAB", lu12, u12)
    x20 += lib.einsum("CAoI,pIBC->opAB", l2, t2) * -2
    l1new += lib.einsum("pBCA,opBC->Ao", v.ovvv, x20) * 0.5
    del x20
    x21 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x21 += lib.einsum("BAoC->oABC", v.vvov) * -1
    x21 += lib.einsum("oD,BACD->oABC", t1, v.vvvv)
    l1new += lib.einsum("BCpo,pBCA->Ao", l2, x21) * 0.5
    del x21
    x22 += lib.einsum("oApB->opAB", v.ovov)
    l1new += lib.einsum("poIB,IpBA->Ao", x2, x22)
    lu12new -= lib.einsum("WVBp,opBA->VWAo", lu12, x22)
    del x22
    x23 += lib.einsum("poIA->opIA", v.ooov) * -1
    x27 += lib.einsum("WVIA,IopA->VWop", u12, x23) * -0.5
    del x23
    x24 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x24 += lib.einsum("WV,WoA->VoA", s2, g.bov)
    x26 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x26 += lib.einsum("VoA->VoA", x24)
    x75 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x75 += lib.einsum("VoA->VoA", x24)
    del x24
    x25 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x25 += lib.einsum("VpB,opAB->VoA", u11, v.oovv)
    x26 += lib.einsum("VoA->VoA", x25)
    x75 += lib.einsum("VoA->VoA", x25)
    x81 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x81 += lib.einsum("VoA->VoA", x25) * 0.5
    x111 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x111 += lib.einsum("VAo,VpB->opAB", lu11, x25)
    del x25
    x120 += lib.einsum("opAB->opAB", x111)
    del x111
    x26 += lib.einsum("VoA->VoA", gc.bov)
    x27 += lib.einsum("VpA,WoA->VWop", u11, x26)
    l1new += lib.einsum("VWAp,VWop->Ao", lu12, x27) * -1
    del x27
    x150 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x150 += lib.einsum("pA,VoA->Vop", t1, x26)
    x152 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x152 += lib.einsum("VpB,poBA->VoA", x26, t2)
    del x26
    x28 = np.zeros((nocc, nvir), dtype=np.float64)
    x28 += lib.einsum("V,VAo->oA", s1, g.bvo)
    x51 += lib.einsum("oA->oA", x28) * -2
    x168 += lib.einsum("oA->oA", x28) * -1
    del x28
    x29 = np.zeros((nocc, nvir), dtype=np.float64)
    x29 += lib.einsum("VAB,VoB->oA", g.bvv, u11)
    x51 += lib.einsum("oA->oA", x29) * -2
    x168 += lib.einsum("oA->oA", x29) * -1
    del x29
    x30 = np.zeros((nocc, nvir), dtype=np.float64)
    x30 += lib.einsum("pB,pAoB->oA", t1, v.ovov)
    x51 += lib.einsum("oA->oA", x30) * 2
    x168 += lib.einsum("oA->oA", x30)
    del x30
    x31 = np.zeros((nocc, nvir), dtype=np.float64)
    x31 -= lib.einsum("poCB,pACB->oA", t2, v.ovvv)
    x51 += lib.einsum("oA->oA", x31)
    x168 += lib.einsum("oA->oA", x31) * 0.5
    del x31
    x34 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x34 += lib.einsum("pA,VoA->Vop", t1, g.bov)
    x35 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x35 += lib.einsum("Vop->Vop", x34)
    x87 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x87 += lib.einsum("Vop->Vop", x34)
    del x34
    x35 += lib.einsum("Vop->Vop", g.boo)
    x36 = np.zeros((nocc, nvir), dtype=np.float64)
    x36 += lib.einsum("VpA,Vpo->oA", u11, x35) * 2
    x51 += lib.einsum("oA->oA", x36)
    del x36
    x152 += lib.einsum("Wpo,WVpA->VoA", x35, u12) * -1
    x168 += lib.einsum("VpA,Vpo->oA", u11, x35)
    del x35
    x37 = np.zeros((nocc, nocc), dtype=np.float64)
    x37 += lib.einsum("V,Vop->op", s1, g.boo)
    x42 += lib.einsum("op->op", x37)
    x123 = np.zeros((nocc, nocc), dtype=np.float64)
    x123 += lib.einsum("op->op", x37)
    del x37
    x38 = np.zeros((nocc, nocc), dtype=np.float64)
    x38 += lib.einsum("VoA,VpA->op", g.bov, u11)
    x42 += lib.einsum("op->op", x38)
    x123 += lib.einsum("op->op", x38)
    del x38
    x39 = np.zeros((nocc, nocc), dtype=np.float64)
    x39 -= lib.einsum("IA,IopA->op", t1, v.ooov)
    x42 += lib.einsum("op->op", x39)
    x128 += lib.einsum("op->op", x39)
    del x39
    x129 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x129 += lib.einsum("pI,ABIo->opAB", x128, l2)
    del x128
    x130 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x130 -= lib.einsum("opBA->opAB", x129)
    del x129
    x40 = np.zeros((nocc, nocc), dtype=np.float64)
    x40 += lib.einsum("IoBA,IpBA->op", t2, v.oovv)
    x42 += lib.einsum("po->op", x40) * 0.5
    x131 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x131 += lib.einsum("Ip,ABoI->opAB", x40, l2)
    del x40
    x134 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x134 += lib.einsum("opBA->opAB", x131) * -0.5
    del x131
    x42 += lib.einsum("op->op", f.oo)
    x43 = np.zeros((nocc, nvir), dtype=np.float64)
    x43 += lib.einsum("pA,po->oA", t1, x42) * 2
    x51 += lib.einsum("oA->oA", x43)
    del x43
    x152 += lib.einsum("po,VpA->VoA", x42, u11) * -1
    x168 += lib.einsum("pA,po->oA", t1, x42)
    l1new += lib.einsum("Ap,op->Ao", l1, x42) * -1
    lu12new += lib.einsum("op,WVAp->VWAo", x42, lu12) * -1
    del x42
    x44 = np.zeros((nvir, nvir), dtype=np.float64)
    x44 += lib.einsum("V,VAB->AB", s1, g.bvv)
    x46 = np.zeros((nvir, nvir), dtype=np.float64)
    x46 += lib.einsum("AB->AB", x44)
    x97 = np.zeros((nvir, nvir), dtype=np.float64)
    x97 += lib.einsum("AB->AB", x44)
    x102 = np.zeros((nvir, nvir), dtype=np.float64)
    x102 -= lib.einsum("AB->AB", x44)
    x149 += lib.einsum("AB->AB", x44) * -1
    del x44
    x45 = np.zeros((nvir, nvir), dtype=np.float64)
    x45 += lib.einsum("oC,oABC->AB", t1, v.ovvv)
    x46 += lib.einsum("AB->AB", x45) * -1
    x97 -= lib.einsum("AB->AB", x45)
    x107 += lib.einsum("AB->AB", x45)
    x108 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x108 += lib.einsum("CB,CAop->opAB", x107, l2)
    del x107
    x109 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x109 -= lib.einsum("poAB->opAB", x108)
    del x108
    x149 += lib.einsum("AB->AB", x45)
    del x45
    x46 += lib.einsum("AB->AB", f.vv)
    x47 = np.zeros((nocc, nvir), dtype=np.float64)
    x47 += lib.einsum("oB,AB->oA", t1, x46) * 2
    x51 += lib.einsum("oA->oA", x47) * -1
    del x47
    x168 += lib.einsum("oB,AB->oA", t1, x46) * -1
    del x46
    x48 = np.zeros((nbos), dtype=np.float64)
    x48 += lib.einsum("oA,VoA->V", t1, g.bov)
    x49 = np.zeros((nbos), dtype=np.float64)
    x49 += lib.einsum("V->V", x48)
    x94 = np.zeros((nbos), dtype=np.float64)
    x94 += lib.einsum("V->V", x48)
    del x48
    x49 += lib.einsum("V->V", G)
    x50 = np.zeros((nocc, nvir), dtype=np.float64)
    x50 += lib.einsum("V,VoA->oA", x49, u11) * 2
    x51 += lib.einsum("oA->oA", x50) * -1
    del x50
    x152 += lib.einsum("W,WVoA->VoA", x49, u12)
    x168 += lib.einsum("V,VoA->oA", x49, u11) * -1
    del x49
    x51 += lib.einsum("Ao->oA", f.vo) * -2
    l1new += lib.einsum("pB,BApo->Ao", x51, l2) * -0.5
    ls1new = np.zeros((nbos), dtype=np.float64)
    ls1new += lib.einsum("oA,VAo->V", x51, lu11) * -0.5
    del x51
    x52 = np.zeros((nocc, nvir), dtype=np.float64)
    x52 += lib.einsum("V,VoA->oA", ls1, u11)
    x65 += lib.einsum("oA->oA", x52) * -2
    del x52
    x53 = np.zeros((nocc, nvir), dtype=np.float64)
    x53 += lib.einsum("WV,WVoA->oA", ls2, u12)
    x65 += lib.einsum("oA->oA", x53) * -1
    del x53
    x54 = np.zeros((nocc, nvir), dtype=np.float64)
    x54 += lib.einsum("Bp,opAB->oA", l1, t2)
    x65 += lib.einsum("oA->oA", x54) * -2
    del x54
    x57 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x57 += lib.einsum("pA,VAo->Vop", t1, lu11)
    x59 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x59 += lib.einsum("Vop->Vop", x57)
    x77 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x77 += lib.einsum("Vop->Vop", x57)
    del x57
    x58 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x58 += lib.einsum("WpA,WVAo->Vop", u11, lu12)
    x59 += lib.einsum("Vop->Vop", x58)
    x60 = np.zeros((nocc, nvir), dtype=np.float64)
    x60 += lib.einsum("VpA,Vpo->oA", u11, x59) * 2
    del x59
    x65 += lib.einsum("oA->oA", x60)
    del x60
    x77 += lib.einsum("Vop->Vop", x58)
    x176 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x176 += lib.einsum("VpA,Wop->VWoA", g.bov, x77)
    x177 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x177 += lib.einsum("VWoA->VWoA", x176)
    del x176
    x61 = np.zeros((nocc, nocc), dtype=np.float64)
    x61 += lib.einsum("VAo,VpA->op", lu11, u11)
    x63 += lib.einsum("op->op", x61) * 2
    x85 += lib.einsum("op->op", x61)
    x88 += lib.einsum("op->op", x61) * 2
    x125 += lib.einsum("op->op", x61)
    x126 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x126 += lib.einsum("pI,IoAB->opAB", x125, v.oovv)
    del x125
    x130 += lib.einsum("poBA->opAB", x126)
    del x126
    x154 += lib.einsum("op->op", x61)
    del x61
    x62 = np.zeros((nocc, nocc), dtype=np.float64)
    x62 += lib.einsum("WVAo,WVpA->op", lu12, u12)
    x63 += lib.einsum("op->op", x62)
    x64 = np.zeros((nocc, nvir), dtype=np.float64)
    x64 += lib.einsum("pA,po->oA", t1, x63)
    x65 += lib.einsum("oA->oA", x64)
    del x64
    l1new += lib.einsum("Ip,poIA->Ao", x63, v.ooov) * -0.5
    del x63
    x85 += lib.einsum("op->op", x62) * 0.5
    x86 += lib.einsum("V,op->Vop", s1, x85) * 2
    del x85
    x88 += lib.einsum("op->op", x62)
    x132 += lib.einsum("op->op", x62)
    x133 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x133 += lib.einsum("pI,IoAB->opAB", x132, v.oovv) * 0.5
    del x132
    x134 += lib.einsum("poBA->opAB", x133) * -1
    del x133
    l2new += lib.einsum("opAB->ABop", x134) * -1
    l2new += lib.einsum("poAB->ABop", x134)
    del x134
    x154 += lib.einsum("op->op", x62) * 0.5
    del x62
    ls1new += lib.einsum("po,Vop->V", x154, g.boo) * -1
    del x154
    x65 += lib.einsum("oA->oA", t1) * -2
    l1new += lib.einsum("pB,poBA->Ao", x65, v.oovv) * -0.5
    ls1new += lib.einsum("oA,VoA->V", x65, g.bov) * -0.5
    del x65
    x66 = np.zeros((nvir, nvir), dtype=np.float64)
    x66 += lib.einsum("Ao,oB->AB", l1, t1)
    x70 = np.zeros((nvir, nvir), dtype=np.float64)
    x70 += lib.einsum("AB->AB", x66)
    x104 = np.zeros((nvir, nvir), dtype=np.float64)
    x104 += lib.einsum("AB->AB", x66)
    ls1new += lib.einsum("AB,VAB->V", x66, g.bvv)
    del x66
    x67 = np.zeros((nvir, nvir), dtype=np.float64)
    x67 += lib.einsum("VAo,VoB->AB", lu11, u11)
    x70 += lib.einsum("AB->AB", x67)
    x104 += lib.einsum("AB->AB", x67)
    x105 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x105 += lib.einsum("BC,opCA->opAB", x104, v.oovv)
    del x104
    x109 += lib.einsum("poBA->opAB", x105)
    del x105
    x153 = np.zeros((nvir, nvir), dtype=np.float64)
    x153 += lib.einsum("AB->AB", x67) * 2
    del x67
    x68 = np.zeros((nvir, nvir), dtype=np.float64)
    x68 += lib.einsum("WVAo,WVoB->AB", lu12, u12)
    x70 += lib.einsum("AB->AB", x68) * 0.5
    x137 = np.zeros((nvir, nvir), dtype=np.float64)
    x137 += lib.einsum("AB->AB", x68)
    x153 += lib.einsum("AB->AB", x68)
    del x68
    x69 = np.zeros((nvir, nvir), dtype=np.float64)
    x69 += lib.einsum("CApo,poCB->AB", l2, t2)
    x70 += lib.einsum("AB->AB", x69) * 0.5
    l1new += lib.einsum("BC,oBCA->Ao", x70, v.ovvv) * -1
    del x70
    x137 += lib.einsum("AB->AB", x69)
    x138 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x138 += lib.einsum("BC,opCA->opAB", x137, v.oovv) * 0.5
    del x137
    x139 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x139 += lib.einsum("poBA->opAB", x138) * -1
    del x138
    x153 += lib.einsum("AB->AB", x69)
    del x69
    ls1new += lib.einsum("AB,VAB->V", x153, g.bvv) * 0.5
    del x153
    x71 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x71 += lib.einsum("WV,Wop->Vop", s2, g.boo)
    x76 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x76 += lib.einsum("Vop->Vop", x71)
    x150 += lib.einsum("Vop->Vop", x71)
    del x71
    x72 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x72 += lib.einsum("WoA,WVpA->Vop", g.bov, u12)
    x76 += lib.einsum("Vop->Vop", x72)
    x150 += lib.einsum("Vop->Vop", x72)
    del x72
    x73 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x73 += lib.einsum("VIA,oIpA->Vop", u11, v.ooov)
    x76 += lib.einsum("Vop->Vop", x73)
    x150 += lib.einsum("Vop->Vop", x73)
    del x73
    x74 += lib.einsum("oA->oA", f.ov)
    x76 += lib.einsum("oA,VpA->Vop", x74, u11)
    x93 = np.zeros((nbos), dtype=np.float64)
    x93 += lib.einsum("oA,VoA->V", x74, u11)
    del x74
    x96 = np.zeros((nbos), dtype=np.float64)
    x96 += lib.einsum("V->V", x93)
    del x93
    x75 += lib.einsum("VoA->VoA", gc.bov)
    x76 += lib.einsum("pA,VoA->Vop", t1, x75)
    l1new -= lib.einsum("VpA,Vop->Ao", x75, x77)
    del x75
    del x77
    x76 += lib.einsum("Vop->Vop", gc.boo)
    l1new -= lib.einsum("VAp,Vop->Ao", lu11, x76)
    del x76
    x78 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x78 += lib.einsum("WV,WAB->VAB", s2, g.bvv)
    x80 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x80 += lib.einsum("VAB->VAB", x78)
    x151 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x151 += lib.einsum("VAB->VAB", x78)
    del x78
    x79 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x79 += lib.einsum("VoC,oABC->VAB", u11, v.ovvv)
    x80 -= lib.einsum("VAB->VAB", x79)
    x151 += lib.einsum("VAB->VAB", x79) * -1
    del x79
    x80 += lib.einsum("VAB->VAB", gc.bvv)
    l1new += lib.einsum("VBo,VBA->Ao", lu11, x80)
    del x80
    x81 += lib.einsum("VoA->VoA", gc.bov)
    x84 += lib.einsum("WoA,VoA->VW", u11, x81)
    del x81
    x82 = np.zeros((nbos, nbos), dtype=np.float64)
    x82 += lib.einsum("VoA,WoA->VW", g.bov, u11)
    x83 = np.zeros((nbos, nbos), dtype=np.float64)
    x83 += lib.einsum("WV->VW", x82)
    x156 = np.zeros((nbos, nbos), dtype=np.float64)
    x156 += lib.einsum("WX,VX->VW", ls2, x82)
    x167 += lib.einsum("VW->VW", x156)
    del x156
    x174 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x174 += lib.einsum("VX,XWAo->VWoA", x82, lu12)
    del x82
    x177 -= lib.einsum("VWoA->VWoA", x174)
    del x174
    x83 += lib.einsum("VW->VW", w)
    x84 += lib.einsum("XV,WX->VW", s2, x83)
    l1new += lib.einsum("WV,VWAo->Ao", x84, lu12)
    del x84
    x152 += lib.einsum("VW,WoA->VoA", x83, u11)
    del x83
    x86 += lib.einsum("Ao,VpA->Vop", l1, u11) * 2
    x86 += lib.einsum("WAo,WVpA->Vop", lu11, u12) * 2
    l1new += lib.einsum("VpA,Vop->Ao", g.bov, x86) * -0.5
    del x86
    x87 += lib.einsum("Vop->Vop", g.boo)
    x163 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x163 += lib.einsum("pA,Vpo->VoA", t1, x87)
    x164 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x164 -= lib.einsum("VoA->VoA", x163)
    del x163
    x166 = np.zeros((nbos, nbos), dtype=np.float64)
    x166 += lib.einsum("Vop,Wpo->VW", x58, x87)
    del x58
    x167 -= lib.einsum("WV->VW", x166)
    del x166
    x175 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x175 += lib.einsum("VAp,Wop->VWoA", lu11, x87)
    x177 += lib.einsum("WVoA->VWoA", x175)
    del x175
    l1new -= lib.einsum("VpA,Vop->Ao", x0, x87)
    del x0
    del x87
    x89 += lib.einsum("oA->oA", f.ov)
    l1new += lib.einsum("op,pA->Ao", x88, x89) * -0.5
    del x88
    del x89
    x90 = np.zeros((nbos), dtype=np.float64)
    x90 += lib.einsum("W,VW->V", s1, w)
    x96 += lib.einsum("V->V", x90)
    del x90
    x91 = np.zeros((nbos), dtype=np.float64)
    x91 += lib.einsum("oA,VoA->V", t1, gc.bov)
    x96 += lib.einsum("V->V", x91)
    del x91
    x92 = np.zeros((nbos), dtype=np.float64)
    x92 += lib.einsum("WoA,WVoA->V", g.bov, u12)
    x96 += lib.einsum("V->V", x92)
    del x92
    x94 += lib.einsum("V->V", G)
    x95 = np.zeros((nbos), dtype=np.float64)
    x95 += lib.einsum("W,WV->V", x94, s2)
    x96 += lib.einsum("V->V", x95)
    del x95
    x167 += lib.einsum("W,V->VW", ls1, x94)
    del x94
    x96 += lib.einsum("V->V", G)
    l1new += lib.einsum("V,VAo->Ao", x96, lu11)
    ls1new += lib.einsum("W,WV->V", x96, ls2)
    del x96
    x97 += lib.einsum("AB->AB", f.vv)
    l1new += lib.einsum("Bo,BA->Ao", l1, x97)
    del x97
    x98 = np.zeros((nbos), dtype=np.float64)
    x98 += lib.einsum("V->V", s1)
    x98 += lib.einsum("W,VW->V", ls1, s2)
    x98 += lib.einsum("Ao,VoA->V", l1, u11)
    x98 += lib.einsum("WAo,WVoA->V", lu11, u12)
    l1new += lib.einsum("V,VoA->Ao", x98, g.bov)
    del x98
    x99 = np.zeros((nvir, nvir), dtype=np.float64)
    x99 += lib.einsum("VoA,VoB->AB", g.bov, u11)
    x102 += lib.einsum("BA->AB", x99)
    x149 += lib.einsum("BA->AB", x99)
    del x99
    x100 += lib.einsum("oA->oA", f.ov)
    x101 = np.zeros((nvir, nvir), dtype=np.float64)
    x101 += lib.einsum("oA,oB->AB", t1, x100)
    x102 += lib.einsum("AB->AB", x101)
    del x101
    x103 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x103 += lib.einsum("CB,CAop->opAB", x102, l2)
    del x102
    x109 += lib.einsum("poBA->opAB", x103)
    del x103
    l2new += lib.einsum("opAB->ABop", x109)
    l2new -= lib.einsum("opBA->ABop", x109)
    del x109
    x120 += lib.einsum("Bp,oA->opAB", l1, x100)
    x122 = np.zeros((nocc, nocc), dtype=np.float64)
    x122 += lib.einsum("oA,pA->op", t1, x100)
    del x100
    x123 += lib.einsum("po->op", x122)
    del x122
    x110 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x110 += lib.einsum("VoA,VBp->opAB", gc.bov, lu11)
    x120 += lib.einsum("opAB->opAB", x110)
    del x110
    x112 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x112 -= lib.einsum("IoCA,IpBC->opAB", t2, v.oovv)
    x113 += lib.einsum("opAB->opAB", x112)
    del x112
    x113 -= lib.einsum("pAoB->opAB", v.ovov)
    x114 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x114 += lib.einsum("CAIo,IpCB->opAB", l2, x113)
    del x113
    x120 += lib.einsum("opAB->opAB", x114)
    del x114
    x115 += lib.einsum("IpoA->opIA", v.ooov)
    x116 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x116 += lib.einsum("IJpB,IoJA->opAB", x115, x2)
    del x2
    del x115
    x120 -= lib.einsum("opAB->opAB", x116)
    del x116
    x117 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x117 += lib.einsum("VW,WAo->VoA", s2, lu11)
    x118 += lib.einsum("VoA->VoA", x117)
    del x117
    x119 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x119 += lib.einsum("VoA,VpB->opAB", g.bov, x118)
    del x118
    x120 += lib.einsum("opAB->opAB", x119)
    del x119
    l2new += lib.einsum("opAB->ABop", x120)
    l2new -= lib.einsum("opBA->ABop", x120)
    l2new -= lib.einsum("poAB->ABop", x120)
    l2new += lib.einsum("poBA->ABop", x120)
    del x120
    x121 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x121 += lib.einsum("Co,pCAB->opAB", l1, v.ovvv)
    x130 += lib.einsum("opBA->opAB", x121)
    del x121
    x123 += lib.einsum("op->op", f.oo)
    x124 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x124 += lib.einsum("pI,ABIo->opAB", x123, l2)
    del x123
    x130 += lib.einsum("poBA->opAB", x124)
    del x124
    l2new += lib.einsum("opAB->ABop", x130)
    l2new -= lib.einsum("poAB->ABop", x130)
    del x130
    x135 = np.zeros((nvir, nvir), dtype=np.float64)
    x135 += lib.einsum("poCA,poCB->AB", t2, v.oovv)
    x136 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x136 -= lib.einsum("CB,ACpo->opAB", x135, l2)
    x139 += lib.einsum("opAB->opAB", x136) * 0.5
    del x136
    l2new += lib.einsum("opAB->ABop", x139) * -1
    l2new += lib.einsum("opBA->ABop", x139)
    del x139
    x149 += lib.einsum("AB->AB", x135) * 0.5
    del x135
    x140 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x140 += lib.einsum("VWpB,opAB->VWoA", u12, v.oovv)
    x141 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x141 += lib.einsum("WVAo,WVpB->opAB", lu12, x140)
    del x140
    l2new += lib.einsum("opAB->ABop", x141) * 0.5
    l2new += lib.einsum("opBA->ABop", x141) * -0.5
    l2new += lib.einsum("poAB->ABop", x141) * -0.5
    l2new += lib.einsum("poBA->ABop", x141) * 0.5
    del x141
    x142 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x142 += lib.einsum("AI,opIB->opAB", l1, v.ooov)
    x144 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x144 -= lib.einsum("poAB->opAB", x142)
    del x142
    x143 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x143 += lib.einsum("CA,BCop->opAB", f.vv, l2)
    x144 -= lib.einsum("poAB->opAB", x143)
    del x143
    l2new -= lib.einsum("opAB->ABop", x144)
    l2new += lib.einsum("opBA->ABop", x144)
    del x144
    x145 += lib.einsum("poIA->opIA", v.ooov) * -1
    x146 += lib.einsum("JA,poIA->opIJ", t1, x145) * -4
    del x145
    x146 += lib.einsum("poJI->opIJ", v.oooo) * 2
    l2new += lib.einsum("BAIJ,poIJ->ABop", l2, x146) * 0.25
    del x146
    x149 += lib.einsum("AB->AB", f.vv) * -1
    x152 += lib.einsum("AB,VoB->VoA", x149, u11) * -1
    lu12new += lib.einsum("BA,WVBo->VWAo", x149, lu12) * -1
    del x149
    x150 += lib.einsum("Vop->Vop", gc.boo)
    x152 += lib.einsum("pA,Vpo->VoA", t1, x150) * -1
    del x150
    x151 += lib.einsum("VAB->VAB", gc.bvv)
    x152 += lib.einsum("oB,VAB->VoA", t1, x151)
    del x151
    x152 += lib.einsum("VAo->VoA", gc.bvo)
    x152 += lib.einsum("WV,WAo->VoA", s2, g.bvo)
    x152 += lib.einsum("WAB,WVoB->VoA", g.bvv, u12)
    x152 += lib.einsum("VpB,pAoB->VoA", u11, v.ovov) * -1
    ls1new += lib.einsum("WoA,WVAo->V", x152, lu12)
    del x152
    x155 = np.zeros((nbos, nbos), dtype=np.float64)
    x155 += lib.einsum("VX,XW->VW", ls2, w)
    x167 += lib.einsum("VW->VW", x155)
    del x155
    x157 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x157 += lib.einsum("WoB,WVAo->VAB", u11, lu12)
    x158 = np.zeros((nbos, nbos), dtype=np.float64)
    x158 += lib.einsum("VAB,WAB->VW", g.bvv, x157)
    x167 += lib.einsum("VW->VW", x158)
    del x158
    x173 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x173 += lib.einsum("VoB,WAB->VWoA", g.bov, x157)
    del x157
    x177 += lib.einsum("VWoA->VWoA", x173)
    del x173
    x161 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x161 += lib.einsum("oB,VAB->VoA", t1, g.bvv)
    x164 += lib.einsum("VoA->VoA", x161)
    del x161
    x162 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x162 += lib.einsum("VpB,opAB->VoA", g.bov, t2)
    x164 += lib.einsum("VoA->VoA", x162)
    del x162
    x164 += lib.einsum("VAo->VoA", g.bvo)
    x165 = np.zeros((nbos, nbos), dtype=np.float64)
    x165 += lib.einsum("VAo,WoA->VW", lu11, x164)
    del x164
    x167 += lib.einsum("WV->VW", x165)
    del x165
    ls2new = np.zeros((nbos, nbos), dtype=np.float64)
    ls2new += lib.einsum("VW->VW", x167)
    ls2new += lib.einsum("WV->VW", x167)
    del x167
    x168 += lib.einsum("Ao->oA", f.vo) * -1
    ls2new += lib.einsum("oA,WVAo->VW", x168, lu12) * -1
    del x168
    x169 = np.zeros((nbos, nbos, nbos), dtype=np.float64)
    x169 += lib.einsum("XoA,VWAo->VWX", u11, lu12)
    lu12new += lib.einsum("XoA,WVX->VWAo", g.bov, x169)
    del x169
    x170 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x170 += lib.einsum("VWBp,opAB->VWoA", lu12, t2)
    lu12new += lib.einsum("poBA,WVpB->VWAo", v.oovv, x170)
    del x170
    x171 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x171 += lib.einsum("XW,XVAo->VWoA", w, lu12)
    x177 -= lib.einsum("VWoA->VWoA", x171)
    del x171
    x172 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x172 += lib.einsum("VBA,WBo->VWoA", g.bvv, lu11)
    x177 -= lib.einsum("VWoA->VWoA", x172)
    del x172
    lu12new -= lib.einsum("VWoA->VWAo", x177)
    lu12new -= lib.einsum("WVoA->VWAo", x177)
    del x177
    l1new += lib.einsum("V,VoA->Ao", ls1, gc.bov)
    l1new += lib.einsum("oA->Ao", f.ov)
    l1new -= lib.einsum("Bp,oBpA->Ao", l1, v.ovov)
    l2new += lib.einsum("DCpo,DCBA->ABop", l2, v.vvvv) * 0.5
    l2new += lib.einsum("poBA->ABop", v.oovv)
    ls1new += lib.einsum("W,WV->V", ls1, w)
    ls1new += lib.einsum("V->V", G)
    ls1new += lib.einsum("Ao,VAo->V", l1, g.bvo)
    lu11new += lib.einsum("VBp,ABop->VAo", g.bvo, l2)
    lu11new -= lib.einsum("VBp,oBpA->VAo", lu11, v.ovov)
    lu11new -= lib.einsum("op,VAp->VAo", f.oo, lu11)
    lu11new -= lib.einsum("Ap,Vop->VAo", l1, g.boo)
    lu11new -= lib.einsum("Wop,VWAp->VAo", gc.boo, lu12)
    lu11new += lib.einsum("VoA->VAo", g.bov)
    lu11new += lib.einsum("W,VWAo->VAo", G, lu12)
    lu11new += lib.einsum("VW,WoA->VAo", ls2, gc.bov)
    lu11new += lib.einsum("WV,WAo->VAo", w, lu11)
    lu11new += lib.einsum("BA,VBo->VAo", f.vv, lu11)
    lu11new += lib.einsum("Bo,VBA->VAo", l1, g.bvv)
    lu11new += lib.einsum("WBA,VWBo->VAo", gc.bvv, lu12)

    return {"l1new": l1new, "l2new": l2new, "ls1new": ls1new, "ls2new": ls2new, "lu11new": lu11new, "lu12new": lu12new}

def make_rdm1_f(f=None, v=None, w=None, g=None, G=None, nocc=None, nvir=None, nbos=None, t1=None, t2=None, s1=None, s2=None, u11=None, u12=None, l1=None, l2=None, ls1=None, ls2=None, lu11=None, lu12=None, **kwargs):
    # Get boson coupling creation array:
    gc = SimpleNamespace(
        boo=g.boo.transpose(0, 2, 1),
        bov=g.bvo.transpose(0, 2, 1),
        bvo=g.bov.transpose(0, 2, 1),
        bvv=g.bvv.transpose(0, 2, 1),
    )

    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    # 1RDM
    x0 = np.zeros((nocc, nocc), dtype=np.float64)
    x0 += lib.einsum("di,jd->ij", l1, t1)
    x7 = np.zeros((nocc, nocc), dtype=np.float64)
    x7 += lib.einsum("ij->ij", x0)
    rdm1_f_oo = np.zeros((nocc, nocc), dtype=np.float64)
    rdm1_f_oo -= lib.einsum("ij->ij", x0)
    del x0
    x1 = np.zeros((nocc, nocc), dtype=np.float64)
    x1 += lib.einsum("tsdi,tsjd->ij", lu12, u12)
    x7 += lib.einsum("ij->ij", x1) * 0.5
    rdm1_f_oo += lib.einsum("ij->ij", x1) * -0.5
    del x1
    x2 = np.zeros((nocc, nocc), dtype=np.float64)
    x2 += lib.einsum("edik,jked->ij", l2, t2)
    x7 += lib.einsum("ij->ij", x2) * 0.5
    rdm1_f_oo += lib.einsum("ij->ij", x2) * -0.5
    del x2
    x3 = np.zeros((nocc, nocc), dtype=np.float64)
    x3 += lib.einsum("sdi,sjd->ij", lu11, u11)
    x7 += lib.einsum("ij->ij", x3)
    rdm1_f_vo = np.zeros((nvir, nocc), dtype=np.float64)
    rdm1_f_vo += lib.einsum("jd,ji->di", t1, x7) * -1
    del x7
    rdm1_f_oo -= lib.einsum("ij->ij", x3)
    del x3
    x4 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x4 += lib.einsum("ke,deij->ijkd", t1, l2)
    rdm1_f_vo += lib.einsum("kjde,kjie->di", t2, x4) * 0.5
    del x4
    x5 = np.zeros((nbos, nbos, nocc, nocc), dtype=np.float64)
    x5 += lib.einsum("jd,stdi->stij", t1, lu12)
    rdm1_f_vo += lib.einsum("tsjd,tsji->di", u12, x5) * -0.5
    del x5
    x6 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x6 += lib.einsum("jd,sdi->sij", t1, lu11)
    x6 += lib.einsum("tjd,tsdi->sij", u11, lu12)
    rdm1_f_vo -= lib.einsum("sjd,sji->di", u11, x6)
    del x6
    rdm1_f_oo += lib.einsum("ji->ij", delta_oo)
    rdm1_f_ov = np.zeros((nocc, nvir), dtype=np.float64)
    rdm1_f_ov += lib.einsum("di->id", l1)
    rdm1_f_vo += lib.einsum("ts,tsid->di", ls2, u12) * 0.5
    rdm1_f_vo += lib.einsum("ej,ijde->di", l1, t2)
    rdm1_f_vo += lib.einsum("id->di", t1)
    rdm1_f_vo += lib.einsum("s,sid->di", ls1, u11)
    rdm1_f_vv = np.zeros((nvir, nvir), dtype=np.float64)
    rdm1_f_vv += lib.einsum("sei,sid->de", lu11, u11)
    rdm1_f_vv += lib.einsum("feji,jidf->de", l2, t2) * -0.5
    rdm1_f_vv += lib.einsum("tsei,tsid->de", lu12, u12) * 0.5
    rdm1_f_vv += lib.einsum("ei,id->de", l1, t1)

    rdm1_f = np.block([[rdm1_f_oo, rdm1_f_ov], [rdm1_f_vo, rdm1_f_vv]])

    return rdm1_f

def make_rdm2_f(f=None, v=None, w=None, g=None, G=None, nocc=None, nvir=None, nbos=None, t1=None, t2=None, s1=None, s2=None, u11=None, u12=None, l1=None, l2=None, ls1=None, ls2=None, lu11=None, lu12=None, **kwargs):
    # Get boson coupling creation array:
    gc = SimpleNamespace(
        boo=g.boo.transpose(0, 2, 1),
        bov=g.bvo.transpose(0, 2, 1),
        bvo=g.bov.transpose(0, 2, 1),
        bvv=g.bvv.transpose(0, 2, 1),
    )

    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    # 2RDM
    x0 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x0 += lib.einsum("feij,klfe->ijkl", l2, t2)
    x28 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x28 += lib.einsum("jilk->ijkl", x0) * -1
    x75 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x75 += lib.einsum("jilk->ijkl", x0) * -1
    x76 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x76 += lib.einsum("jilk->ijkl", x0) * -1
    rdm2_f_oooo = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    rdm2_f_oooo += lib.einsum("jilk->ijkl", x0) * 0.5
    del x0
    x1 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x1 += lib.einsum("kf,efij->ijke", t1, l2)
    x2 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x2 += lib.einsum("ke,ijle->ijkl", t1, x1)
    x28 += lib.einsum("ijlk->ijkl", x2) * 2
    x29 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x29 += lib.einsum("le,lijk->ijke", t1, x28) * 0.5
    del x28
    rdm2_f_oovo = np.zeros((nocc, nvir, nocc, nocc), dtype=np.float64)
    rdm2_f_oovo += lib.einsum("ikje->iejk", x29) * -1
    rdm2_f_vooo = np.zeros((nvir, nocc, nocc, nocc), dtype=np.float64)
    rdm2_f_vooo += lib.einsum("ikje->eijk", x29)
    del x29
    x75 += lib.einsum("ijlk->ijkl", x2) * 2.0000000000000013
    rdm2_f_vovo = np.zeros((nvir, nvir, nocc, nocc), dtype=np.float64)
    rdm2_f_vovo += lib.einsum("klfe,klji->efij", t2, x75) * -0.25
    del x75
    x76 += lib.einsum("ijlk->ijkl", x2) * 1.9999999999999987
    x77 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x77 += lib.einsum("le,likj->ijke", t1, x76) * -1
    del x76
    rdm2_f_vovo += lib.einsum("ke,kjif->efij", t1, x77) * -0.5000000000000003
    del x77
    rdm2_f_oooo -= lib.einsum("ijlk->ijkl", x2)
    del x2
    x13 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x13 -= lib.einsum("klef,iljf->ijke", t2, x1)
    x20 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x20 += lib.einsum("ijke->ijke", x13)
    x34 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x34 -= lib.einsum("ijke->ijke", x13)
    x58 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x58 += lib.einsum("ke,kijf->ijef", t1, x13)
    del x13
    x64 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x64 -= lib.einsum("ijef->ijef", x58)
    del x58
    x24 = np.zeros((nocc, nvir), dtype=np.float64)
    x24 -= lib.einsum("kjef,kjif->ie", t2, x1)
    x26 = np.zeros((nocc, nvir), dtype=np.float64)
    x26 += lib.einsum("ie->ie", x24)
    x70 = np.zeros((nocc, nvir), dtype=np.float64)
    x70 += lib.einsum("ie->ie", x24)
    del x24
    x38 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x38 += lib.einsum("kf,ikje->ijef", t1, x1)
    x85 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x85 -= lib.einsum("jg,jief->iefg", t1, x38)
    rdm2_f_vovv = np.zeros((nvir, nvir, nocc, nvir), dtype=np.float64)
    rdm2_f_vovv -= lib.einsum("igfe->efig", x85)
    rdm2_f_vvvo = np.zeros((nvir, nvir, nvir, nocc), dtype=np.float64)
    rdm2_f_vvvo += lib.einsum("igfe->efgi", x85)
    del x85
    rdm2_f_oovv = np.zeros((nocc, nvir, nocc, nvir), dtype=np.float64)
    rdm2_f_oovv += lib.einsum("ijfe->iejf", x38)
    rdm2_f_ovvo = np.zeros((nocc, nvir, nvir, nocc), dtype=np.float64)
    rdm2_f_ovvo -= lib.einsum("ijfe->iefj", x38)
    rdm2_f_voov = np.zeros((nvir, nocc, nocc, nvir), dtype=np.float64)
    rdm2_f_voov -= lib.einsum("ijfe->eijf", x38)
    rdm2_f_vvoo = np.zeros((nvir, nocc, nvir, nocc), dtype=np.float64)
    rdm2_f_vvoo += lib.einsum("ijfe->eifj", x38)
    del x38
    x84 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x84 += lib.einsum("kjfg,kjie->iefg", t2, x1)
    rdm2_f_vovv += lib.einsum("igef->efig", x84) * 0.5
    rdm2_f_vvvo += lib.einsum("igef->efgi", x84) * -0.5
    del x84
    rdm2_f_ooov = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    rdm2_f_ooov -= lib.einsum("jike->ijke", x1)
    rdm2_f_ovoo = np.zeros((nocc, nocc, nvir, nocc), dtype=np.float64)
    rdm2_f_ovoo += lib.einsum("jike->ijek", x1)
    del x1
    x3 = np.zeros((nocc, nocc), dtype=np.float64)
    x3 += lib.einsum("ei,je->ij", l1, t1)
    x19 = np.zeros((nocc, nocc), dtype=np.float64)
    x19 += lib.einsum("ij->ij", x3)
    x32 = np.zeros((nocc, nvir), dtype=np.float64)
    x32 += lib.einsum("je,ji->ie", t1, x3)
    x33 = np.zeros((nocc, nvir), dtype=np.float64)
    x33 += lib.einsum("ie->ie", x32) * -2
    del x32
    x72 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x72 += lib.einsum("ki,jkef->ijef", x3, t2)
    x74 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x74 -= lib.einsum("ijfe->ijef", x72)
    del x72
    x78 = np.zeros((nocc, nocc), dtype=np.float64)
    x78 += lib.einsum("ij->ij", x3)
    rdm2_f_oooo -= lib.einsum("ki,jl->ijkl", delta_oo, x3)
    rdm2_f_oooo += lib.einsum("kj,il->ijkl", delta_oo, x3)
    rdm2_f_oooo += lib.einsum("li,jk->ijkl", delta_oo, x3)
    rdm2_f_oooo -= lib.einsum("lj,ik->ijkl", delta_oo, x3)
    del x3
    x4 = np.zeros((nocc, nocc), dtype=np.float64)
    x4 += lib.einsum("tsei,tsje->ij", lu12, u12)
    x6 = np.zeros((nocc, nocc), dtype=np.float64)
    x6 += lib.einsum("ij->ij", x4)
    x68 = np.zeros((nocc, nocc), dtype=np.float64)
    x68 += lib.einsum("ij->ij", x4)
    del x4
    x5 = np.zeros((nocc, nocc), dtype=np.float64)
    x5 += lib.einsum("feik,jkfe->ij", l2, t2)
    x6 += lib.einsum("ij->ij", x5)
    x25 = np.zeros((nocc, nvir), dtype=np.float64)
    x25 += lib.einsum("je,ji->ie", t1, x6)
    x26 += lib.einsum("ie->ie", x25)
    del x25
    x27 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x27 += lib.einsum("je,ik->ijke", t1, x6) * -0.5
    x35 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x35 += lib.einsum("je,ik->ijke", t1, x6) * 0.5
    x53 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x53 += lib.einsum("ki,kjef->ijef", x6, t2) * 0.5
    rdm2_f_vovo += lib.einsum("jief->efij", x53)
    rdm2_f_vovo += lib.einsum("ijef->efij", x53) * -1
    del x53
    rdm2_f_oooo += lib.einsum("ki,jl->ijkl", delta_oo, x6) * -0.5
    rdm2_f_oooo += lib.einsum("li,jk->ijkl", delta_oo, x6) * 0.5
    rdm2_f_oooo += lib.einsum("jk,il->ijkl", delta_oo, x6) * 0.5
    rdm2_f_oooo += lib.einsum("jl,ik->ijkl", delta_oo, x6) * -0.5
    del x6
    x68 += lib.einsum("ij->ij", x5)
    del x5
    x69 = np.zeros((nocc, nvir), dtype=np.float64)
    x69 += lib.einsum("je,ji->ie", t1, x68)
    del x68
    x70 += lib.einsum("ie->ie", x69)
    del x69
    x7 = np.zeros((nocc, nocc), dtype=np.float64)
    x7 += lib.einsum("sei,sje->ij", lu11, u11)
    x15 = np.zeros((nocc, nvir), dtype=np.float64)
    x15 += lib.einsum("je,ji->ie", t1, x7)
    x18 = np.zeros((nocc, nvir), dtype=np.float64)
    x18 += lib.einsum("ie->ie", x15)
    del x15
    x19 += lib.einsum("ij->ij", x7)
    x20 -= lib.einsum("je,ik->ijke", t1, x19)
    x34 += lib.einsum("je,ik->ijke", t1, x19)
    del x19
    x73 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x73 += lib.einsum("kj,ikef->ijef", x7, t2)
    x74 += lib.einsum("ijfe->ijef", x73)
    del x73
    rdm2_f_vovo -= lib.einsum("ijfe->efij", x74)
    rdm2_f_vovo += lib.einsum("jife->efij", x74)
    del x74
    x78 += lib.einsum("ij->ij", x7)
    x79 = np.zeros((nocc, nvir), dtype=np.float64)
    x79 += lib.einsum("je,ji->ie", t1, x78) * 2
    x80 = np.zeros((nocc, nvir), dtype=np.float64)
    x80 += lib.einsum("ie->ie", x79) * -1
    del x79
    x81 = np.zeros((nocc, nvir), dtype=np.float64)
    x81 += lib.einsum("je,ji->ie", t1, x78)
    del x78
    x82 = np.zeros((nocc, nvir), dtype=np.float64)
    x82 += lib.einsum("ie->ie", x81)
    del x81
    rdm2_f_oooo -= lib.einsum("ik,jl->ijkl", delta_oo, x7)
    rdm2_f_oooo += lib.einsum("il,jk->ijkl", delta_oo, x7)
    rdm2_f_oooo += lib.einsum("kj,il->ijkl", delta_oo, x7)
    rdm2_f_oooo -= lib.einsum("lj,ik->ijkl", delta_oo, x7)
    del x7
    x8 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x8 += lib.einsum("fi,jkef->ijke", l1, t2)
    x47 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x47 += lib.einsum("ke,kijf->ijef", t1, x8)
    x50 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x50 += lib.einsum("ijef->ijef", x47)
    del x47
    rdm2_f_oovo -= lib.einsum("ikje->iejk", x8)
    rdm2_f_vooo += lib.einsum("ikje->eijk", x8)
    del x8
    x9 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x9 += lib.einsum("je,sei->sij", t1, lu11)
    x10 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x10 += lib.einsum("ske,sij->ijke", u11, x9)
    x20 += lib.einsum("ijke->ijke", x10)
    x34 -= lib.einsum("ijke->ijke", x10)
    del x10
    x16 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x16 += lib.einsum("sij->sij", x9)
    x60 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x60 += lib.einsum("je,sji->sie", t1, x9)
    del x9
    x61 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x61 -= lib.einsum("sie->sie", x60)
    del x60
    x11 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x11 += lib.einsum("tje,tsei->sij", u11, lu12)
    x12 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x12 += lib.einsum("sje,sik->ijke", u11, x11)
    x20 -= lib.einsum("ijke->ijke", x12)
    x34 += lib.einsum("ijke->ijke", x12)
    del x12
    rdm2_f_vooo -= lib.einsum("ijke->eijk", x34)
    rdm2_f_vooo += lib.einsum("ikje->eijk", x34)
    del x34
    x16 += lib.einsum("sij->sij", x11)
    x17 = np.zeros((nocc, nvir), dtype=np.float64)
    x17 += lib.einsum("sje,sji->ie", u11, x16)
    del x16
    x18 += lib.einsum("ie->ie", x17)
    x63 = np.zeros((nocc, nvir), dtype=np.float64)
    x63 += lib.einsum("ie->ie", x17)
    del x17
    x56 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x56 += lib.einsum("je,sji->sie", t1, x11)
    del x11
    x57 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x57 += lib.einsum("sif,sje->ijef", u11, x56)
    del x56
    x64 += lib.einsum("ijef->ijef", x57)
    del x57
    x14 = np.zeros((nocc, nvir), dtype=np.float64)
    x14 += lib.einsum("fj,ijef->ie", l1, t2)
    x18 -= lib.einsum("ie->ie", x14)
    x20 += lib.einsum("ji,ke->ijke", delta_oo, x18)
    rdm2_f_oovo -= lib.einsum("ijke->iejk", x20)
    rdm2_f_oovo += lib.einsum("ikje->iejk", x20)
    del x20
    rdm2_f_vooo += lib.einsum("ij,ke->eijk", delta_oo, x18)
    rdm2_f_vooo -= lib.einsum("ik,je->eijk", delta_oo, x18)
    del x18
    x63 -= lib.einsum("ie->ie", x14)
    del x14
    x64 -= lib.einsum("ie,jf->ijef", t1, x63)
    del x63
    x21 = np.zeros((nbos, nbos, nocc, nocc), dtype=np.float64)
    x21 += lib.einsum("je,stei->stij", t1, lu12)
    x22 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x22 += lib.einsum("tske,tsij->ijke", u12, x21)
    x27 += lib.einsum("ijke->ijke", x22) * 0.5
    x35 += lib.einsum("ijke->ijke", x22) * -0.5
    rdm2_f_vooo += lib.einsum("ijke->eijk", x35) * -1
    rdm2_f_vooo += lib.einsum("ikje->eijk", x35)
    del x35
    x67 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x67 += lib.einsum("ke,kijf->ijef", t1, x22)
    del x22
    x71 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x71 += lib.einsum("ijef->ijef", x67) * 0.5
    del x67
    x23 = np.zeros((nocc, nvir), dtype=np.float64)
    x23 += lib.einsum("tsje,tsji->ie", u12, x21)
    x26 += lib.einsum("ie->ie", x23)
    x27 += lib.einsum("ji,ke->ijke", delta_oo, x26) * 0.5
    rdm2_f_oovo += lib.einsum("ijke->iejk", x27) * -1
    rdm2_f_oovo += lib.einsum("ikje->iejk", x27)
    del x27
    rdm2_f_vooo += lib.einsum("ij,ke->eijk", delta_oo, x26) * 0.5
    rdm2_f_vooo += lib.einsum("ik,je->eijk", delta_oo, x26) * -0.5
    del x26
    x70 += lib.einsum("ie->ie", x23)
    del x23
    x71 += lib.einsum("ie,jf->ijef", t1, x70) * 0.5
    del x70
    x54 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x54 += lib.einsum("tje,tsji->sie", u11, x21)
    del x21
    x55 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x55 += lib.einsum("sje,sif->ijef", u11, x54)
    del x54
    x64 += lib.einsum("ijef->ijef", x55)
    del x55
    x30 = np.zeros((nocc, nvir), dtype=np.float64)
    x30 += lib.einsum("s,sie->ie", ls1, u11)
    x33 += lib.einsum("ie->ie", x30) * 2
    x80 += lib.einsum("ie->ie", x30) * 2
    x82 += lib.einsum("ie->ie", x30) * -1
    del x30
    x31 = np.zeros((nocc, nvir), dtype=np.float64)
    x31 += lib.einsum("ts,tsie->ie", ls2, u12)
    x33 += lib.einsum("ie->ie", x31)
    x80 += lib.einsum("ie->ie", x31)
    x82 += lib.einsum("ie->ie", x31) * -0.5
    del x31
    rdm2_f_vovo += lib.einsum("jf,ie->efij", t1, x82) * -1
    rdm2_f_vovo += lib.einsum("je,if->efij", t1, x82)
    del x82
    x33 += lib.einsum("ie->ie", t1) * 2
    rdm2_f_oovo += lib.einsum("ji,ke->iejk", delta_oo, x33) * 0.5
    rdm2_f_oovo += lib.einsum("ki,je->iejk", delta_oo, x33) * -0.5
    rdm2_f_vooo += lib.einsum("ki,je->eijk", delta_oo, x33) * 0.5
    rdm2_f_vooo += lib.einsum("ji,ke->eijk", delta_oo, x33) * -0.5
    del x33
    x36 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x36 += lib.einsum("tsei,tsjf->ijef", lu12, u12)
    x94 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x94 += lib.einsum("jf,jieg->iefg", t1, x36)
    x95 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x95 += lib.einsum("iefg->iefg", x94) * -0.5
    del x94
    rdm2_f_oovv += lib.einsum("ijfe->iejf", x36) * -0.5
    rdm2_f_ovvo += lib.einsum("ijfe->iefj", x36) * 0.5
    rdm2_f_voov += lib.einsum("ijfe->eijf", x36) * 0.5
    rdm2_f_vvoo += lib.einsum("ijfe->eifj", x36) * -0.5
    del x36
    x37 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x37 -= lib.einsum("geik,jkfg->ijef", l2, t2)
    x49 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x49 += lib.einsum("ikeg,kjgf->ijef", t2, x37)
    x50 += lib.einsum("ijef->ijef", x49)
    del x49
    x91 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x91 += lib.einsum("jf,jieg->iefg", t1, x37)
    x93 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x93 -= lib.einsum("iefg->iefg", x91)
    del x91
    rdm2_f_oovv -= lib.einsum("ijfe->iejf", x37)
    rdm2_f_ovvo += lib.einsum("ijfe->iefj", x37)
    rdm2_f_voov += lib.einsum("ijfe->eijf", x37)
    rdm2_f_vvoo -= lib.einsum("ijfe->eifj", x37)
    del x37
    x39 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x39 += lib.einsum("sei,sjf->ijef", lu11, u11)
    rdm2_f_oovv -= lib.einsum("ijfe->iejf", x39)
    rdm2_f_ovvo += lib.einsum("ijfe->iefj", x39)
    rdm2_f_voov += lib.einsum("ijfe->eijf", x39)
    rdm2_f_vvoo -= lib.einsum("ijfe->eifj", x39)
    del x39
    x40 = np.zeros((nvir, nvir), dtype=np.float64)
    x40 += lib.einsum("ei,if->ef", l1, t1)
    x44 = np.zeros((nvir, nvir), dtype=np.float64)
    x44 += lib.einsum("ef->ef", x40) * 2
    x92 = np.zeros((nvir, nvir), dtype=np.float64)
    x92 += lib.einsum("ef->ef", x40)
    del x40
    x41 = np.zeros((nvir, nvir), dtype=np.float64)
    x41 += lib.einsum("sei,sif->ef", lu11, u11)
    x44 += lib.einsum("ef->ef", x41) * 2
    x48 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x48 += lib.einsum("gf,ijeg->ijef", x41, t2)
    x50 -= lib.einsum("ijef->ijef", x48)
    del x48
    rdm2_f_vovo -= lib.einsum("jief->efij", x50)
    rdm2_f_vovo += lib.einsum("jife->efij", x50)
    del x50
    x92 += lib.einsum("ef->ef", x41)
    del x41
    x93 += lib.einsum("if,eg->iefg", t1, x92)
    del x92
    x42 = np.zeros((nvir, nvir), dtype=np.float64)
    x42 += lib.einsum("tsei,tsif->ef", lu12, u12)
    x44 += lib.einsum("ef->ef", x42)
    x51 = np.zeros((nvir, nvir), dtype=np.float64)
    x51 += lib.einsum("ef->ef", x42)
    del x42
    x43 = np.zeros((nvir, nvir), dtype=np.float64)
    x43 -= lib.einsum("geji,jifg->ef", l2, t2)
    x44 += lib.einsum("ef->ef", x43)
    rdm2_f_oovv += lib.einsum("ji,fe->iejf", delta_oo, x44) * 0.5
    rdm2_f_ovvo += lib.einsum("ji,fe->iefj", delta_oo, x44) * -0.5
    rdm2_f_voov += lib.einsum("ji,fe->eijf", delta_oo, x44) * -0.5
    rdm2_f_vvoo += lib.einsum("ji,fe->eifj", delta_oo, x44) * 0.5
    del x44
    x51 += lib.einsum("ef->ef", x43)
    del x43
    x52 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x52 += lib.einsum("ge,ijgf->ijef", x51, t2) * 0.5
    rdm2_f_vovo += lib.einsum("ijfe->efij", x52)
    rdm2_f_vovo += lib.einsum("ijef->efij", x52) * -1
    del x52
    x95 += lib.einsum("if,eg->iefg", t1, x51) * 0.5
    del x51
    rdm2_f_vovv += lib.einsum("igef->efig", x95)
    rdm2_f_vovv += lib.einsum("igfe->efig", x95) * -1
    rdm2_f_vvvo += lib.einsum("igef->efgi", x95) * -1
    rdm2_f_vvvo += lib.einsum("igfe->efgi", x95)
    del x95
    x45 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x45 += lib.einsum("st,tie->sie", ls2, u11)
    x46 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x46 += lib.einsum("sjf,sie->ijef", u11, x45)
    del x45
    rdm2_f_vovo -= lib.einsum("ijfe->efij", x46)
    rdm2_f_vovo += lib.einsum("jife->efij", x46)
    del x46
    x59 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x59 += lib.einsum("sfj,ijef->sie", lu11, t2)
    x61 += lib.einsum("sie->sie", x59)
    del x59
    x62 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x62 += lib.einsum("sjf,sie->ijef", u11, x61)
    del x61
    x64 += lib.einsum("ijef->ijef", x62)
    del x62
    rdm2_f_vovo += lib.einsum("ijef->efij", x64)
    rdm2_f_vovo -= lib.einsum("ijfe->efij", x64)
    rdm2_f_vovo -= lib.einsum("jief->efij", x64)
    rdm2_f_vovo += lib.einsum("jife->efij", x64)
    del x64
    x65 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x65 += lib.einsum("stfj,ijef->stie", lu12, t2)
    x66 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x66 += lib.einsum("tsjf,tsie->ijef", u12, x65)
    del x65
    x71 += lib.einsum("ijef->ijef", x66) * -0.5
    del x66
    rdm2_f_vovo += lib.einsum("ijef->efij", x71) * -1
    rdm2_f_vovo += lib.einsum("ijfe->efij", x71)
    rdm2_f_vovo += lib.einsum("jief->efij", x71)
    rdm2_f_vovo += lib.einsum("jife->efij", x71) * -1
    del x71
    x80 += lib.einsum("ie->ie", t1) * 2
    rdm2_f_vovo += lib.einsum("ie,jf->efij", t1, x80) * 0.5
    rdm2_f_vovo += lib.einsum("if,je->efij", t1, x80) * -0.5
    del x80
    x83 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x83 += lib.einsum("jg,efij->iefg", t1, l2)
    rdm2_f_ovvv = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    rdm2_f_ovvv -= lib.einsum("igfe->iefg", x83)
    rdm2_f_vvov = np.zeros((nvir, nocc, nvir, nvir), dtype=np.float64)
    rdm2_f_vvov += lib.einsum("igfe->eifg", x83)
    rdm2_f_vvvv = np.zeros((nvir, nvir, nvir, nvir), dtype=np.float64)
    rdm2_f_vvvv += lib.einsum("ie,ighf->efgh", t1, x83)
    del x83
    x86 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x86 += lib.einsum("ej,ijfg->iefg", l1, t2)
    rdm2_f_vovv -= lib.einsum("igfe->efig", x86)
    rdm2_f_vvvo += lib.einsum("igfe->efgi", x86)
    del x86
    x87 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x87 += lib.einsum("if,sei->sef", t1, lu11)
    x88 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x88 += lib.einsum("sig,sef->iefg", u11, x87)
    del x87
    x93 -= lib.einsum("iefg->iefg", x88)
    del x88
    x89 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x89 += lib.einsum("tif,stei->sef", u11, lu12)
    x90 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x90 += lib.einsum("sif,seg->iefg", u11, x89)
    del x89
    x93 += lib.einsum("iefg->iefg", x90)
    del x90
    rdm2_f_vovv += lib.einsum("igef->efig", x93)
    rdm2_f_vovv -= lib.einsum("igfe->efig", x93)
    rdm2_f_vvvo -= lib.einsum("igef->efgi", x93)
    rdm2_f_vvvo += lib.einsum("igfe->efgi", x93)
    del x93
    rdm2_f_oooo += lib.einsum("ki,lj->ijkl", delta_oo, delta_oo)
    rdm2_f_oooo -= lib.einsum("jk,li->ijkl", delta_oo, delta_oo)
    rdm2_f_ooov += lib.einsum("ki,ej->ijke", delta_oo, l1)
    rdm2_f_ooov -= lib.einsum("kj,ei->ijke", delta_oo, l1)
    rdm2_f_ovoo -= lib.einsum("ki,ej->ijek", delta_oo, l1)
    rdm2_f_ovoo += lib.einsum("kj,ei->ijek", delta_oo, l1)
    rdm2_f_ovov = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    rdm2_f_ovov += lib.einsum("feji->ijef", l2)
    rdm2_f_oovv -= lib.einsum("fi,je->iejf", l1, t1)
    rdm2_f_ovvo += lib.einsum("fi,je->iefj", l1, t1)
    rdm2_f_voov += lib.einsum("fi,je->eijf", l1, t1)
    rdm2_f_vvoo -= lib.einsum("fi,je->eifj", l1, t1)
    rdm2_f_vovo += lib.einsum("jife->efij", t2)
    rdm2_f_vvvv += lib.einsum("hgji,jife->efgh", l2, t2) * 0.5

    rdm2_f = common.pack_2e(rdm2_f_oooo, rdm2_f_ooov, rdm2_f_oovo, rdm2_f_ovoo, rdm2_f_vooo, rdm2_f_oovv, rdm2_f_ovov, rdm2_f_ovvo, rdm2_f_voov, rdm2_f_vovo, rdm2_f_vvoo, rdm2_f_ovvv, rdm2_f_vovv, rdm2_f_vvov, rdm2_f_vvvo, rdm2_f_vvvv)

    return rdm2_f

def make_sing_b_dm(f=None, v=None, w=None, g=None, G=None, nocc=None, nvir=None, nbos=None, t1=None, t2=None, s1=None, s2=None, u11=None, u12=None, l1=None, l2=None, ls1=None, ls2=None, lu11=None, lu12=None, **kwargs):
    # Get boson coupling creation array:
    gc = SimpleNamespace(
        boo=g.boo.transpose(0, 2, 1),
        bov=g.bvo.transpose(0, 2, 1),
        bvo=g.bov.transpose(0, 2, 1),
        bvv=g.bvv.transpose(0, 2, 1),
    )

    # Single boson DM
    dm_b_cre = np.zeros((nbos), dtype=np.float64)
    dm_b_cre += lib.einsum("u->u", ls1)
    dm_b_des = np.zeros((nbos), dtype=np.float64)
    dm_b_des += lib.einsum("ai,uia->u", l1, u11)
    dm_b_des += lib.einsum("v,uv->u", ls1, s2)
    dm_b_des += lib.einsum("u->u", s1)
    dm_b_des += lib.einsum("vai,uvia->u", lu11, u12)

    dm_b = np.array([dm_b_cre, dm_b_des])

    return dm_b

def make_rdm1_b(f=None, v=None, w=None, g=None, G=None, nocc=None, nvir=None, nbos=None, t1=None, t2=None, s1=None, s2=None, u11=None, u12=None, l1=None, l2=None, ls1=None, ls2=None, lu11=None, lu12=None, **kwargs):
    # Get boson coupling creation array:
    gc = SimpleNamespace(
        boo=g.boo.transpose(0, 2, 1),
        bov=g.bvo.transpose(0, 2, 1),
        bvo=g.bov.transpose(0, 2, 1),
        bvv=g.bvv.transpose(0, 2, 1),
    )

    # Boson 1RDM
    rdm1_b = np.zeros((nbos, nbos), dtype=np.float64)
    rdm1_b += lib.einsum("vxai,wxia->vw", lu12, u12)
    rdm1_b += lib.einsum("vai,wia->vw", lu11, u11)
    rdm1_b += lib.einsum("vx,wx->vw", ls2, s2)
    rdm1_b += lib.einsum("v,w->vw", ls1, s1)

    return rdm1_b

def make_eb_coup_rdm(f=None, v=None, w=None, g=None, G=None, nocc=None, nvir=None, nbos=None, t1=None, t2=None, s1=None, s2=None, u11=None, u12=None, l1=None, l2=None, ls1=None, ls2=None, lu11=None, lu12=None, **kwargs):
    # Get boson coupling creation array:
    gc = SimpleNamespace(
        boo=g.boo.transpose(0, 2, 1),
        bov=g.bvo.transpose(0, 2, 1),
        bvo=g.bov.transpose(0, 2, 1),
        bvv=g.bvv.transpose(0, 2, 1),
    )

    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    # Boson-fermion coupling RDM
    x0 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x0 += lib.einsum("jd,udi->uij", t1, lu11)
    x3 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x3 += lib.einsum("uij->uij", x0)
    x30 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x30 += lib.einsum("uij->uij", x0)
    rdm_eb_cre_oo = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    rdm_eb_cre_oo -= lib.einsum("uji->uij", x0)
    del x0
    x1 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x1 += lib.einsum("vjd,uvdi->uij", u11, lu12)
    x3 += lib.einsum("uij->uij", x1)
    rdm_eb_cre_ov = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    rdm_eb_cre_ov -= lib.einsum("jd,uji->uid", t1, x3)
    rdm_eb_des_ov = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    rdm_eb_des_ov -= lib.einsum("vji,vujd->uid", x3, u12)
    del x3
    x5 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x5 += lib.einsum("uv,vij->uij", s2, x1)
    x27 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x27 += lib.einsum("uij->uij", x5)
    rdm_eb_des_oo = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    rdm_eb_des_oo -= lib.einsum("uji->uij", x5)
    del x5
    x30 += lib.einsum("uij->uij", x1)
    x32 = np.zeros((nocc, nvir), dtype=np.float64)
    x32 += lib.einsum("ujd,uji->id", u11, x30)
    del x30
    rdm_eb_cre_oo -= lib.einsum("uji->uij", x1)
    del x1
    x2 = np.zeros((nbos, nbos, nocc, nocc), dtype=np.float64)
    x2 += lib.einsum("jd,uvdi->uvij", t1, lu12)
    x32 += lib.einsum("vujd,vuji->id", u12, x2) * 0.5
    rdm_eb_cre_ov -= lib.einsum("vjd,uvji->uid", u11, x2)
    del x2
    x4 = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    x4 += lib.einsum("vie,uvdi->ude", u11, lu12)
    rdm_eb_cre_vv = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    rdm_eb_cre_vv += lib.einsum("ude->ude", x4)
    rdm_eb_des_vv = np.zeros((nbos, nvir, nvir), dtype=np.float64)
    rdm_eb_des_vv += lib.einsum("uv,vde->ude", s2, x4)
    x6 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x6 += lib.einsum("vdi,uvjd->uij", lu11, u12)
    x27 += lib.einsum("uij->uij", x6)
    rdm_eb_des_oo -= lib.einsum("uji->uij", x6)
    del x6
    x7 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x7 += lib.einsum("uv,vdi->uid", s2, lu11)
    x9 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x9 += lib.einsum("uid->uid", x7)
    rdm_eb_des_vo = np.zeros((nbos, nvir, nocc), dtype=np.float64)
    rdm_eb_des_vo += lib.einsum("uid->udi", x7)
    del x7
    x8 = np.zeros((nbos, nocc, nvir), dtype=np.float64)
    x8 -= lib.einsum("uje,edij->uid", u11, l2)
    x9 += lib.einsum("uid->uid", x8)
    x10 = np.zeros((nbos, nocc, nocc), dtype=np.float64)
    x10 += lib.einsum("id,ujd->uij", t1, x9)
    x27 += lib.einsum("uji->uij", x10)
    rdm_eb_des_ov -= lib.einsum("jd,uji->uid", t1, x27)
    del x27
    rdm_eb_des_oo -= lib.einsum("uij->uij", x10)
    del x10
    rdm_eb_des_ov += lib.einsum("uje,jied->uid", x9, t2)
    rdm_eb_des_vv += lib.einsum("ie,uid->ude", t1, x9)
    del x9
    rdm_eb_des_vo += lib.einsum("uid->udi", x8)
    del x8
    x11 = np.zeros((nocc, nocc), dtype=np.float64)
    x11 += lib.einsum("di,jd->ij", l1, t1)
    x15 = np.zeros((nocc, nocc), dtype=np.float64)
    x15 += lib.einsum("ij->ij", x11) * 2
    x26 = np.zeros((nocc, nocc), dtype=np.float64)
    x26 += lib.einsum("ij->ij", x11) * 2
    x31 = np.zeros((nocc, nocc), dtype=np.float64)
    x31 += lib.einsum("ij->ij", x11) * 2
    del x11
    x12 = np.zeros((nocc, nocc), dtype=np.float64)
    x12 += lib.einsum("udi,ujd->ij", lu11, u11)
    x15 += lib.einsum("ij->ij", x12) * 2
    x26 += lib.einsum("ij->ij", x12) * 2
    x31 += lib.einsum("ij->ij", x12) * 2
    del x12
    x13 = np.zeros((nocc, nocc), dtype=np.float64)
    x13 += lib.einsum("vudi,vujd->ij", lu12, u12)
    x15 += lib.einsum("ij->ij", x13)
    x26 += lib.einsum("ij->ij", x13)
    x31 += lib.einsum("ij->ij", x13)
    del x13
    x14 = np.zeros((nocc, nocc), dtype=np.float64)
    x14 += lib.einsum("edik,jked->ij", l2, t2)
    x15 += lib.einsum("ij->ij", x14)
    x26 += lib.einsum("ij->ij", x14)
    rdm_eb_des_ov += lib.einsum("ji,ujd->uid", x26, u11) * -0.5
    del x26
    x31 += lib.einsum("ij->ij", x14)
    del x14
    x32 += lib.einsum("jd,ji->id", t1, x31) * 0.5
    del x31
    x15 += lib.einsum("ji->ij", delta_oo) * -2
    rdm_eb_des_oo += lib.einsum("u,ji->uij", s1, x15) * -0.5
    del x15
    x16 = np.zeros((nbos), dtype=np.float64)
    x16 += lib.einsum("v,uv->u", ls1, s2)
    x19 = np.zeros((nbos), dtype=np.float64)
    x19 += lib.einsum("u->u", x16)
    del x16
    x17 = np.zeros((nbos), dtype=np.float64)
    x17 += lib.einsum("di,uid->u", l1, u11)
    x19 += lib.einsum("u->u", x17)
    del x17
    x18 = np.zeros((nbos), dtype=np.float64)
    x18 += lib.einsum("vdi,uvid->u", lu11, u12)
    x19 += lib.einsum("u->u", x18)
    del x18
    rdm_eb_des_oo += lib.einsum("u,ji->uij", x19, delta_oo)
    rdm_eb_des_ov += lib.einsum("u,id->uid", x19, t1)
    del x19
    x20 = np.zeros((nbos, nbos, nbos), dtype=np.float64)
    x20 += lib.einsum("wid,uvdi->uvw", u11, lu12)
    rdm_eb_des_ov += lib.einsum("wvu,wvid->uid", x20, u12) * 0.5
    del x20
    x21 = np.zeros((nvir, nvir), dtype=np.float64)
    x21 += lib.einsum("di,ie->de", l1, t1)
    x25 = np.zeros((nvir, nvir), dtype=np.float64)
    x25 += lib.einsum("de->de", x21)
    x34 = np.zeros((nvir, nvir), dtype=np.float64)
    x34 += lib.einsum("de->de", x21) * 2
    del x21
    x22 = np.zeros((nvir, nvir), dtype=np.float64)
    x22 += lib.einsum("udi,uie->de", lu11, u11)
    x25 += lib.einsum("de->de", x22)
    x34 += lib.einsum("de->de", x22) * 2
    del x22
    x23 = np.zeros((nvir, nvir), dtype=np.float64)
    x23 += lib.einsum("vudi,vuie->de", lu12, u12)
    x25 += lib.einsum("de->de", x23) * 0.5
    x34 += lib.einsum("de->de", x23)
    del x23
    x24 = np.zeros((nvir, nvir), dtype=np.float64)
    x24 -= lib.einsum("fdji,jief->de", l2, t2)
    x25 += lib.einsum("de->de", x24) * 0.5
    rdm_eb_des_ov += lib.einsum("ed,uie->uid", x25, u11) * -1
    del x25
    x34 += lib.einsum("de->de", x24)
    del x24
    rdm_eb_des_vv += lib.einsum("u,de->ude", s1, x34) * 0.5
    del x34
    x28 = np.zeros((nbos, nbos), dtype=np.float64)
    x28 += lib.einsum("uw,vw->uv", ls2, s2)
    x28 += lib.einsum("udi,vid->uv", lu11, u11)
    x28 += lib.einsum("wudi,vwid->uv", lu12, u12)
    rdm_eb_des_ov += lib.einsum("vu,vid->uid", x28, u11)
    del x28
    x29 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x29 += lib.einsum("ke,deij->ijkd", t1, l2)
    x32 += lib.einsum("kjde,kjie->id", t2, x29) * -0.5000000000000003
    del x29
    x32 += lib.einsum("id->id", t1) * -1
    x32 += lib.einsum("u,uid->id", ls1, u11) * -1
    x32 += lib.einsum("vu,vuid->id", ls2, u12) * -0.5
    x32 += lib.einsum("ej,ijde->id", l1, t2) * -1
    rdm_eb_des_ov += lib.einsum("u,id->uid", s1, x32) * -1
    del x32
    x33 = np.zeros((nbos, nbos, nocc, nvir), dtype=np.float64)
    x33 += lib.einsum("vuid->uvid", u12)
    x33 += lib.einsum("vu,id->uvid", s2, t1)
    rdm_eb_des_ov -= lib.einsum("ved,vuie->uid", x4, x33)
    del x33
    del x4
    rdm_eb_cre_oo += lib.einsum("u,ji->uij", ls1, delta_oo)
    rdm_eb_cre_ov += lib.einsum("uej,ijde->uid", lu11, t2)
    rdm_eb_cre_ov += lib.einsum("u,id->uid", ls1, t1)
    rdm_eb_cre_ov += lib.einsum("uv,vid->uid", ls2, u11)
    rdm_eb_cre_vo = np.zeros((nbos, nvir, nocc), dtype=np.float64)
    rdm_eb_cre_vo += lib.einsum("udi->udi", lu11)
    rdm_eb_cre_vv += lib.einsum("ie,udi->ude", t1, lu11)
    rdm_eb_des_oo -= lib.einsum("dj,uid->uij", l1, u11)
    rdm_eb_des_ov += lib.einsum("uid->uid", u11)
    rdm_eb_des_ov += lib.einsum("v,uvid->uid", ls1, u12)
    rdm_eb_des_vo += lib.einsum("u,di->udi", s1, l1)
    rdm_eb_des_vv += lib.einsum("vdi,uvie->ude", lu11, u12)
    rdm_eb_des_vv += lib.einsum("di,uie->ude", l1, u11)

    rdm_eb = np.array([
            np.block([[rdm_eb_cre_oo, rdm_eb_cre_ov], [rdm_eb_cre_vo, rdm_eb_cre_vv]]),
            np.block([[rdm_eb_des_oo, rdm_eb_des_ov], [rdm_eb_des_vo, rdm_eb_des_vv]]),
    ])

    return rdm_eb


