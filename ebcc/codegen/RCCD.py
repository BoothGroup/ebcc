"""
Code generated by `albert`:
https://github.com/obackhouse/albert

  * date: 2024-07-18T20:23:43.462621
  * python version: 3.10.12 (main, Mar 22 2024, 16:50:05) [GCC 11.4.0]
  * albert version: 0.0.0
  * caller: /home/ollie/git/albert/albert/codegen/einsum.py
  * node: ollie-desktop
  * system: Linux
  * processor: x86_64
  * release: 6.5.0-44-generic
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, direct_sum, Namespace


def energy(t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-07-18T20:23:43.617209.

    Parameters
    ----------
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    e_cc : float
        Coupled cluster energy.
    """

    e_cc = einsum(v.ovov, (0, 1, 2, 3), t2, (0, 2, 1, 3), (), optimize=True) * 2
    e_cc += einsum(v.ovov, (0, 1, 2, 3), t2, (0, 2, 3, 1), (), optimize=True) * -1

    return e_cc

def update_amps(f=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-07-18T20:23:45.808392.

    Parameters
    ----------
    f : array
        Fock matrix.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    t2new : array
        Updated T2 residuals.
    """

    tmp6 = v.ovov.transpose((2, 0, 1, 3)).copy() * -0.5
    tmp6 += v.ovov.transpose((2, 0, 3, 1))
    tmp3 = v.ovov.transpose((2, 0, 1, 3)).copy() * 2
    tmp3 += v.ovov.transpose((2, 0, 3, 1)) * -1
    tmp9 = einsum(tmp6, (0, 1, 2, 3), t2, (0, 4, 2, 3), (4, 1), optimize=True) * 2
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp6, (0, 1, 4, 3), (2, 4), optimize=True)
    del tmp6
    tmp0 = einsum(t2, (0, 1, 2, 3), v.ovov, (4, 5, 1, 2), (0, 4, 3, 5), optimize=True)
    t2new = tmp0.transpose((1, 0, 3, 2)).copy() * -1
    tmp4 = einsum(t2, (0, 1, 2, 3), tmp3, (0, 4, 5, 2), (1, 4, 3, 5), optimize=True)
    del tmp3
    tmp10 = einsum(t2, (0, 1, 2, 3), tmp9, (4, 0), (1, 4, 2, 3), optimize=True)
    del tmp9
    tmp8 = einsum(t2, (0, 1, 2, 3), tmp7, (4, 2), (0, 1, 3, 4), optimize=True) * 2
    del tmp7
    tmp14 = v.ovov.transpose((2, 0, 3, 1)).copy() * -1
    tmp14 += tmp0
    del tmp0
    t2new += einsum(t2, (0, 1, 2, 3), tmp14, (4, 0, 5, 3), (1, 4, 2, 5), optimize=True)
    del tmp14
    tmp5 = einsum(t2, (0, 1, 2, 3), tmp4, (4, 0, 5, 3), (1, 4, 2, 5), optimize=True)
    t2new += tmp5 * -1
    t2new += tmp5.transpose((1, 0, 3, 2)) * -1
    del tmp5
    tmp15 = v.oovv.transpose((1, 0, 3, 2)).copy() * -1
    tmp15 += einsum(t2, (0, 1, 2, 3), v.ovov, (1, 4, 5, 2), (0, 5, 3, 4), optimize=True)
    t2new += einsum(t2, (0, 1, 2, 3), tmp15, (4, 0, 5, 3), (1, 4, 5, 2), optimize=True)
    del tmp15
    tmp2 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4), optimize=True)
    t2new += tmp2.transpose((1, 0, 2, 3))
    t2new += tmp2.transpose((0, 1, 3, 2))
    del tmp2
    tmp11 = tmp8.transpose((1, 0, 2, 3)).copy()
    del tmp8
    tmp11 += tmp10.transpose((0, 1, 3, 2))
    del tmp10
    t2new += tmp11.transpose((1, 0, 3, 2)) * -1
    t2new += tmp11 * -1
    del tmp11
    tmp1 = einsum(f.oo, (0, 1), t2, (2, 1, 3, 4), (0, 2, 3, 4), optimize=True)
    t2new += tmp1.transpose((1, 0, 2, 3)) * -1
    t2new += tmp1.transpose((0, 1, 3, 2)) * -1
    del tmp1
    tmp13 = v.oooo.transpose((2, 3, 1, 0)).copy()
    tmp13 += einsum(t2, (0, 1, 2, 3), v.ovov, (4, 2, 5, 3), (5, 1, 0, 4), optimize=True)
    t2new += einsum(tmp13, (0, 1, 2, 3), t2, (0, 3, 4, 5), (2, 1, 5, 4), optimize=True)
    del tmp13
    tmp12 = v.ovov.transpose((2, 0, 3, 1)).copy() * 2
    tmp12 += v.oovv.transpose((1, 0, 3, 2)) * -1
    tmp12 += tmp4 * 2
    del tmp4
    t2new += einsum(t2, (0, 1, 2, 3), tmp12, (4, 0, 5, 2), (4, 1, 5, 3), optimize=True)
    del tmp12
    t2new += v.ovov.transpose((2, 0, 3, 1))
    t2new += einsum(t2, (0, 1, 2, 3), v.vvvv, (4, 3, 2, 5), (1, 0, 4, 5), optimize=True)
    t2new += einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 5, 3), (0, 4, 2, 5), optimize=True) * -1
    t2new += einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 3, 5), (0, 4, 5, 2), optimize=True) * -1
    t2new += einsum(t2, (0, 1, 2, 3), v.ovov, (4, 5, 1, 3), (0, 4, 2, 5), optimize=True) * 2

    return {f"t2new": t2new}

def update_lams(f=None, l2=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-07-18T20:23:49.488980.

    Parameters
    ----------
    f : array
        Fock matrix.
    l2 : array
        L2 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    l2new : array
        Updated L2 residuals.
    """

    tmp10 = l2.transpose((3, 2, 0, 1)).copy() * 2
    tmp10 += l2.transpose((3, 2, 1, 0)) * -1
    tmp22 = t2.transpose((1, 0, 2, 3)).copy() * 2
    tmp22 += t2.transpose((1, 0, 3, 2)) * -1
    tmp19 = t2.transpose((1, 0, 2, 3)).copy() * -1
    tmp19 += t2.transpose((1, 0, 3, 2)) * 2
    tmp4 = einsum(t2, (0, 1, 2, 3), v.ovov, (4, 3, 0, 5), (1, 4, 2, 5), optimize=True)
    tmp26 = t2.transpose((1, 0, 2, 3)).copy() * -0.5
    tmp26 += t2.transpose((1, 0, 3, 2))
    tmp15 = einsum(t2, (0, 1, 2, 3), l2, (2, 4, 5, 1), (5, 0, 4, 3), optimize=True)
    tmp9 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 5, 1), (5, 0, 4, 3), optimize=True)
    tmp11 = einsum(t2, (0, 1, 2, 3), tmp10, (0, 4, 5, 2), (1, 4, 3, 5), optimize=True)
    del tmp10
    tmp23 = einsum(v.ovov, (0, 1, 2, 3), tmp22, (0, 4, 3, 1), (2, 4), optimize=True)
    del tmp22
    tmp20 = einsum(tmp19, (0, 1, 2, 3), v.ovov, (0, 4, 1, 3), (4, 2), optimize=True) * 0.5
    del tmp19
    tmp5 = v.oovv.transpose((1, 0, 3, 2)).copy() * -1
    tmp5 += tmp4
    del tmp4
    tmp27 = einsum(l2, (0, 1, 2, 3), tmp26, (2, 3, 4, 1), (0, 4), optimize=True) * 2
    tmp29 = einsum(tmp26, (0, 1, 2, 3), l2, (2, 3, 0, 4), (4, 1), optimize=True) * 2
    del tmp26
    tmp16 = tmp15.copy()
    del tmp15
    tmp16 += l2.transpose((3, 2, 0, 1)) * -1
    tmp16 += l2.transpose((3, 2, 1, 0)) * 2
    tmp13 = v.ovov.transpose((2, 0, 1, 3)).copy() * 2
    tmp13 += v.ovov.transpose((2, 0, 3, 1)) * -1
    tmp12 = tmp9.copy()
    del tmp9
    tmp12 += tmp11.transpose((1, 0, 3, 2)) * -1
    del tmp11
    tmp24 = einsum(tmp23, (0, 1), l2, (2, 3, 1, 4), (4, 0, 2, 3), optimize=True)
    del tmp23
    tmp21 = einsum(l2, (0, 1, 2, 3), tmp20, (4, 0), (2, 3, 1, 4), optimize=True) * 2
    del tmp20
    tmp6 = einsum(tmp5, (0, 1, 2, 3), l2, (4, 2, 0, 5), (5, 1, 4, 3), optimize=True)
    del tmp5
    tmp3 = einsum(f.vv, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2), optimize=True)
    tmp28 = einsum(v.ovov, (0, 1, 2, 3), tmp27, (4, 1), (0, 2, 3, 4), optimize=True)
    del tmp27
    tmp30 = einsum(v.ovov, (0, 1, 2, 3), tmp29, (4, 0), (2, 4, 1, 3), optimize=True)
    del tmp29
    tmp17 = einsum(tmp16, (0, 1, 2, 3), v.ovov, (1, 3, 4, 5), (4, 0, 5, 2), optimize=True)
    del tmp16
    tmp14 = einsum(tmp13, (0, 1, 2, 3), tmp12, (4, 0, 5, 3), (4, 1, 5, 2), optimize=True)
    del tmp13, tmp12
    tmp8 = einsum(v.oovv, (0, 1, 2, 3), l2, (4, 3, 5, 1), (5, 0, 4, 2), optimize=True)
    tmp25 = tmp21.transpose((1, 0, 2, 3)).copy()
    del tmp21
    tmp25 += tmp24.transpose((0, 1, 3, 2))
    del tmp24
    l2new = tmp25.transpose((3, 2, 1, 0)).copy() * -1
    l2new += tmp25.transpose((2, 3, 0, 1)) * -1
    del tmp25
    tmp7 = tmp3.copy()
    del tmp3
    tmp7 += tmp6
    del tmp6
    l2new += tmp7.transpose((2, 3, 1, 0))
    l2new += tmp7.transpose((3, 2, 0, 1))
    del tmp7
    tmp2 = einsum(f.oo, (0, 1), l2, (2, 3, 4, 1), (0, 4, 2, 3), optimize=True)
    l2new += tmp2.transpose((2, 3, 1, 0)) * -1
    l2new += tmp2.transpose((3, 2, 0, 1)) * -1
    del tmp2
    tmp0 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 5, 1, 3), (4, 5, 0, 2), optimize=True)
    l2new += einsum(l2, (0, 1, 2, 3), tmp0, (2, 3, 4, 5), (0, 1, 4, 5), optimize=True)
    del tmp0
    tmp1 = einsum(l2, (0, 1, 2, 3), t2, (4, 5, 0, 1), (2, 3, 4, 5), optimize=True)
    l2new += einsum(tmp1, (0, 1, 2, 3), v.ovov, (2, 4, 3, 5), (4, 5, 0, 1), optimize=True)
    del tmp1
    tmp31 = tmp28.transpose((1, 0, 3, 2)).copy()
    del tmp28
    tmp31 += tmp30.transpose((1, 0, 3, 2))
    del tmp30
    l2new += tmp31.transpose((2, 3, 1, 0)) * -1
    l2new += tmp31.transpose((3, 2, 0, 1)) * -1
    del tmp31
    tmp18 = tmp8.copy()
    del tmp8
    tmp18 += tmp14
    del tmp14
    tmp18 += tmp17.transpose((1, 0, 3, 2)) * -1
    del tmp17
    l2new += tmp18.transpose((3, 2, 1, 0)) * -1
    l2new += tmp18.transpose((2, 3, 0, 1)) * -1
    del tmp18
    l2new += v.ovov.transpose((3, 1, 2, 0))
    l2new += einsum(l2, (0, 1, 2, 3), v.vvvv, (4, 1, 0, 5), (4, 5, 3, 2), optimize=True)
    l2new += einsum(v.oooo, (0, 1, 2, 3), l2, (4, 5, 1, 2), (5, 4, 3, 0), optimize=True)

    return {f"l2new": l2new}

def make_rdm1_f(l2=None, t2=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-07-18T20:23:49.789244.

    Parameters
    ----------
    l2 : array
        L2 amplitudes.
    t2 : array
        T2 amplitudes.

    Returns
    -------
    rdm1 : array
        One-particle reduced density matrix.
    """

    rdm1 = Namespace()
    delta = Namespace(
        oo=np.eye(t2.shape[0]),
        vv=np.eye(t2.shape[-1]),
    )
    tmp0 = t2.transpose((1, 0, 2, 3)).copy() * -0.5
    tmp0 += t2.transpose((1, 0, 3, 2))
    rdm1.vv = einsum(l2, (0, 1, 2, 3), tmp0, (2, 3, 4, 1), (0, 4), optimize=True) * 4
    rdm1.oo = einsum(l2, (0, 1, 2, 3), tmp0, (2, 4, 0, 1), (4, 3), optimize=True) * -4
    del tmp0
    rdm1.oo += delta.oo.transpose((1, 0)) * 2
    del delta
    rdm1.ov = np.zeros((t2.shape[0], t2.shape[-1]))
    rdm1.vo = np.zeros((t2.shape[-1], t2.shape[0]))
    rdm1 = np.block([[rdm1.oo, rdm1.ov], [rdm1.vo, rdm1.vv]])

    return rdm1

def make_rdm2_f(l2=None, t2=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-07-18T20:24:00.844357.

    Parameters
    ----------
    l2 : array
        L2 amplitudes.
    t2 : array
        T2 amplitudes.

    Returns
    -------
    rdm2 : array
        Two-particle reduced density matrix.
    """

    rdm2 = Namespace()
    delta = Namespace(
        oo=np.eye(t2.shape[0]),
        vv=np.eye(t2.shape[-1]),
    )
    tmp0 = t2.transpose((1, 0, 2, 3)).copy() * -0.5
    tmp0 += t2.transpose((1, 0, 3, 2))
    tmp13 = l2.transpose((3, 2, 0, 1)).copy() * -1
    tmp13 += l2.transpose((3, 2, 1, 0)) * 2
    tmp6 = l2.transpose((3, 2, 0, 1)).copy()
    tmp6 += l2.transpose((3, 2, 1, 0)) * -1
    tmp3 = l2.transpose((3, 2, 0, 1)).copy() * 2
    tmp3 += l2.transpose((3, 2, 1, 0)) * -1
    tmp1 = einsum(tmp0, (0, 1, 2, 3), l2, (2, 3, 0, 4), (4, 1), optimize=True) * 2
    del tmp0
    rdm2.oooo = einsum(tmp1, (0, 1), delta.oo, (2, 3), (2, 1, 3, 0), optimize=True) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (1, 3, 2, 0), optimize=True)
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (0, 3, 2, 1), optimize=True)
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (3, 1, 2, 0), optimize=True) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (2, 1, 3, 0), optimize=True) * -1
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (3, 1, 2, 0), optimize=True) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (2, 1, 3, 0), optimize=True) * -1
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (3, 1, 2, 0), optimize=True) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (2, 1, 3, 0), optimize=True) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), delta.oo, (2, 3), (1, 3, 2, 0), optimize=True)
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (0, 3, 2, 1), optimize=True)
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp1, (2, 3), (3, 1, 2, 0), optimize=True) * -1
    tmp14 = einsum(t2, (0, 1, 2, 3), tmp13, (0, 1, 4, 3), (2, 4), optimize=True) * 0.5
    rdm2.ovvo = einsum(delta.oo, (0, 1), tmp14, (2, 3), (1, 3, 2, 0), optimize=True) * -2
    rdm2.ovvo += einsum(delta.oo, (0, 1), tmp14, (2, 3), (1, 3, 2, 0), optimize=True) * -2
    rdm2.ovov = einsum(delta.oo, (0, 1), tmp14, (2, 3), (1, 3, 0, 2), optimize=True) * 2
    rdm2.ovov += einsum(delta.oo, (0, 1), tmp14, (2, 3), (1, 3, 0, 2), optimize=True) * 2
    rdm2.ovov += einsum(delta.oo, (0, 1), tmp14, (2, 3), (1, 3, 0, 2), optimize=True) * 2
    rdm2.ovov += einsum(delta.oo, (0, 1), tmp14, (2, 3), (1, 3, 0, 2), optimize=True) * 2
    tmp7 = einsum(tmp6, (0, 1, 2, 3), t2, (0, 4, 5, 3), (4, 1, 5, 2), optimize=True)
    del tmp6
    rdm2.ovvo += tmp7.transpose((0, 3, 2, 1)) * -1
    rdm2.ovvo += tmp7.transpose((0, 3, 2, 1)) * -1
    tmp4 = einsum(t2, (0, 1, 2, 3), tmp3, (0, 4, 5, 2), (1, 4, 3, 5), optimize=True)
    rdm2.vovo = tmp4.transpose((3, 0, 2, 1)).copy() * -1
    rdm2.vovo += tmp4.transpose((3, 0, 2, 1)) * -1
    rdm2.voov = tmp4.transpose((3, 0, 1, 2)).copy()
    rdm2.voov += tmp4.transpose((3, 0, 1, 2))
    rdm2.ovvo += tmp4.transpose((0, 3, 2, 1))
    rdm2.ovvo += tmp4.transpose((0, 3, 2, 1))
    rdm2.ovvo += tmp4.transpose((0, 3, 2, 1))
    rdm2.ovvo += tmp4.transpose((0, 3, 2, 1))
    tmp27 = l2.transpose((3, 2, 0, 1)).copy() * -1
    tmp27 += l2.transpose((3, 2, 1, 0))
    tmp24 = t2.transpose((1, 0, 2, 3)).copy() * 2
    tmp24 += t2.transpose((1, 0, 3, 2)) * -1
    tmp22 = t2.transpose((1, 0, 2, 3)).copy()
    tmp22 += t2.transpose((1, 0, 3, 2)) * -1
    tmp16 = einsum(t2, (0, 1, 2, 3), tmp1, (0, 4), (1, 4, 2, 3), optimize=True)
    del tmp1
    tmp15 = einsum(t2, (0, 1, 2, 3), tmp14, (4, 2), (0, 1, 3, 4), optimize=True) * 2
    del tmp14
    tmp8 = einsum(tmp7, (0, 1, 2, 3), t2, (1, 4, 5, 3), (4, 0, 5, 2), optimize=True)
    del tmp7
    tmp5 = einsum(t2, (0, 1, 2, 3), tmp4, (4, 0, 5, 2), (1, 4, 3, 5), optimize=True)
    del tmp4
    rdm2.oovv = tmp5.transpose((1, 0, 3, 2)).copy() * 2
    rdm2.oovv += tmp5.transpose((1, 0, 3, 2)) * 2
    tmp10 = einsum(t2, (0, 1, 2, 3), tmp3, (0, 4, 5, 3), (1, 4, 2, 5), optimize=True)
    del tmp3
    tmp18 = einsum(t2, (0, 1, 2, 3), l2, (4, 2, 5, 1), (5, 0, 4, 3), optimize=True)
    rdm2.voov += tmp18.transpose((2, 1, 0, 3)) * -1
    rdm2.voov += tmp18.transpose((2, 1, 0, 3)) * -1
    rdm2.ovvo += tmp18.transpose((1, 2, 3, 0)) * -1
    rdm2.ovvo += tmp18.transpose((1, 2, 3, 0)) * -1
    tmp20 = einsum(t2, (0, 1, 2, 3), l2, (2, 4, 5, 1), (5, 0, 4, 3), optimize=True)
    rdm2.vovo += tmp20.transpose((2, 1, 3, 0)) * -1
    rdm2.vovo += tmp20.transpose((2, 1, 3, 0)) * -1
    rdm2.ovov += tmp20.transpose((1, 2, 0, 3)) * -1
    rdm2.ovov += tmp20.transpose((1, 2, 0, 3)) * -1
    tmp2 = einsum(l2, (0, 1, 2, 3), t2, (4, 5, 0, 1), (2, 3, 4, 5), optimize=True)
    rdm2.oooo += tmp2.transpose((3, 2, 1, 0))
    rdm2.oooo += tmp2.transpose((2, 3, 1, 0)) * -1
    rdm2.oooo += tmp2.transpose((3, 2, 1, 0))
    rdm2.oooo += tmp2.transpose((3, 2, 1, 0))
    rdm2.oooo += tmp2.transpose((3, 2, 1, 0))
    rdm2.oooo += tmp2.transpose((2, 3, 1, 0)) * -1
    tmp29 = einsum(t2, (0, 1, 2, 3), l2, (4, 5, 0, 1), (4, 5, 2, 3), optimize=True)
    rdm2.vvvv = tmp29.transpose((1, 0, 3, 2)).copy()
    rdm2.vvvv += tmp29.transpose((1, 0, 2, 3)) * -1
    rdm2.vvvv += tmp29.transpose((1, 0, 3, 2))
    rdm2.vvvv += tmp29.transpose((1, 0, 3, 2))
    rdm2.vvvv += tmp29.transpose((1, 0, 3, 2))
    rdm2.vvvv += tmp29.transpose((1, 0, 2, 3)) * -1
    del tmp29
    tmp28 = einsum(t2, (0, 1, 2, 3), tmp27, (0, 4, 5, 3), (1, 4, 2, 5), optimize=True)
    del tmp27
    rdm2.vovo += tmp28.transpose((3, 0, 2, 1)) * -1
    rdm2.vovo += tmp28.transpose((3, 0, 2, 1)) * -1
    del tmp28
    tmp26 = einsum(t2, (0, 1, 2, 3), tmp13, (0, 1, 4, 3), (2, 4), optimize=True)
    del tmp13
    rdm2.vovo += einsum(tmp26, (0, 1), delta.oo, (2, 3), (1, 3, 0, 2), optimize=True)
    rdm2.vovo += einsum(tmp26, (0, 1), delta.oo, (2, 3), (1, 3, 0, 2), optimize=True)
    rdm2.vovo += einsum(tmp26, (0, 1), delta.oo, (2, 3), (1, 3, 0, 2), optimize=True)
    rdm2.vovo += einsum(tmp26, (0, 1), delta.oo, (2, 3), (1, 3, 0, 2), optimize=True)
    rdm2.voov += einsum(tmp26, (0, 1), delta.oo, (2, 3), (1, 3, 2, 0), optimize=True) * -1
    rdm2.voov += einsum(tmp26, (0, 1), delta.oo, (2, 3), (1, 3, 2, 0), optimize=True) * -1
    del tmp26
    tmp25 = einsum(l2, (0, 1, 2, 3), tmp24, (2, 4, 5, 0), (3, 4, 1, 5), optimize=True)
    del tmp24
    rdm2.voov += tmp25.transpose((2, 1, 0, 3))
    rdm2.voov += tmp25.transpose((2, 1, 0, 3))
    rdm2.ovov += tmp25.transpose((1, 2, 0, 3)) * -1
    rdm2.ovov += tmp25.transpose((1, 2, 0, 3)) * -1
    del tmp25
    tmp23 = einsum(tmp22, (0, 1, 2, 3), l2, (4, 3, 0, 5), (5, 1, 4, 2), optimize=True)
    del tmp22
    rdm2.voov += tmp23.transpose((2, 1, 0, 3)) * -1
    rdm2.voov += tmp23.transpose((2, 1, 0, 3)) * -1
    rdm2.ovov += tmp23.transpose((1, 2, 0, 3))
    rdm2.ovov += tmp23.transpose((1, 2, 0, 3))
    del tmp23
    tmp17 = tmp15.transpose((1, 0, 2, 3)).copy()
    del tmp15
    tmp17 += tmp16.transpose((0, 1, 3, 2))
    del tmp16
    rdm2.oovv += tmp17.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp17.transpose((1, 0, 2, 3))
    rdm2.oovv += tmp17.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp17 * -1
    rdm2.oovv += tmp17.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp17 * -1
    rdm2.oovv += tmp17.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp17 * -1
    rdm2.oovv += tmp17.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp17.transpose((1, 0, 2, 3))
    rdm2.oovv += tmp17.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp17 * -1
    del tmp17
    tmp9 = tmp5.copy() * 2
    del tmp5
    tmp9 += tmp8.transpose((1, 0, 3, 2))
    del tmp8
    rdm2.oovv += tmp9.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += tmp9
    rdm2.oovv += tmp9.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += tmp9
    del tmp9
    tmp11 = einsum(t2, (0, 1, 2, 3), tmp10, (4, 0, 5, 2), (1, 4, 3, 5), optimize=True)
    del tmp10
    rdm2.oovv += tmp11.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp11.transpose((1, 0, 2, 3))
    rdm2.oovv += tmp11.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp11 * -1
    rdm2.oovv += tmp11.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp11 * -1
    rdm2.oovv += tmp11.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp11 * -1
    rdm2.oovv += tmp11.transpose((1, 0, 3, 2)) * -1
    rdm2.oovv += tmp11.transpose((1, 0, 2, 3))
    rdm2.oovv += tmp11.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp11 * -1
    del tmp11
    tmp19 = einsum(t2, (0, 1, 2, 3), tmp18, (1, 4, 2, 5), (0, 4, 3, 5), optimize=True)
    del tmp18
    rdm2.oovv += tmp19
    rdm2.oovv += tmp19
    del tmp19
    tmp21 = einsum(t2, (0, 1, 2, 3), tmp20, (1, 4, 2, 5), (0, 4, 3, 5), optimize=True)
    del tmp20
    rdm2.oovv += tmp21.transpose((0, 1, 3, 2))
    rdm2.oovv += tmp21.transpose((0, 1, 3, 2))
    del tmp21
    tmp12 = einsum(t2, (0, 1, 2, 3), tmp2, (0, 1, 4, 5), (5, 4, 3, 2), optimize=True)
    del tmp2
    rdm2.oovv += tmp12.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += tmp12
    rdm2.oovv += tmp12
    rdm2.oovv += tmp12
    rdm2.oovv += tmp12.transpose((0, 1, 3, 2)) * -1
    rdm2.oovv += tmp12
    del tmp12
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (1, 3, 0, 2), optimize=True)
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (3, 0, 1, 2), optimize=True) * -1
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (1, 3, 0, 2), optimize=True)
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (1, 3, 0, 2), optimize=True)
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (1, 3, 0, 2), optimize=True)
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (3, 0, 1, 2), optimize=True) * -1
    del delta
    rdm2.oovv += t2.transpose((1, 0, 2, 3)) * -1
    rdm2.oovv += t2.transpose((1, 0, 3, 2))
    rdm2.oovv += t2.transpose((1, 0, 3, 2))
    rdm2.oovv += t2.transpose((1, 0, 3, 2))
    rdm2.oovv += t2.transpose((1, 0, 2, 3)) * -1
    rdm2.oovv += t2.transpose((1, 0, 3, 2))
    rdm2.vvoo = l2.transpose((0, 1, 3, 2)).copy() * -1
    rdm2.vvoo += l2.transpose((1, 0, 3, 2))
    rdm2.vvoo += l2.transpose((1, 0, 3, 2))
    rdm2.vvoo += l2.transpose((1, 0, 3, 2))
    rdm2.vvoo += l2.transpose((0, 1, 3, 2)) * -1
    rdm2.vvoo += l2.transpose((1, 0, 3, 2))
    rdm2.ooov = np.zeros((t2.shape[0], t2.shape[0], t2.shape[0], t2.shape[-1]))
    rdm2.oovo = np.zeros((t2.shape[0], t2.shape[0], t2.shape[-1], t2.shape[0]))
    rdm2.ovoo = np.zeros((t2.shape[0], t2.shape[-1], t2.shape[0], t2.shape[0]))
    rdm2.vooo = np.zeros((t2.shape[-1], t2.shape[0], t2.shape[0], t2.shape[0]))
    rdm2.ovvv = np.zeros((t2.shape[0], t2.shape[-1], t2.shape[-1], t2.shape[-1]))
    rdm2.vovv = np.zeros((t2.shape[-1], t2.shape[0], t2.shape[-1], t2.shape[-1]))
    rdm2.vvov = np.zeros((t2.shape[-1], t2.shape[-1], t2.shape[0], t2.shape[-1]))
    rdm2.vvvo = np.zeros((t2.shape[-1], t2.shape[-1], t2.shape[-1], t2.shape[0]))
    rdm2 = pack_2e(rdm2.oooo, rdm2.ooov, rdm2.oovo, rdm2.ovoo, rdm2.vooo, rdm2.oovv, rdm2.ovov, rdm2.ovvo, rdm2.voov, rdm2.vovo, rdm2.vvoo, rdm2.ovvv, rdm2.vovv, rdm2.vvov, rdm2.vvvo, rdm2.vvvv)
    rdm2 = rdm2.swapaxes(1, 2)

    return rdm2

