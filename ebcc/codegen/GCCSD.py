"""
Code generated by `albert`:
https://github.com/obackhouse/albert

  * date: 2024-09-29T15:55:52.557299
  * python version: 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
  * albert version: 0.0.0
  * caller: /opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/albert/codegen/einsum.py
  * node: fv-az1788-690
  * system: Linux
  * processor: x86_64
  * release: 6.8.0-1014-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:55:52.812141.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    e_cc : float
        Coupled cluster energy.
    """

    tmp0 = np.copy(t2)
    tmp0 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    e_cc = einsum(f.ov, (0, 1), t1, (0, 1), ())
    e_cc += einsum(tmp0, (0, 1, 2, 3), v.oovv, (0, 1, 2, 3), ()) * 0.25
    del tmp0

    return e_cc

def update_amps(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:56:00.614240.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    t1new : array
        Updated T1 residuals.
    t2new : array
        Updated T2 residuals.
    """

    tmp3 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp20 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp21 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp34 = einsum(tmp3, (0, 1), t1, (2, 1), (2, 0))
    tmp6 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))
    tmp40 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp7 = np.copy(t2)
    tmp7 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp5 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp38 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp0 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp29 = np.copy(t2)
    tmp29 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    tmp27 = einsum(t2, (0, 1, 2, 3), v.ooov, (4, 1, 5, 3), (0, 4, 5, 2))
    tmp11 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp13 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp15 = einsum(tmp3, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    tmp22 = np.copy(np.transpose(tmp20, (0, 2, 1, 3))) * -1
    del tmp20
    tmp22 += np.transpose(tmp21, (2, 1, 0, 3)) * 0.5
    del tmp21
    tmp18 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 4, 3), (2, 4))
    tmp9 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp35 = einsum(t2, (0, 1, 2, 3), tmp34, (4, 1), (4, 0, 2, 3)) * -1
    del tmp34
    tmp33 = einsum(tmp6, (0, 1), t2, (2, 0, 3, 4), (2, 1, 3, 4)) * -1
    tmp32 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3))
    tmp41 = einsum(tmp7, (0, 1, 2, 3), tmp40, (4, 0, 1, 5), (4, 5, 2, 3)) * 0.5
    del tmp40
    tmp37 = einsum(t2, (0, 1, 2, 3), tmp5, (1, 4), (4, 0, 2, 3))
    tmp39 = einsum(t2, (0, 1, 2, 3), tmp38, (4, 1), (0, 4, 2, 3))
    del tmp38
    tmp47 = einsum(t2, (0, 1, 2, 3), tmp0, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp30 = einsum(tmp29, (0, 1, 2, 3), v.ovov, (4, 2, 0, 5), (1, 4, 3, 5))
    del tmp29
    tmp28 = einsum(tmp27, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3))
    del tmp27
    tmp12 = einsum(tmp11, (0, 1), t2, (2, 3, 4, 1), (2, 3, 4, 0)) * -1
    del tmp11
    tmp14 = einsum(tmp13, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    del tmp13
    tmp16 = einsum(tmp15, (0, 1, 2, 3), t1, (2, 4), (0, 1, 4, 3))
    del tmp15
    tmp23 = einsum(tmp22, (0, 1, 2, 3), t1, (0, 4), (1, 2, 3, 4))
    del tmp22
    tmp19 = einsum(tmp18, (0, 1), t2, (2, 3, 4, 1), (2, 3, 4, 0))
    del tmp18
    tmp25 = einsum(tmp9, (0, 1, 2, 3), t1, (4, 3), (0, 4, 1, 2)) * -1
    tmp44 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp43 = einsum(v.ooov, (0, 1, 2, 3), t1, (2, 4), (0, 1, 4, 3))
    tmp36 = np.copy(np.transpose(tmp32, (0, 1, 3, 2))) * -1
    del tmp32
    tmp36 += np.transpose(tmp33, (0, 1, 3, 2))
    del tmp33
    tmp36 += np.transpose(tmp35, (0, 1, 3, 2)) * -1
    del tmp35
    tmp42 = np.copy(np.transpose(tmp37, (0, 1, 3, 2)))
    del tmp37
    tmp42 += np.transpose(tmp39, (0, 1, 3, 2)) * -0.5
    del tmp39
    tmp42 += np.transpose(tmp41, (0, 1, 3, 2)) * -1
    del tmp41
    tmp48 = einsum(tmp47, (0, 1, 2, 3), t1, (2, 4), (0, 1, 4, 3))
    del tmp47
    tmp10 = einsum(t2, (0, 1, 2, 3), tmp9, (4, 1, 5, 3), (4, 0, 2, 5)) * -1
    del tmp9
    tmp31 = np.copy(tmp28)
    del tmp28
    tmp31 += tmp30 * -1
    del tmp30
    tmp17 = np.copy(tmp12)
    del tmp12
    tmp17 += tmp14
    del tmp14
    tmp17 += tmp16 * -1
    del tmp16
    tmp24 = np.copy(tmp19) * 0.5
    del tmp19
    tmp24 += np.transpose(tmp23, (1, 0, 3, 2))
    del tmp23
    tmp46 = einsum(t2, (0, 1, 2, 3), f.oo, (4, 1), (4, 0, 2, 3))
    tmp26 = einsum(tmp25, (0, 1, 2, 3), t1, (2, 4), (1, 0, 4, 3)) * -1
    del tmp25
    tmp45 = np.copy(np.transpose(tmp43, (1, 0, 2, 3))) * -1
    del tmp43
    tmp45 += np.transpose(tmp44, (1, 0, 2, 3)) * -1
    del tmp44
    tmp2 = np.copy(t2) * 0.5
    tmp2 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp49 = np.copy(v.oooo)
    tmp49 += einsum(tmp7, (0, 1, 2, 3), v.oovv, (4, 5, 2, 3), (4, 5, 1, 0)) * -0.5
    tmp8 = np.copy(f.oo)
    tmp8 += tmp5
    del tmp5
    tmp8 += tmp6
    del tmp6
    tmp8 += einsum(tmp7, (0, 1, 2, 3), v.oovv, (4, 0, 2, 3), (4, 1)) * -0.5
    tmp1 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -1
    tmp1 += np.transpose(tmp0, (0, 2, 1, 3)) * -1
    del tmp0
    tmp4 = np.copy(f.ov)
    tmp4 += tmp3
    del tmp3
    t2new = np.copy(v.oovv)
    t2new += tmp10
    t2new += np.transpose(tmp10, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp10, (1, 0, 2, 3)) * -1
    t2new += np.transpose(tmp10, (1, 0, 3, 2))
    del tmp10
    t2new += tmp17
    t2new += np.transpose(tmp17, (0, 1, 3, 2)) * -1
    del tmp17
    t2new += tmp24 * -1
    t2new += np.transpose(tmp24, (0, 1, 3, 2))
    del tmp24
    t2new += tmp26 * -1
    t2new += np.transpose(tmp26, (0, 1, 3, 2))
    del tmp26
    t2new += tmp31
    t2new += np.transpose(tmp31, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp31, (1, 0, 2, 3)) * -1
    t2new += np.transpose(tmp31, (1, 0, 3, 2))
    del tmp31
    t2new += tmp36 * -1
    t2new += np.transpose(tmp36, (1, 0, 2, 3))
    del tmp36
    t2new += tmp42 * -1
    t2new += np.transpose(tmp42, (1, 0, 2, 3))
    del tmp42
    t2new += tmp45 * -1
    t2new += np.transpose(tmp45, (0, 1, 3, 2))
    del tmp45
    t2new += np.transpose(tmp46, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp46, (1, 0, 3, 2))
    del tmp46
    t2new += tmp48 * -1
    t2new += np.transpose(tmp48, (0, 1, 3, 2))
    t2new += np.transpose(tmp48, (1, 0, 2, 3))
    t2new += np.transpose(tmp48, (1, 0, 3, 2)) * -1
    del tmp48
    t2new += einsum(tmp7, (0, 1, 2, 3), tmp49, (0, 1, 4, 5), (4, 5, 3, 2)) * -0.5
    del tmp7, tmp49
    t2new += einsum(tmp2, (0, 1, 2, 3), v.vvvv, (4, 5, 2, 3), (1, 0, 4, 5)) * -1
    t1new = np.copy(f.ov)
    t1new += einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    t1new += einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3)) * -1
    t1new += einsum(tmp1, (0, 1, 2, 3), t2, (1, 2, 4, 3), (0, 4)) * 0.5
    del tmp1
    t1new += einsum(tmp2, (0, 1, 2, 3), v.ovvv, (0, 4, 2, 3), (1, 4))
    del tmp2
    t1new += einsum(t2, (0, 1, 2, 3), tmp4, (1, 3), (0, 2))
    del tmp4
    t1new += einsum(tmp8, (0, 1), t1, (0, 2), (1, 2)) * -1
    del tmp8

    return {f"t1new": t1new, f"t2new": t2new}

def update_lams(f=None, l1=None, l2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:56:11.541705.

    Parameters
    ----------
    f : array
        Fock matrix.
    l1 : array
        L1 amplitudes.
    l2 : array
        L2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    l1new : array
        Updated L1 residuals.
    l2new : array
        Updated L2 residuals.
    """

    tmp5 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp36 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    tmp25 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp4 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp28 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 2, 3), (4, 0))
    tmp27 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp20 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    tmp21 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 0, 1), (2, 4))
    tmp1 = einsum(l2, (0, 1, 2, 3), t1, (4, 1), (2, 3, 4, 0))
    tmp11 = np.copy(v.ooov)
    tmp11 += np.transpose(tmp5, (2, 1, 0, 3)) * 0.5
    tmp7 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp18 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2))
    tmp37 = np.copy(tmp25)
    tmp37 += tmp36 * 0.5
    del tmp36
    tmp6 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -1
    tmp6 += np.transpose(tmp5, (0, 2, 1, 3)) * -1
    tmp31 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * -1
    tmp31 += tmp4
    tmp41 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp44 = np.copy(tmp27) * 2
    tmp44 += np.transpose(tmp28, (1, 0))
    tmp24 = np.copy(tmp20)
    tmp24 += tmp21 * 0.5
    tmp50 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp0 = einsum(l2, (0, 1, 2, 3), t2, (4, 5, 0, 1), (2, 3, 4, 5))
    tmp2 = einsum(t1, (0, 1), tmp1, (2, 3, 4, 1), (3, 2, 4, 0))
    tmp12 = einsum(t1, (0, 1), tmp11, (2, 3, 4, 1), (2, 3, 4, 0))
    del tmp11
    tmp10 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp56 = einsum(f.vv, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    tmp57 = einsum(tmp7, (0, 1), tmp1, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp35 = einsum(v.oovv, (0, 1, 2, 3), tmp18, (4, 3), (0, 1, 4, 2)) * -1
    tmp38 = einsum(tmp37, (0, 1), l2, (2, 0, 3, 4), (3, 4, 1, 2)) * -1
    del tmp37
    tmp34 = einsum(tmp1, (0, 1, 2, 3), f.ov, (2, 4), (0, 1, 4, 3))
    tmp39 = einsum(l1, (0, 1), tmp6, (1, 2, 3, 4), (2, 3, 4, 0))
    tmp32 = einsum(l2, (0, 1, 2, 3), tmp31, (3, 4, 1, 5), (4, 2, 5, 0))
    del tmp31
    tmp30 = einsum(tmp1, (0, 1, 2, 3), v.ooov, (4, 2, 1, 5), (0, 4, 3, 5))
    tmp42 = einsum(l2, (0, 1, 2, 3), tmp41, (4, 3), (4, 2, 0, 1))
    del tmp41
    tmp45 = einsum(l2, (0, 1, 2, 3), tmp44, (4, 3), (4, 2, 0, 1)) * -0.5
    del tmp44
    tmp43 = einsum(v.oovv, (0, 1, 2, 3), tmp24, (4, 1), (4, 0, 2, 3)) * -1
    tmp52 = einsum(tmp5, (0, 1, 2, 3), tmp1, (0, 4, 2, 5), (4, 1, 5, 3)) * -1
    del tmp5
    tmp51 = einsum(l2, (0, 1, 2, 3), tmp50, (3, 4, 1, 5), (2, 4, 0, 5))
    del tmp50
    tmp54 = einsum(tmp7, (0, 1), t1, (2, 1), (2, 0))
    tmp48 = einsum(l1, (0, 1), v.ovvv, (2, 0, 3, 4), (1, 2, 3, 4))
    tmp47 = einsum(l2, (0, 1, 2, 3), f.oo, (4, 3), (4, 2, 0, 1))
    tmp8 = np.copy(f.ov)
    tmp8 += tmp7
    tmp16 = np.copy(np.transpose(tmp0, (1, 0, 3, 2))) * -0.5
    tmp16 += np.transpose(tmp2, (0, 1, 3, 2))
    tmp9 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3)))
    tmp9 += np.transpose(tmp4, (0, 1, 3, 2)) * -0.5
    tmp13 = np.copy(v.oooo) * -0.5
    tmp13 += np.transpose(tmp10, (3, 2, 1, 0)) * -0.25
    tmp13 += np.transpose(tmp12, (1, 0, 3, 2)) * -1
    tmp22 = np.copy(tmp20) * 2
    del tmp20
    tmp22 += tmp21
    del tmp21
    tmp58 = np.copy(np.transpose(tmp56, (1, 0, 2, 3))) * -1
    del tmp56
    tmp58 += tmp57
    del tmp57
    tmp40 = np.copy(tmp34) * -1
    del tmp34
    tmp40 += tmp35 * 0.5
    del tmp35
    tmp40 += np.transpose(tmp38, (1, 0, 3, 2))
    del tmp38
    tmp40 += np.transpose(tmp39, (1, 0, 3, 2))
    del tmp39
    tmp59 = np.copy(v.oooo) * 0.5
    tmp59 += np.transpose(tmp10, (1, 0, 3, 2)) * 0.25
    del tmp10
    tmp59 += np.transpose(tmp12, (2, 3, 1, 0)) * -1
    del tmp12
    tmp33 = einsum(tmp7, (0, 1), l1, (2, 3), (3, 0, 2, 1))
    del tmp7
    tmp33 += tmp30
    del tmp30
    tmp33 += np.transpose(tmp32, (1, 0, 3, 2))
    del tmp32
    tmp46 = np.copy(np.transpose(tmp42, (0, 1, 3, 2)))
    del tmp42
    tmp46 += np.transpose(tmp43, (0, 1, 3, 2)) * -1
    del tmp43
    tmp46 += np.transpose(tmp45, (1, 0, 3, 2))
    del tmp45
    tmp60 = np.copy(np.transpose(tmp0, (1, 0, 3, 2))) * -1
    tmp60 += np.transpose(tmp2, (0, 1, 3, 2)) * 2
    tmp53 = np.copy(tmp51)
    del tmp51
    tmp53 += tmp52 * -1
    del tmp52
    tmp55 = einsum(tmp54, (0, 1), l2, (2, 3, 4, 0), (4, 1, 2, 3))
    del tmp54
    tmp49 = np.copy(np.transpose(tmp47, (0, 1, 3, 2))) * -1
    del tmp47
    tmp49 += np.transpose(tmp48, (0, 1, 3, 2))
    del tmp48
    tmp29 = np.copy(f.oo)
    tmp29 += np.transpose(tmp27, (1, 0))
    del tmp27
    tmp29 += tmp28 * 0.5
    del tmp28
    tmp29 += einsum(tmp8, (0, 1), t1, (2, 1), (2, 0))
    tmp17 = einsum(t2, (0, 1, 2, 3), l1, (3, 4), (4, 0, 1, 2)) * 0.5
    tmp17 += einsum(tmp1, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5)) * -1
    tmp17 += einsum(t1, (0, 1), tmp16, (0, 2, 3, 4), (2, 4, 3, 1)) * -0.5
    del tmp16
    tmp3 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 5, 1), (5, 0, 4, 2))
    tmp14 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -0.5
    tmp14 += einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (0, 4, 5, 1)) * -0.25
    tmp14 += einsum(t2, (0, 1, 2, 3), tmp6, (4, 1, 5, 3), (5, 0, 4, 2))
    del tmp6
    tmp14 += einsum(tmp8, (0, 1), t2, (2, 3, 4, 1), (0, 2, 3, 4)) * 0.5
    tmp14 += einsum(tmp9, (0, 1, 2, 3), t1, (4, 2), (1, 0, 4, 3)) * -1
    del tmp9
    tmp14 += einsum(t1, (0, 1), tmp13, (0, 2, 3, 4), (2, 4, 3, 1)) * -1
    del tmp13
    tmp15 = np.copy(v.ovvv)
    tmp15 += einsum(v.vvvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3)) * -1
    tmp26 = np.copy(f.vv)
    tmp26 += tmp25 * -1
    del tmp25
    tmp23 = np.copy(t1) * -1
    tmp23 += einsum(l1, (0, 1), t2, (2, 1, 3, 0), (2, 3)) * -1
    tmp23 += einsum(t2, (0, 1, 2, 3), tmp1, (1, 0, 4, 3), (4, 2)) * 0.5
    tmp23 += einsum(tmp22, (0, 1), t1, (0, 2), (1, 2)) * 0.5
    del tmp22
    tmp19 = einsum(t1, (0, 1), l1, (2, 0), (2, 1)) * 2
    tmp19 += tmp18
    del tmp18
    l2new = einsum(v.ovvv, (0, 1, 2, 3), tmp1, (4, 5, 0, 1), (2, 3, 4, 5))
    l2new += np.transpose(v.oovv, (2, 3, 0, 1))
    l2new += einsum(l2, (0, 1, 2, 3), v.vvvv, (4, 5, 0, 1), (4, 5, 2, 3)) * 0.5
    l2new += np.transpose(tmp33, (2, 3, 0, 1))
    l2new += np.transpose(tmp33, (3, 2, 0, 1)) * -1
    l2new += np.transpose(tmp33, (2, 3, 1, 0)) * -1
    l2new += np.transpose(tmp33, (3, 2, 1, 0))
    del tmp33
    l2new += np.transpose(tmp40, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp40, (3, 2, 0, 1))
    del tmp40
    l2new += np.transpose(tmp46, (3, 2, 0, 1))
    l2new += np.transpose(tmp46, (3, 2, 1, 0)) * -1
    del tmp46
    l2new += np.transpose(tmp49, (2, 3, 0, 1))
    l2new += np.transpose(tmp49, (2, 3, 1, 0)) * -1
    del tmp49
    l2new += einsum(l1, (0, 1), f.ov, (2, 3), (3, 0, 2, 1))
    l2new += einsum(f.ov, (0, 1), l1, (2, 3), (2, 1, 0, 3)) * -1
    l2new += einsum(f.ov, (0, 1), l1, (2, 3), (1, 2, 3, 0)) * -1
    l2new += einsum(f.ov, (0, 1), l1, (2, 3), (2, 1, 3, 0))
    l2new += np.transpose(tmp53, (2, 3, 0, 1))
    l2new += np.transpose(tmp53, (3, 2, 0, 1)) * -1
    l2new += np.transpose(tmp53, (2, 3, 1, 0)) * -1
    l2new += np.transpose(tmp53, (3, 2, 1, 0))
    del tmp53
    l2new += np.transpose(tmp55, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp55, (2, 3, 1, 0))
    del tmp55
    l2new += np.transpose(tmp58, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp58, (3, 2, 0, 1))
    del tmp58
    l2new += einsum(tmp59, (0, 1, 2, 3), l2, (4, 5, 0, 1), (4, 5, 2, 3))
    del tmp59
    l2new += einsum(tmp60, (0, 1, 2, 3), v.oovv, (2, 3, 4, 5), (4, 5, 1, 0)) * 0.25
    del tmp60
    l1new = np.copy(np.transpose(f.ov, (1, 0)))
    l1new += einsum(l1, (0, 1), v.ovov, (2, 0, 1, 3), (3, 2)) * -1
    l1new += einsum(v.ovoo, (0, 1, 2, 3), tmp0, (4, 0, 3, 2), (1, 4)) * 0.25
    del tmp0
    l1new += einsum(v.ooov, (0, 1, 2, 3), tmp2, (4, 2, 0, 1), (3, 4)) * -0.5
    del tmp2
    l1new += einsum(tmp1, (0, 1, 2, 3), v.ovov, (2, 3, 1, 4), (4, 0)) * -1
    l1new += einsum(v.ovvv, (0, 1, 2, 3), tmp3, (4, 0, 1, 3), (2, 4)) * -1
    del tmp3
    l1new += einsum(tmp1, (0, 1, 2, 3), tmp4, (1, 2, 3, 4), (4, 0))
    del tmp4, tmp1
    l1new += einsum(tmp14, (0, 1, 2, 3), l2, (4, 3, 1, 2), (4, 0))
    del tmp14
    l1new += einsum(l2, (0, 1, 2, 3), tmp15, (3, 4, 0, 1), (4, 2)) * -0.5
    del tmp15
    l1new += einsum(tmp17, (0, 1, 2, 3), v.oovv, (1, 2, 4, 3), (4, 0))
    del tmp17
    l1new += einsum(tmp19, (0, 1), v.ovvv, (2, 0, 3, 1), (3, 2)) * 0.5
    del tmp19
    l1new += einsum(v.oovv, (0, 1, 2, 3), tmp23, (1, 3), (2, 0)) * -1
    del tmp23
    l1new += einsum(tmp24, (0, 1), v.ooov, (2, 1, 0, 3), (3, 2))
    l1new += einsum(l1, (0, 1), tmp26, (0, 2), (2, 1))
    del tmp26
    l1new += einsum(tmp29, (0, 1), l1, (2, 0), (2, 1)) * -1
    del tmp29
    l1new += einsum(tmp8, (0, 1), tmp24, (2, 0), (1, 2)) * -1
    del tmp24, tmp8

    return {f"l1new": l1new, f"l2new": l2new}

def make_rdm1_f(l1=None, l2=None, t1=None, t2=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:56:12.323425.

    Parameters
    ----------
    l1 : array
        L1 amplitudes.
    l2 : array
        L2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.

    Returns
    -------
    rdm1 : array
        One-particle reduced density matrix.
    """

    rdm1 = Namespace()
    delta = Namespace(
        oo=np.eye(t2.shape[0]),
        vv=np.eye(t2.shape[-1]),
    )
    tmp1 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    tmp0 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 0, 1), (2, 4))
    tmp3 = np.copy(tmp1) * 2
    tmp3 += tmp0
    tmp2 = einsum(l2, (0, 1, 2, 3), t1, (4, 1), (2, 3, 4, 0))
    rdm1.vv = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    rdm1.vv += einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2)) * 0.5
    rdm1.vo = np.copy(l1)
    rdm1.ov = einsum(l1, (0, 1), t2, (2, 1, 3, 0), (2, 3))
    rdm1.ov += t1
    rdm1.ov += einsum(tmp2, (0, 1, 2, 3), t2, (1, 0, 4, 3), (2, 4)) * -0.5
    del tmp2
    rdm1.ov += einsum(tmp3, (0, 1), t1, (0, 2), (1, 2)) * -0.5
    del tmp3
    rdm1.oo = np.copy(np.transpose(tmp0, (1, 0))) * -0.5
    del tmp0
    rdm1.oo += delta.oo
    del delta
    rdm1.oo += np.transpose(tmp1, (1, 0)) * -1
    del tmp1
    rdm1 = np.block([[rdm1.oo, rdm1.ov], [rdm1.vo, rdm1.vv]])

    return rdm1

def make_rdm2_f(l1=None, l2=None, t1=None, t2=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:56:23.297584.

    Parameters
    ----------
    l1 : array
        L1 amplitudes.
    l2 : array
        L2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.

    Returns
    -------
    rdm2 : array
        Two-particle reduced density matrix.
    """

    rdm2 = Namespace()
    delta = Namespace(
        oo=np.eye(t2.shape[0]),
        vv=np.eye(t2.shape[-1]),
    )
    tmp3 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    tmp1 = einsum(l2, (0, 1, 2, 3), t1, (4, 1), (2, 3, 4, 0))
    tmp4 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 0, 1), (2, 4))
    tmp21 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 5, 1), (5, 0, 4, 2))
    tmp10 = einsum(l1, (0, 1), t2, (2, 1, 3, 0), (2, 3))
    tmp11 = einsum(tmp3, (0, 1), t1, (0, 2), (1, 2))
    tmp6 = einsum(t2, (0, 1, 2, 3), tmp1, (4, 1, 5, 3), (4, 5, 0, 2)) * -1
    tmp0 = einsum(l2, (0, 1, 2, 3), t2, (4, 5, 0, 1), (2, 3, 4, 5))
    tmp2 = einsum(t1, (0, 1), tmp1, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp5 = einsum(t2, (0, 1, 2, 3), l1, (3, 4), (4, 0, 1, 2))
    tmp14 = np.copy(tmp3) * 2
    tmp14 += tmp4
    tmp30 = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    tmp25 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2))
    tmp29 = einsum(tmp1, (0, 1, 2, 3), t1, (1, 4), (0, 2, 3, 4))
    tmp36 = einsum(tmp21, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    tmp12 = np.copy(tmp10)
    tmp12 += tmp11 * -1
    del tmp11
    tmp18 = einsum(tmp6, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    tmp7 = einsum(tmp1, (0, 1, 2, 3), t2, (1, 0, 4, 3), (2, 4))
    tmp8 = einsum(t1, (0, 1), tmp4, (0, 2), (2, 1))
    tmp13 = np.copy(np.transpose(tmp0, (1, 0, 3, 2))) * -0.5
    tmp13 += np.transpose(tmp2, (0, 1, 3, 2))
    tmp22 = einsum(t2, (0, 1, 2, 3), tmp21, (1, 4, 3, 5), (0, 4, 2, 5))
    tmp20 = einsum(tmp5, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    tmp15 = einsum(tmp14, (0, 1), t1, (0, 2), (1, 2)) * 0.5
    del tmp14
    tmp38 = einsum(l2, (0, 1, 2, 3), t1, (3, 4), (2, 0, 1, 4))
    tmp31 = np.copy(tmp30)
    tmp31 += tmp25 * 0.5
    tmp33 = einsum(t2, (0, 1, 2, 3), tmp1, (1, 0, 4, 5), (4, 5, 2, 3)) * -1
    tmp35 = einsum(l1, (0, 1), t2, (2, 1, 3, 4), (2, 0, 3, 4))
    tmp34 = einsum(tmp29, (0, 1, 2, 3), t1, (0, 4), (1, 2, 3, 4)) * -1
    tmp37 = np.copy(tmp36)
    tmp37 += einsum(tmp25, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * -0.5
    tmp32 = np.copy(tmp30) * 2
    tmp32 += tmp25
    tmp19 = np.copy(tmp18)
    del tmp18
    tmp19 += einsum(tmp12, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * -1
    tmp9 = np.copy(tmp7)
    tmp9 += tmp8
    del tmp8
    tmp28 = einsum(t1, (0, 1), tmp13, (0, 2, 3, 4), (2, 4, 3, 1)) * -2
    tmp27 = einsum(t2, (0, 1, 2, 3), tmp4, (1, 4), (0, 4, 2, 3))
    tmp24 = einsum(t2, (0, 1, 2, 3), tmp3, (1, 4), (4, 0, 2, 3))
    tmp26 = einsum(tmp25, (0, 1), t2, (2, 3, 4, 0), (2, 3, 4, 1))
    del tmp25
    tmp23 = np.copy(tmp20)
    del tmp20
    tmp23 += tmp22
    del tmp22
    tmp17 = np.copy(np.transpose(tmp0, (1, 0, 3, 2))) * -1
    tmp17 += np.transpose(tmp2, (0, 1, 3, 2)) * 2
    tmp16 = np.copy(tmp10) * -1
    del tmp10
    tmp16 += tmp7 * 0.5
    del tmp7
    tmp16 += tmp15
    del tmp15
    rdm2.vvvv = einsum(t2, (0, 1, 2, 3), l2, (4, 5, 0, 1), (4, 5, 2, 3)) * 0.5
    rdm2.vvvv += einsum(tmp38, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    rdm2.vvvo = np.copy(np.transpose(tmp38, (2, 1, 3, 0)))
    rdm2.vvov = np.copy(np.transpose(tmp38, (2, 1, 0, 3))) * -1
    del tmp38
    rdm2.vovv = np.copy(np.transpose(tmp33, (1, 0, 3, 2))) * 0.5
    rdm2.vovv += np.transpose(tmp34, (1, 0, 3, 2))
    rdm2.vovv += np.transpose(tmp35, (1, 0, 3, 2))
    rdm2.vovv += np.transpose(tmp36, (1, 0, 2, 3))
    rdm2.vovv += np.transpose(tmp36, (1, 0, 3, 2)) * -1
    del tmp36
    rdm2.vovv += einsum(tmp31, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.vovv += einsum(tmp31, (0, 1), t1, (2, 3), (0, 2, 1, 3))
    rdm2.ovvv = np.copy(np.transpose(tmp33, (0, 1, 3, 2))) * -0.5
    del tmp33
    rdm2.ovvv += np.transpose(tmp34, (0, 1, 3, 2)) * -1
    del tmp34
    rdm2.ovvv += np.transpose(tmp35, (0, 1, 3, 2)) * -1
    del tmp35
    rdm2.ovvv += tmp37 * -1
    rdm2.ovvv += np.transpose(tmp37, (0, 1, 3, 2))
    del tmp37
    rdm2.ovvv += einsum(tmp30, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.ovvv += einsum(tmp30, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    del tmp30
    rdm2.vvoo = np.copy(l2)
    rdm2.vovo = np.copy(np.transpose(tmp21, (2, 1, 3, 0))) * -1
    rdm2.vovo += np.transpose(tmp29, (2, 1, 3, 0))
    rdm2.vovo += einsum(l1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.vovo += einsum(delta.oo, (0, 1), tmp32, (2, 3), (2, 0, 3, 1)) * 0.5
    rdm2.voov = np.copy(np.transpose(tmp21, (2, 1, 0, 3)))
    rdm2.voov += np.transpose(tmp29, (2, 1, 0, 3)) * -1
    rdm2.voov += einsum(l1, (0, 1), t1, (2, 3), (0, 2, 1, 3))
    rdm2.voov += einsum(tmp31, (0, 1), delta.oo, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.ovvo = np.copy(np.transpose(tmp21, (1, 2, 3, 0)))
    rdm2.ovvo += np.transpose(tmp29, (1, 2, 3, 0)) * -1
    rdm2.ovvo += einsum(l1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.ovvo += einsum(delta.oo, (0, 1), tmp32, (2, 3), (0, 2, 3, 1)) * -0.5
    del tmp32
    rdm2.ovov = np.copy(np.transpose(tmp21, (1, 2, 0, 3))) * -1
    del tmp21
    rdm2.ovov += np.transpose(tmp29, (1, 2, 0, 3))
    del tmp29
    rdm2.ovov += einsum(l1, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ovov += einsum(tmp31, (0, 1), delta.oo, (2, 3), (2, 0, 3, 1))
    del tmp31
    rdm2.oovv = np.copy(t2)
    rdm2.oovv += tmp19 * -1
    rdm2.oovv += np.transpose(tmp19, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp19, (1, 0, 2, 3))
    rdm2.oovv += np.transpose(tmp19, (1, 0, 3, 2)) * -1
    del tmp19
    rdm2.oovv += tmp23
    rdm2.oovv += np.transpose(tmp23, (0, 1, 3, 2)) * -1
    del tmp23
    rdm2.oovv += np.transpose(tmp24, (0, 1, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp24, (1, 0, 3, 2))
    del tmp24
    rdm2.oovv += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.oovv += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.oovv += tmp26 * -0.5
    rdm2.oovv += np.transpose(tmp26, (0, 1, 3, 2)) * 0.5
    del tmp26
    rdm2.oovv += np.transpose(tmp27, (0, 1, 3, 2)) * 0.5
    rdm2.oovv += np.transpose(tmp27, (1, 0, 3, 2)) * -0.5
    del tmp27
    rdm2.oovv += einsum(tmp9, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * -0.5
    rdm2.oovv += einsum(t1, (0, 1), tmp9, (2, 3), (0, 2, 3, 1)) * 0.5
    rdm2.oovv += einsum(tmp9, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * 0.5
    rdm2.oovv += einsum(tmp9, (0, 1), t1, (2, 3), (0, 2, 1, 3)) * -0.5
    rdm2.oovv += einsum(t2, (0, 1, 2, 3), tmp13, (0, 1, 4, 5), (5, 4, 2, 3)) * 0.5
    rdm2.oovv += einsum(tmp28, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3)) * 0.5
    del tmp28
    rdm2.vooo = np.copy(np.transpose(tmp1, (3, 2, 1, 0)))
    rdm2.vooo += einsum(l1, (0, 1), delta.oo, (2, 3), (0, 2, 1, 3))
    rdm2.vooo += einsum(delta.oo, (0, 1), l1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ovoo = np.copy(np.transpose(tmp1, (2, 3, 1, 0))) * -1
    del tmp1
    rdm2.ovoo += einsum(l1, (0, 1), delta.oo, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ovoo += einsum(delta.oo, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.oovo = np.copy(np.transpose(tmp5, (2, 1, 3, 0)))
    rdm2.oovo += np.transpose(tmp6, (1, 2, 3, 0))
    rdm2.oovo += np.transpose(tmp6, (2, 1, 3, 0)) * -1
    rdm2.oovo += einsum(tmp4, (0, 1), t1, (2, 3), (2, 1, 3, 0)) * -0.5
    rdm2.oovo += einsum(tmp4, (0, 1), t1, (2, 3), (1, 2, 3, 0)) * 0.5
    rdm2.oovo += einsum(delta.oo, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.oovo += einsum(t1, (0, 1), delta.oo, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.oovo += einsum(tmp16, (0, 1), delta.oo, (2, 3), (0, 2, 1, 3)) * -1
    rdm2.oovo += einsum(delta.oo, (0, 1), tmp16, (2, 3), (0, 2, 3, 1))
    del tmp16
    rdm2.oovo += einsum(tmp3, (0, 1), t1, (2, 3), (2, 1, 3, 0)) * -1
    rdm2.oovo += einsum(tmp3, (0, 1), t1, (2, 3), (1, 2, 3, 0))
    rdm2.oovo += einsum(t1, (0, 1), tmp17, (0, 2, 3, 4), (4, 3, 1, 2)) * 0.5
    del tmp17
    rdm2.ooov = np.copy(np.transpose(tmp5, (2, 1, 0, 3))) * -1
    del tmp5
    rdm2.ooov += np.transpose(tmp6, (1, 2, 0, 3)) * -1
    rdm2.ooov += np.transpose(tmp6, (2, 1, 0, 3))
    del tmp6
    rdm2.ooov += einsum(tmp4, (0, 1), t1, (2, 3), (2, 1, 0, 3)) * 0.5
    rdm2.ooov += einsum(tmp4, (0, 1), t1, (2, 3), (1, 2, 0, 3)) * -0.5
    rdm2.ooov += einsum(delta.oo, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ooov += einsum(t1, (0, 1), delta.oo, (2, 3), (2, 0, 3, 1))
    rdm2.ooov += einsum(tmp9, (0, 1), delta.oo, (2, 3), (0, 2, 3, 1)) * 0.5
    rdm2.ooov += einsum(delta.oo, (0, 1), tmp9, (2, 3), (0, 2, 1, 3)) * -0.5
    del tmp9
    rdm2.ooov += einsum(tmp3, (0, 1), t1, (2, 3), (2, 1, 0, 3))
    rdm2.ooov += einsum(tmp3, (0, 1), t1, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.ooov += einsum(tmp12, (0, 1), delta.oo, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.ooov += einsum(delta.oo, (0, 1), tmp12, (2, 3), (0, 2, 1, 3))
    del tmp12
    rdm2.ooov += einsum(t1, (0, 1), tmp13, (0, 2, 3, 4), (4, 3, 2, 1)) * -1
    del tmp13
    rdm2.oooo = np.copy(np.transpose(tmp0, (3, 2, 1, 0))) * 0.5
    del tmp0
    rdm2.oooo += np.transpose(tmp2, (2, 3, 1, 0)) * -1
    del tmp2
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (0, 2, 1, 3))
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.oooo += einsum(tmp3, (0, 1), delta.oo, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.oooo += einsum(tmp3, (0, 1), delta.oo, (2, 3), (2, 1, 0, 3))
    rdm2.oooo += einsum(tmp3, (0, 1), delta.oo, (2, 3), (1, 2, 3, 0))
    rdm2.oooo += einsum(tmp3, (0, 1), delta.oo, (2, 3), (2, 1, 3, 0)) * -1
    del tmp3
    rdm2.oooo += einsum(tmp4, (0, 1), delta.oo, (2, 3), (1, 2, 0, 3)) * -0.5
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp4, (2, 3), (0, 3, 2, 1)) * 0.5
    rdm2.oooo += einsum(tmp4, (0, 1), delta.oo, (2, 3), (1, 2, 3, 0)) * 0.5
    rdm2.oooo += einsum(tmp4, (0, 1), delta.oo, (2, 3), (2, 1, 3, 0)) * -0.5
    del tmp4, delta
    rdm2 = pack_2e(rdm2.oooo, rdm2.ooov, rdm2.oovo, rdm2.ovoo, rdm2.vooo, rdm2.oovv, rdm2.ovov, rdm2.ovvo, rdm2.voov, rdm2.vovo, rdm2.vvoo, rdm2.ovvv, rdm2.vovv, rdm2.vvov, rdm2.vvvo, rdm2.vvvv)
    rdm2 = np.transpose(rdm2, (0, 2, 1, 3))

    return rdm2

def hbar_matvec_ip_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:56:37.272966.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp0 : array
    tmp1 : array
    tmp11 : array
    tmp12 : array
    tmp13 : array
    tmp15 : array
    tmp16 : array
    tmp17 : array
    tmp2 : array
    tmp20 : array
    tmp24 : array
    tmp25 : array
    tmp27 : array
    tmp28 : array
    tmp3 : array
    tmp30 : array
    tmp31 : array
    tmp33 : array
    tmp34 : array
    tmp35 : array
    tmp38 : array
    tmp39 : array
    tmp4 : array
    tmp40 : array
    tmp41 : array
    tmp43 : array
    tmp44 : array
    tmp45 : array
    tmp46 : array
    tmp48 : array
    tmp49 : array
    tmp5 : array
    tmp52 : array
    tmp55 : array
    tmp56 : array
    tmp7 : array
    tmp8 : array
    """

    tmp3 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp2 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp52 = einsum(tmp3, (0, 1, 2, 3), t1, (4, 3), (0, 4, 2, 1))
    tmp5 = einsum(tmp2, (0, 1), t1, (2, 1), (2, 0))
    tmp25 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp24 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp20 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp1 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))
    tmp33 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp4 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp0 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp56 = einsum(t1, (0, 1), tmp52, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp55 = einsum(t1, (0, 1), tmp5, (2, 0), (2, 1))
    tmp49 = einsum(tmp25, (0, 1, 2, 3), t1, (4, 3), (0, 4, 1, 2)) * -1
    tmp48 = einsum(tmp24, (0, 1), t1, (2, 1), (2, 0))
    tmp46 = einsum(t1, (0, 1), tmp20, (2, 0, 3, 4), (2, 3, 4, 1)) * -1
    tmp45 = einsum(tmp1, (0, 1), t1, (0, 2), (1, 2))
    tmp44 = einsum(t1, (0, 1), tmp33, (2, 3, 0, 4), (2, 3, 4, 1)) * -1
    tmp43 = einsum(tmp4, (0, 1), t1, (1, 2), (0, 2))
    tmp41 = einsum(tmp3, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5))
    tmp40 = einsum(t2, (0, 1, 2, 3), tmp3, (4, 1, 0, 3), (4, 2))
    tmp39 = einsum(tmp2, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    tmp38 = einsum(tmp2, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp35 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp34 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 4, 3), (2, 4))
    tmp31 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp30 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp28 = einsum(t2, (0, 1, 2, 3), v.ooov, (4, 1, 5, 3), (0, 4, 5, 2))
    tmp27 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp17 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp16 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp15 = einsum(t1, (0, 1), v.oooo, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp13 = einsum(tmp0, (0, 1), t1, (0, 2), (1, 2))
    tmp12 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp11 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp8 = einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    tmp7 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))

    return {f"tmp0": tmp0, f"tmp1": tmp1, f"tmp11": tmp11, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp15": tmp15, f"tmp16": tmp16, f"tmp17": tmp17, f"tmp2": tmp2, f"tmp20": tmp20, f"tmp24": tmp24, f"tmp25": tmp25, f"tmp27": tmp27, f"tmp28": tmp28, f"tmp3": tmp3, f"tmp30": tmp30, f"tmp31": tmp31, f"tmp33": tmp33, f"tmp34": tmp34, f"tmp35": tmp35, f"tmp38": tmp38, f"tmp39": tmp39, f"tmp4": tmp4, f"tmp40": tmp40, f"tmp41": tmp41, f"tmp43": tmp43, f"tmp44": tmp44, f"tmp45": tmp45, f"tmp46": tmp46, f"tmp48": tmp48, f"tmp49": tmp49, f"tmp5": tmp5, f"tmp52": tmp52, f"tmp55": tmp55, f"tmp56": tmp56, f"tmp7": tmp7, f"tmp8": tmp8}

def hbar_matvec_ip(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:56:37.305240.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp9 = einsum(ints.tmp3, (0, 1, 2, 3), r2, (4, 1, 3), (0, 2, 4))
    tmp10 = einsum(r2, (0, 1, 2), v.ooov, (3, 1, 4, 2), (0, 3, 4))
    tmp18 = np.copy(ints.tmp17)
    tmp18 += ints.tmp28
    tmp16 = np.copy(f.oo)
    tmp16 += ints.tmp0
    tmp16 += ints.tmp1
    tmp16 += np.transpose(ints.tmp5, (1, 0))
    tmp11 = np.copy(tmp9)
    del tmp9
    tmp11 += tmp10 * -1
    del tmp10
    tmp13 = np.copy(ints.tmp41)
    tmp13 += np.transpose(ints.tmp46, (0, 2, 1, 3))
    tmp7 = np.copy(ints.tmp25)
    tmp7 += ints.tmp35
    tmp19 = einsum(r1, (0,), tmp18, (1, 0, 2, 3), (1, 2, 3))
    del tmp18
    tmp17 = einsum(r2, (0, 1, 2), tmp16, (1, 3), (3, 0, 2)) * -1
    del tmp16
    tmp12 = einsum(tmp11, (0, 1, 2), t1, (1, 3), (0, 2, 3))
    del tmp11
    tmp14 = einsum(tmp13, (0, 1, 2, 3), r1, (2,), (0, 1, 3))
    del tmp13
    tmp5 = einsum(ints.tmp20, (0, 1, 2, 3), r2, (2, 1, 4), (0, 3, 4)) * -1
    tmp8 = einsum(tmp7, (0, 1, 2, 3), r2, (4, 1, 3), (0, 4, 2)) * -1
    del tmp7
    tmp6 = einsum(v.ovov, (0, 1, 2, 3), r2, (4, 2, 1), (4, 0, 3))
    tmp4 = einsum(ints.tmp4, (0, 1), r2, (2, 1, 3), (0, 2, 3))
    tmp22 = np.copy(f.ov)
    tmp22 += ints.tmp2
    tmp20 = np.copy(tmp17) * -1
    del tmp17
    tmp20 += tmp19
    del tmp19
    tmp15 = np.copy(tmp4) * -0.5
    del tmp4
    tmp15 += tmp5 * 0.5
    del tmp5
    tmp15 += tmp6
    del tmp6
    tmp15 += tmp8 * -1
    del tmp8
    tmp15 += tmp12 * -1
    del tmp12
    tmp15 += tmp14
    del tmp14
    tmp3 = einsum(r2, (0, 1, 2), v.oovv, (0, 1, 3, 2), (3,))
    tmp25 = np.copy(ints.tmp13)
    tmp25 += ints.tmp16
    tmp25 += ints.tmp27 * 0.5
    tmp25 += ints.tmp30 * 0.5
    tmp25 += ints.tmp40 * 0.5
    tmp25 += ints.tmp43 * 0.5
    tmp25 += ints.tmp45
    tmp25 += ints.tmp48
    tmp25 += ints.tmp55
    tmp25 += ints.tmp7
    tmp25 += f.ov * -1
    tmp25 += ints.tmp11 * -1
    tmp25 += ints.tmp38 * -1
    tmp25 += ints.tmp8 * -1
    tmp24 = np.copy(ints.tmp12)
    tmp24 += np.transpose(ints.tmp15, (2, 0, 1, 3))
    tmp24 += np.transpose(ints.tmp44, (2, 0, 1, 3)) * 0.5
    tmp24 += np.transpose(ints.tmp49, (2, 1, 0, 3))
    tmp24 += np.transpose(ints.tmp31, (2, 0, 1, 3)) * -0.5
    tmp24 += np.transpose(ints.tmp39, (2, 0, 1, 3)) * -1
    tmp24 += np.transpose(ints.tmp56, (2, 1, 0, 3)) * -1
    tmp24 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp21 = np.copy(ints.tmp33) * 0.5
    tmp21 += ints.tmp52
    tmp21 += v.oooo
    tmp23 = np.copy(np.transpose(ints.tmp24, (1, 0)))
    tmp23 += np.transpose(ints.tmp34, (1, 0)) * 0.5
    tmp23 += f.vv * -1
    tmp23 += einsum(tmp22, (0, 1), t1, (0, 2), (1, 2))
    del tmp22
    tmp1 = np.copy(f.ov)
    tmp1 += ints.tmp2
    tmp0 = np.copy(ints.tmp3)
    tmp0 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp2 = np.copy(f.oo) * 2
    tmp2 += ints.tmp0 * 2
    tmp2 += ints.tmp1 * 2
    tmp2 += np.transpose(ints.tmp4, (1, 0))
    tmp2 += np.transpose(ints.tmp5, (1, 0)) * 2
    r2new = einsum(tmp3, (0,), t2, (1, 2, 3, 0), (1, 2, 3)) * 0.5
    del tmp3
    r2new += tmp15 * -1
    r2new += np.transpose(tmp15, (1, 0, 2))
    del tmp15
    r2new += tmp20
    r2new += np.transpose(tmp20, (1, 0, 2)) * -1
    del tmp20
    r2new += einsum(tmp21, (0, 1, 2, 3), r2, (2, 3, 4), (0, 1, 4)) * 0.5
    del tmp21
    r2new += einsum(r2, (0, 1, 2), tmp23, (2, 3), (0, 1, 3)) * -1
    del tmp23
    r2new += einsum(tmp24, (0, 1, 2, 3), r1, (0,), (2, 1, 3)) * -1
    del tmp24
    r2new += einsum(tmp25, (0, 1), r1, (2,), (2, 0, 1)) * -1
    r2new += einsum(tmp25, (0, 1), r1, (2,), (0, 2, 1))
    del tmp25
    r1new = einsum(r2, (0, 1, 2), tmp0, (3, 0, 1, 2), (3,)) * 0.5
    del tmp0
    r1new += einsum(r2, (0, 1, 2), tmp1, (1, 2), (0,))
    del tmp1
    r1new += einsum(tmp2, (0, 1), r1, (0,), (1,)) * -0.5
    del tmp2

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_matvec_ea_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:56:52.751918.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp1 : array
    tmp12 : array
    tmp13 : array
    tmp15 : array
    tmp18 : array
    tmp19 : array
    tmp2 : array
    tmp23 : array
    tmp27 : array
    tmp28 : array
    tmp29 : array
    tmp30 : array
    tmp32 : array
    tmp34 : array
    tmp37 : array
    tmp38 : array
    tmp39 : array
    tmp4 : array
    tmp40 : array
    tmp41 : array
    tmp44 : array
    tmp47 : array
    tmp50 : array
    tmp56 : array
    tmp7 : array
    tmp8 : array
    tmp9 : array
    """

    tmp2 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp50 = einsum(tmp2, (0, 1), t1, (2, 1), (2, 0))
    tmp1 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp19 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))
    tmp32 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp38 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp9 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp56 = einsum(tmp50, (0, 1), t1, (1, 2), (0, 2))
    tmp47 = einsum(tmp1, (0, 1), t1, (2, 1), (2, 0))
    tmp44 = einsum(tmp19, (0, 1), t1, (0, 2), (1, 2))
    tmp41 = einsum(t1, (0, 1), tmp32, (2, 0), (2, 1))
    tmp40 = einsum(t2, (0, 1, 2, 3), tmp38, (4, 1, 0, 5), (4, 2, 3, 5)) * -1
    tmp39 = einsum(tmp38, (0, 1, 2, 3), t2, (2, 1, 4, 3), (0, 4))
    tmp37 = einsum(tmp2, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp34 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp30 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 3), (0, 2, 4, 5))
    tmp29 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp28 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 5, 0, 1), (4, 2, 3, 5))
    tmp27 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp23 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp18 = einsum(t1, (0, 1), v.vvvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp15 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp13 = einsum(t1, (0, 1), tmp9, (0, 2), (2, 1))
    tmp12 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp8 = einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    tmp7 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))
    tmp4 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 4, 3), (2, 4))

    return {f"tmp1": tmp1, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp15": tmp15, f"tmp18": tmp18, f"tmp19": tmp19, f"tmp2": tmp2, f"tmp23": tmp23, f"tmp27": tmp27, f"tmp28": tmp28, f"tmp29": tmp29, f"tmp30": tmp30, f"tmp32": tmp32, f"tmp34": tmp34, f"tmp37": tmp37, f"tmp38": tmp38, f"tmp39": tmp39, f"tmp4": tmp4, f"tmp40": tmp40, f"tmp41": tmp41, f"tmp44": tmp44, f"tmp47": tmp47, f"tmp50": tmp50, f"tmp56": tmp56, f"tmp7": tmp7, f"tmp8": tmp8, f"tmp9": tmp9}

def hbar_matvec_ea(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:56:52.777476.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp13 = np.copy(ints.tmp38)
    tmp13 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp0 = np.copy(f.ov)
    tmp0 += ints.tmp2
    tmp14 = einsum(r2, (0, 1, 2), tmp13, (3, 2, 4, 1), (3, 4, 0)) * -1
    tmp15 = einsum(r2, (0, 1, 2), tmp0, (3, 1), (2, 3, 0)) * -1
    tmp5 = einsum(r2, (0, 1, 2), v.oovv, (3, 4, 0, 1), (2, 3, 4))
    tmp11 = np.copy(f.vv) * 2
    tmp11 += np.transpose(ints.tmp4, (1, 0)) * -1
    tmp9 = np.copy(ints.tmp23)
    tmp9 += ints.tmp34
    tmp8 = np.copy(np.transpose(r2, (2, 0, 1)))
    tmp8 += einsum(r1, (0,), t1, (1, 2), (1, 0, 2))
    tmp16 = np.copy(np.transpose(tmp14, (1, 0, 2))) * -1
    del tmp14
    tmp16 += np.transpose(tmp15, (1, 0, 2)) * -1
    del tmp15
    tmp6 = einsum(v.ovvv, (0, 1, 2, 3), r2, (2, 3, 4), (4, 0, 1))
    tmp20 = einsum(ints.tmp1, (0, 1), r2, (2, 1, 3), (3, 0, 2))
    tmp21 = einsum(r1, (0,), ints.tmp30, (1, 2, 3, 0), (1, 2, 3))
    tmp25 = np.copy(np.transpose(tmp5, (0, 2, 1))) * -0.5
    tmp25 += einsum(tmp13, (0, 1, 2, 3), r1, (3,), (0, 1, 2))
    del tmp13
    tmp3 = einsum(r1, (0,), tmp0, (1, 0), (1,))
    tmp2 = einsum(r2, (0, 1, 2), v.oovv, (3, 2, 0, 1), (3,))
    tmp12 = einsum(tmp11, (0, 1), r2, (2, 0, 3), (3, 1, 2)) * -0.5
    del tmp11
    tmp10 = einsum(tmp8, (0, 1, 2), tmp9, (3, 0, 4, 1), (3, 4, 2))
    del tmp9
    tmp18 = einsum(tmp8, (0, 1, 2), v.ovov, (3, 1, 0, 4), (3, 4, 2))
    del tmp8
    tmp17 = einsum(tmp16, (0, 1, 2), t1, (0, 3), (1, 2, 3))
    del tmp16
    tmp7 = einsum(tmp6, (0, 1, 2), t1, (1, 3), (0, 3, 2))
    del tmp6
    tmp22 = np.copy(tmp20)
    del tmp20
    tmp22 += tmp21
    del tmp21
    tmp27 = np.copy(ints.tmp13)
    tmp27 += ints.tmp15
    tmp27 += ints.tmp27 * 0.5
    tmp27 += ints.tmp29 * 0.5
    tmp27 += ints.tmp39 * 0.5
    tmp27 += ints.tmp41 * 0.5
    tmp27 += ints.tmp44
    tmp27 += ints.tmp47
    tmp27 += ints.tmp56
    tmp27 += ints.tmp7
    tmp27 += f.ov * -1
    tmp27 += ints.tmp12 * -1
    tmp27 += ints.tmp37 * -1
    tmp27 += ints.tmp8 * -1
    tmp24 = np.copy(f.oo)
    tmp24 += ints.tmp19
    tmp24 += np.transpose(ints.tmp32, (1, 0)) * 0.5
    tmp24 += np.transpose(ints.tmp50, (1, 0))
    tmp24 += ints.tmp9
    tmp26 = einsum(tmp25, (0, 1, 2), t1, (1, 3), (0, 2, 3)) * 2
    del tmp25
    tmp23 = np.copy(ints.tmp18)
    tmp23 += ints.tmp40 * 0.5
    tmp23 += ints.tmp28 * -0.5
    tmp23 += np.transpose(v.ovvv, (0, 2, 3, 1)) * -1
    tmp4 = np.copy(tmp2) * 0.5
    del tmp2
    tmp4 += tmp3
    del tmp3
    tmp19 = np.copy(tmp7) * 0.5
    del tmp7
    tmp19 += tmp10 * -1
    del tmp10
    tmp19 += tmp12 * -1
    del tmp12
    tmp19 += tmp17
    del tmp17
    tmp19 += np.transpose(tmp18, (0, 2, 1)) * -1
    del tmp18
    tmp1 = np.copy(np.transpose(ints.tmp1, (1, 0)))
    tmp1 += np.transpose(ints.tmp4, (1, 0)) * 0.5
    tmp1 += f.vv * -1
    r2new = einsum(tmp5, (0, 1, 2), t2, (2, 1, 3, 4), (3, 4, 0)) * -0.25
    del tmp5
    r2new += einsum(r2, (0, 1, 2), v.vvvv, (3, 4, 0, 1), (3, 4, 2)) * 0.5
    r2new += np.transpose(tmp19, (1, 2, 0)) * -1
    r2new += np.transpose(tmp19, (2, 1, 0))
    del tmp19
    r2new += np.transpose(tmp22, (1, 2, 0))
    r2new += np.transpose(tmp22, (2, 1, 0)) * -1
    del tmp22
    r2new += einsum(r1, (0,), tmp23, (1, 2, 3, 0), (3, 2, 1)) * -1
    del tmp23
    r2new += einsum(tmp24, (0, 1), r2, (2, 3, 0), (2, 3, 1)) * -1
    del tmp24
    r2new += einsum(tmp4, (0,), t2, (1, 0, 2, 3), (2, 3, 1))
    r2new += einsum(t1, (0, 1), tmp26, (2, 0, 3), (1, 3, 2)) * -0.5
    del tmp26
    r2new += einsum(r1, (0,), tmp27, (1, 2), (0, 2, 1)) * -1
    r2new += einsum(tmp27, (0, 1), r1, (2,), (1, 2, 0))
    del tmp27
    r1new = einsum(v.ovvv, (0, 1, 2, 3), r2, (2, 3, 0), (1,)) * -0.5
    r1new += einsum(r2, (0, 1, 2), tmp0, (2, 1), (0,))
    del tmp0
    r1new += einsum(tmp1, (0, 1), r1, (0,), (1,)) * -1
    del tmp1
    r1new += einsum(tmp4, (0,), t1, (0, 1), (1,)) * -1
    del tmp4

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_matvec_ee_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:57:28.419927.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp0 : array
    tmp10 : array
    tmp101 : array
    tmp105 : array
    tmp106 : array
    tmp12 : array
    tmp17 : array
    tmp18 : array
    tmp2 : array
    tmp22 : array
    tmp23 : array
    tmp26 : array
    tmp30 : array
    tmp32 : array
    tmp33 : array
    tmp37 : array
    tmp4 : array
    tmp40 : array
    tmp48 : array
    tmp49 : array
    tmp5 : array
    tmp51 : array
    tmp54 : array
    tmp55 : array
    tmp57 : array
    tmp6 : array
    tmp62 : array
    tmp64 : array
    tmp7 : array
    tmp70 : array
    tmp71 : array
    tmp74 : array
    tmp75 : array
    tmp77 : array
    tmp80 : array
    tmp81 : array
    tmp87 : array
    tmp88 : array
    tmp9 : array
    tmp93 : array
    tmp94 : array
    """

    tmp7 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp6 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp101 = einsum(tmp7, (0, 1, 2, 3), t1, (4, 3), (0, 4, 2, 1))
    tmp12 = einsum(tmp6, (0, 1), t1, (2, 1), (2, 0))
    tmp5 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp4 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp40 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp2 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))
    tmp62 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp9 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp0 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp106 = einsum(t1, (0, 1), tmp101, (2, 3, 0, 4), (2, 3, 4, 1)) * -1
    tmp105 = einsum(tmp12, (0, 1), t1, (1, 2), (0, 2))
    tmp94 = einsum(tmp5, (0, 1, 2, 3), t1, (4, 3), (0, 4, 1, 2)) * -1
    tmp93 = einsum(tmp4, (0, 1), t1, (2, 1), (2, 0))
    tmp88 = einsum(t1, (0, 1), tmp40, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp87 = einsum(tmp2, (0, 1), t1, (0, 2), (1, 2))
    tmp81 = einsum(t1, (0, 1), tmp62, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp80 = einsum(tmp9, (0, 1), t1, (1, 2), (0, 2))
    tmp77 = einsum(t2, (0, 1, 2, 3), tmp7, (4, 1, 0, 5), (4, 2, 3, 5)) * -1
    tmp75 = einsum(tmp7, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5))
    tmp74 = einsum(t2, (0, 1, 2, 3), tmp7, (4, 1, 0, 3), (4, 2))
    tmp71 = einsum(t2, (0, 1, 2, 3), tmp6, (4, 3), (0, 1, 4, 2)) * -1
    tmp70 = einsum(tmp6, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp64 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp57 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 3), (0, 2, 4, 5))
    tmp55 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp54 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp51 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 5, 0, 1), (4, 2, 3, 5))
    tmp49 = einsum(t2, (0, 1, 2, 3), v.ooov, (4, 1, 5, 3), (0, 4, 5, 2))
    tmp48 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp37 = einsum(v.vvvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp33 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp32 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp30 = einsum(t1, (0, 1), v.oooo, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp26 = einsum(tmp0, (0, 1), t1, (0, 2), (1, 2))
    tmp23 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp22 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp18 = einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    tmp17 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))
    tmp10 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 4, 3), (2, 4))

    return {f"tmp0": tmp0, f"tmp10": tmp10, f"tmp101": tmp101, f"tmp105": tmp105, f"tmp106": tmp106, f"tmp12": tmp12, f"tmp17": tmp17, f"tmp18": tmp18, f"tmp2": tmp2, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp26": tmp26, f"tmp30": tmp30, f"tmp32": tmp32, f"tmp33": tmp33, f"tmp37": tmp37, f"tmp4": tmp4, f"tmp40": tmp40, f"tmp48": tmp48, f"tmp49": tmp49, f"tmp5": tmp5, f"tmp51": tmp51, f"tmp54": tmp54, f"tmp55": tmp55, f"tmp57": tmp57, f"tmp6": tmp6, f"tmp62": tmp62, f"tmp64": tmp64, f"tmp7": tmp7, f"tmp70": tmp70, f"tmp71": tmp71, f"tmp74": tmp74, f"tmp75": tmp75, f"tmp77": tmp77, f"tmp80": tmp80, f"tmp81": tmp81, f"tmp87": tmp87, f"tmp88": tmp88, f"tmp9": tmp9, f"tmp93": tmp93, f"tmp94": tmp94}

def hbar_matvec_ee(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:57:28.463427.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp0 = einsum(r1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp2 = np.copy(f.ov)
    tmp2 += ints.tmp6
    tmp40 = np.copy(ints.tmp5)
    tmp40 += ints.tmp64
    tmp20 = einsum(tmp0, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    tmp19 = einsum(v.ovvv, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp26 = einsum(r1, (0, 1), v.ooov, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp7 = einsum(tmp2, (0, 1), r1, (2, 1), (0, 2))
    tmp32 = einsum(r1, (0, 1), ints.tmp7, (2, 0, 3, 1), (2, 3))
    tmp6 = einsum(r2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp42 = einsum(v.ooov, (0, 1, 2, 3), r2, (4, 1, 5, 3), (4, 0, 2, 5))
    tmp44 = einsum(tmp40, (0, 1, 2, 3), r1, (4, 3), (0, 1, 4, 2))
    tmp43 = einsum(ints.tmp7, (0, 1, 2, 3), r2, (4, 1, 5, 3), (0, 2, 4, 5))
    tmp10 = einsum(v.ovvv, (0, 1, 2, 3), r1, (0, 3), (1, 2))
    tmp50 = einsum(r1, (0, 1), ints.tmp7, (2, 3, 4, 1), (2, 3, 4, 0))
    tmp17 = einsum(tmp2, (0, 1), r2, (2, 3, 4, 1), (0, 2, 3, 4)) * -1
    tmp13 = einsum(v.oovv, (0, 1, 2, 3), r2, (0, 1, 4, 3), (4, 2))
    tmp15 = np.copy(ints.tmp106)
    tmp15 += np.transpose(ints.tmp23, (1, 2, 0, 3))
    tmp21 = np.copy(np.transpose(tmp19, (1, 0, 2, 3)))
    del tmp19
    tmp21 += tmp20 * -2
    del tmp20
    tmp27 = einsum(t1, (0, 1), tmp26, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp26
    tmp5 = np.copy(f.oo)
    tmp5 += ints.tmp0
    tmp5 += np.transpose(ints.tmp12, (1, 0))
    tmp5 += ints.tmp2
    tmp5 += np.transpose(ints.tmp9, (1, 0)) * 0.5
    tmp29 = np.copy(ints.tmp51)
    tmp29 += ints.tmp77 * -1
    tmp24 = einsum(v.ooov, (0, 1, 2, 3), r1, (1, 3), (0, 2))
    tmp33 = np.copy(tmp32)
    del tmp32
    tmp33 += tmp6 * 0.5
    tmp33 += np.transpose(tmp7, (1, 0))
    tmp55 = np.copy(ints.tmp55)
    tmp55 += ints.tmp71 * 2
    tmp55 += ints.tmp81 * -1
    tmp53 = np.copy(ints.tmp10) * 0.5
    tmp53 += ints.tmp4
    tmp38 = einsum(r1, (0, 1), v.ovov, (2, 3, 4, 1), (0, 2, 4, 3))
    tmp47 = np.copy(ints.tmp33)
    tmp47 += ints.tmp49
    tmp45 = np.copy(tmp42)
    del tmp42
    tmp45 += tmp43 * -1
    del tmp43
    tmp45 += tmp44
    del tmp44
    tmp9 = einsum(r1, (0, 1), ints.tmp94, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp11 = einsum(tmp10, (0, 1), t2, (2, 3, 4, 1), (2, 3, 4, 0)) * -1
    del tmp10
    tmp64 = einsum(r1, (0, 1), ints.tmp37, (2, 3, 4, 1), (2, 0, 3, 4))
    tmp65 = einsum(r1, (0, 1), v.ovvv, (2, 1, 3, 4), (0, 2, 3, 4))
    tmp58 = np.copy(ints.tmp75)
    tmp58 += np.transpose(ints.tmp88, (0, 2, 1, 3))
    tmp51 = einsum(t1, (0, 1), tmp50, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp50
    tmp18 = einsum(tmp17, (0, 1, 2, 3), t1, (0, 4), (2, 1, 4, 3))
    del tmp17
    tmp14 = einsum(tmp13, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    del tmp13
    tmp16 = einsum(r1, (0, 1), tmp15, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp15
    tmp22 = einsum(tmp21, (0, 1, 2, 3), t1, (2, 4), (0, 1, 4, 3)) * 0.5
    del tmp21
    tmp28 = einsum(t1, (0, 1), tmp27, (2, 0, 3, 4), (2, 3, 4, 1)) * -1
    del tmp27
    tmp31 = einsum(r2, (0, 1, 2, 3), tmp5, (1, 4), (4, 0, 2, 3)) * -1
    tmp30 = einsum(r1, (0, 1), tmp29, (2, 3, 4, 1), (2, 0, 3, 4)) * 0.5
    del tmp29
    tmp25 = einsum(tmp24, (0, 1), t2, (2, 0, 3, 4), (2, 1, 3, 4)) * -1
    del tmp24
    tmp34 = einsum(t2, (0, 1, 2, 3), tmp33, (4, 1), (0, 4, 2, 3)) * -1
    del tmp33
    tmp62 = einsum(f.vv, (0, 1), r2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp60 = einsum(ints.tmp30, (0, 1, 2, 3), r1, (2, 4), (0, 1, 3, 4))
    tmp61 = einsum(v.ooov, (0, 1, 2, 3), r1, (2, 4), (0, 1, 4, 3))
    tmp56 = einsum(tmp55, (0, 1, 2, 3), r1, (2, 4), (0, 1, 3, 4)) * 0.5
    del tmp55
    tmp54 = einsum(tmp53, (0, 1), r2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    del tmp53
    tmp36 = einsum(r1, (0, 1), ints.tmp57, (2, 3, 4, 1), (2, 0, 3, 4))
    tmp39 = einsum(tmp38, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3))
    del tmp38
    tmp48 = einsum(tmp47, (0, 1, 2, 3), r1, (1, 4), (0, 2, 3, 4))
    del tmp47
    tmp41 = einsum(r2, (0, 1, 2, 3), tmp40, (4, 1, 5, 3), (4, 0, 5, 2))
    del tmp40
    tmp37 = einsum(v.ovov, (0, 1, 2, 3), r2, (4, 2, 5, 1), (4, 0, 5, 3))
    tmp46 = einsum(t1, (0, 1), tmp45, (2, 0, 3, 4), (2, 3, 1, 4))
    del tmp45
    tmp1 = np.copy(ints.tmp7)
    tmp1 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp12 = np.copy(tmp9)
    del tmp9
    tmp12 += tmp11
    del tmp11
    tmp70 = np.copy(ints.tmp105)
    tmp70 += ints.tmp17
    tmp70 += ints.tmp26
    tmp70 += ints.tmp32
    tmp70 += ints.tmp48 * 0.5
    tmp70 += ints.tmp54 * 0.5
    tmp70 += ints.tmp74 * 0.5
    tmp70 += ints.tmp80 * 0.5
    tmp70 += ints.tmp87
    tmp70 += ints.tmp93
    tmp70 += f.ov * -1
    tmp70 += ints.tmp18 * -1
    tmp70 += ints.tmp22 * -1
    tmp70 += ints.tmp70 * -1
    tmp69 = np.copy(t2)
    tmp69 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp67 = np.copy(ints.tmp101)
    tmp67 += ints.tmp62 * 0.5
    tmp67 += v.oooo
    tmp67 += np.transpose(ints.tmp40, (0, 3, 1, 2)) * -1
    tmp67 += np.transpose(ints.tmp40, (3, 0, 1, 2))
    tmp66 = np.copy(tmp64)
    del tmp64
    tmp66 += np.transpose(tmp65, (0, 1, 3, 2)) * -1
    del tmp65
    tmp59 = einsum(tmp58, (0, 1, 2, 3), r1, (2, 4), (0, 1, 3, 4))
    del tmp58
    tmp71 = np.copy(ints.tmp105) * 2
    tmp71 += ints.tmp17 * 2
    tmp71 += ints.tmp26 * 2
    tmp71 += ints.tmp32 * 2
    tmp71 += ints.tmp48
    tmp71 += ints.tmp54
    tmp71 += ints.tmp74
    tmp71 += ints.tmp80
    tmp71 += ints.tmp87 * 2
    tmp71 += ints.tmp93 * 2
    tmp71 += f.ov * -2
    tmp71 += ints.tmp18 * -2
    tmp71 += ints.tmp22 * -2
    tmp71 += ints.tmp70 * -2
    tmp52 = einsum(tmp51, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3))
    del tmp51
    tmp23 = np.copy(tmp14) * 0.5
    del tmp14
    tmp23 += tmp16
    del tmp16
    tmp23 += np.transpose(tmp18, (1, 0, 3, 2)) * -1
    del tmp18
    tmp23 += np.transpose(tmp22, (1, 0, 2, 3))
    del tmp22
    tmp35 = np.copy(np.transpose(tmp25, (0, 1, 3, 2))) * -1
    del tmp25
    tmp35 += np.transpose(tmp28, (0, 1, 3, 2))
    del tmp28
    tmp35 += np.transpose(tmp30, (0, 1, 3, 2)) * -1
    del tmp30
    tmp35 += np.transpose(tmp31, (0, 1, 3, 2))
    del tmp31
    tmp35 += np.transpose(tmp34, (1, 0, 3, 2))
    del tmp34
    tmp68 = einsum(v.oovv, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp63 = np.copy(tmp60) * -1
    del tmp60
    tmp63 += np.transpose(tmp61, (1, 0, 2, 3))
    del tmp61
    tmp63 += np.transpose(tmp62, (1, 0, 2, 3))
    del tmp62
    tmp57 = np.copy(np.transpose(tmp54, (1, 0, 2, 3))) * -1
    del tmp54
    tmp57 += tmp56 * -1
    del tmp56
    tmp49 = np.copy(tmp36)
    del tmp36
    tmp49 += tmp37
    del tmp37
    tmp49 += tmp39 * -1
    del tmp39
    tmp49 += tmp41 * -1
    del tmp41
    tmp49 += np.transpose(tmp46, (0, 1, 3, 2))
    del tmp46
    tmp49 += tmp48
    del tmp48
    tmp3 = np.copy(ints.tmp5)
    tmp3 += np.transpose(v.ovov, (0, 2, 3, 1)) * -1
    tmp8 = np.copy(np.transpose(tmp6, (1, 0))) * 0.5
    del tmp6
    tmp8 += einsum(tmp1, (0, 1, 2, 3), r1, (1, 3), (2, 0))
    tmp8 += tmp7
    del tmp7
    tmp4 = np.copy(np.transpose(ints.tmp10, (1, 0))) * 0.5
    tmp4 += np.transpose(ints.tmp4, (1, 0))
    tmp4 += f.vv * -1
    r2new = einsum(v.vvvv, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1)) * 0.5
    r2new += tmp12
    r2new += np.transpose(tmp12, (0, 1, 3, 2)) * -1
    del tmp12
    r2new += tmp23 * -1
    r2new += np.transpose(tmp23, (0, 1, 3, 2))
    del tmp23
    r2new += tmp35
    r2new += np.transpose(tmp35, (1, 0, 2, 3)) * -1
    del tmp35
    r2new += tmp49 * -1
    r2new += np.transpose(tmp49, (0, 1, 3, 2))
    r2new += np.transpose(tmp49, (1, 0, 2, 3))
    r2new += np.transpose(tmp49, (1, 0, 3, 2)) * -1
    del tmp49
    r2new += tmp52 * -1
    r2new += np.transpose(tmp52, (1, 0, 2, 3))
    del tmp52
    r2new += np.transpose(tmp57, (1, 0, 2, 3))
    r2new += np.transpose(tmp57, (1, 0, 3, 2)) * -1
    del tmp57
    r2new += tmp59
    r2new += np.transpose(tmp59, (0, 1, 3, 2)) * -1
    r2new += np.transpose(tmp59, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp59, (1, 0, 3, 2))
    del tmp59
    r2new += np.transpose(tmp63, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp63, (1, 0, 3, 2))
    del tmp63
    r2new += np.transpose(tmp66, (0, 1, 3, 2))
    r2new += np.transpose(tmp66, (1, 0, 3, 2)) * -1
    del tmp66
    r2new += einsum(r2, (0, 1, 2, 3), tmp67, (4, 5, 0, 1), (4, 5, 2, 3)) * 0.5
    del tmp67
    r2new += einsum(tmp69, (0, 1, 2, 3), tmp68, (4, 5, 0, 1), (5, 4, 3, 2)) * 0.25
    del tmp69, tmp68
    r2new += einsum(r1, (0, 1), tmp70, (2, 3), (2, 0, 3, 1)) * -1
    r2new += einsum(r1, (0, 1), tmp70, (2, 3), (0, 2, 1, 3)) * -1
    r2new += einsum(r1, (0, 1), tmp71, (2, 3), (0, 2, 3, 1)) * 0.5
    del tmp71
    r2new += einsum(tmp70, (0, 1), r1, (2, 3), (0, 2, 3, 1))
    del tmp70
    r1new = einsum(v.ovvv, (0, 1, 2, 3), r2, (4, 0, 2, 3), (4, 1)) * -0.5
    r1new += einsum(tmp0, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    del tmp0
    r1new += einsum(tmp1, (0, 1, 2, 3), r2, (1, 2, 4, 3), (0, 4)) * 0.5
    del tmp1
    r1new += einsum(tmp2, (0, 1), r2, (2, 0, 3, 1), (2, 3))
    del tmp2
    r1new += einsum(r1, (0, 1), tmp3, (2, 0, 3, 1), (2, 3))
    del tmp3
    r1new += einsum(tmp4, (0, 1), r1, (2, 0), (2, 1)) * -1
    del tmp4
    r1new += einsum(r1, (0, 1), tmp5, (0, 2), (2, 1)) * -1
    del tmp5
    r1new += einsum(tmp8, (0, 1), t1, (0, 2), (1, 2)) * -1
    del tmp8

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_lmatvec_ip_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:57:39.456121.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp0 : array
    tmp1 : array
    tmp10 : array
    tmp11 : array
    tmp12 : array
    tmp13 : array
    tmp14 : array
    tmp15 : array
    tmp16 : array
    tmp17 : array
    tmp18 : array
    tmp19 : array
    tmp2 : array
    tmp20 : array
    tmp21 : array
    tmp22 : array
    tmp23 : array
    tmp24 : array
    tmp25 : array
    tmp26 : array
    tmp27 : array
    tmp28 : array
    tmp29 : array
    tmp3 : array
    tmp30 : array
    tmp31 : array
    tmp32 : array
    tmp33 : array
    tmp34 : array
    tmp4 : array
    tmp43 : array
    tmp44 : array
    tmp5 : array
    tmp6 : array
    tmp7 : array
    tmp8 : array
    tmp9 : array
    """

    tmp18 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp15 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp33 = einsum(tmp18, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp24 = einsum(tmp15, (0, 1), t1, (2, 1), (2, 0))
    tmp30 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp28 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp26 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp6 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp22 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp10 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 2, 3), (4, 0))
    tmp0 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp44 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp43 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    tmp34 = einsum(t1, (0, 1), tmp33, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp32 = einsum(tmp24, (0, 1), t1, (1, 2), (0, 2))
    tmp31 = einsum(tmp30, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp29 = einsum(tmp28, (0, 1), t1, (2, 1), (2, 0))
    tmp27 = einsum(t1, (0, 1), tmp26, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp25 = einsum(tmp6, (0, 1), t1, (0, 2), (1, 2))
    tmp23 = einsum(t1, (0, 1), tmp22, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp21 = einsum(t1, (0, 1), tmp10, (2, 0), (2, 1))
    tmp20 = einsum(tmp18, (0, 1, 2, 3), t2, (4, 2, 5, 3), (0, 4, 1, 5)) * -1
    tmp19 = einsum(t2, (0, 1, 2, 3), tmp18, (4, 1, 0, 3), (4, 2))
    tmp17 = einsum(tmp15, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    tmp16 = einsum(tmp15, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp14 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp13 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 0, 2, 3), (4, 1))
    tmp12 = einsum(t2, (0, 1, 2, 3), v.ooov, (4, 1, 5, 3), (0, 4, 5, 2))
    tmp11 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp9 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp8 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp7 = einsum(t1, (0, 1), v.oooo, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp5 = einsum(tmp0, (0, 1), t1, (0, 2), (1, 2))
    tmp4 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp3 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp2 = einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    tmp1 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))

    return {f"tmp0": tmp0, f"tmp1": tmp1, f"tmp10": tmp10, f"tmp11": tmp11, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp14": tmp14, f"tmp15": tmp15, f"tmp16": tmp16, f"tmp17": tmp17, f"tmp18": tmp18, f"tmp19": tmp19, f"tmp2": tmp2, f"tmp20": tmp20, f"tmp21": tmp21, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp24": tmp24, f"tmp25": tmp25, f"tmp26": tmp26, f"tmp27": tmp27, f"tmp28": tmp28, f"tmp29": tmp29, f"tmp3": tmp3, f"tmp30": tmp30, f"tmp31": tmp31, f"tmp32": tmp32, f"tmp33": tmp33, f"tmp34": tmp34, f"tmp4": tmp4, f"tmp43": tmp43, f"tmp44": tmp44, f"tmp5": tmp5, f"tmp6": tmp6, f"tmp7": tmp7, f"tmp8": tmp8, f"tmp9": tmp9}

def hbar_lmatvec_ip(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:57:39.487597.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp9 = np.copy(ints.tmp30)
    tmp9 += ints.tmp44
    tmp6 = einsum(r2, (0, 1, 2), t1, (3, 2), (0, 1, 3))
    tmp10 = einsum(tmp9, (0, 1, 2, 3), r2, (4, 0, 2), (1, 4, 3)) * -1
    del tmp9
    tmp5 = einsum(v.ovov, (0, 1, 2, 3), r2, (4, 2, 1), (4, 0, 3))
    tmp8 = einsum(tmp6, (0, 1, 2), v.ooov, (3, 2, 1, 4), (0, 3, 4))
    tmp7 = einsum(ints.tmp18, (0, 1, 2, 3), tmp6, (4, 0, 2), (1, 4, 3))
    del tmp6
    tmp4 = einsum(r2, (0, 1, 2), ints.tmp10, (1, 3), (3, 0, 2))
    tmp11 = np.copy(f.ov)
    tmp11 += ints.tmp15
    tmp13 = np.copy(f.oo)
    tmp13 += np.transpose(ints.tmp0, (1, 0))
    tmp13 += ints.tmp24
    tmp13 += np.transpose(ints.tmp6, (1, 0))
    tmp12 = np.copy(tmp4) * -0.5
    del tmp4
    tmp12 += tmp5
    del tmp5
    tmp12 += tmp7 * -1
    del tmp7
    tmp12 += tmp8 * -1
    del tmp8
    tmp12 += tmp10 * -1
    del tmp10
    tmp12 += einsum(tmp11, (0, 1), r1, (2,), (0, 2, 1))
    tmp14 = einsum(r2, (0, 1, 2), tmp13, (1, 3), (3, 0, 2)) * -1
    del tmp13
    tmp17 = np.copy(ints.tmp18)
    tmp17 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp15 = np.copy(ints.tmp22)
    tmp15 += ints.tmp33 * 2
    tmp15 += v.oooo * 2
    tmp15 += np.transpose(ints.tmp26, (0, 3, 1, 2)) * -4
    tmp3 = einsum(r2, (0, 1, 2), t2, (0, 1, 3, 2), (3,))
    tmp16 = np.copy(ints.tmp28)
    tmp16 += ints.tmp43 * 0.5
    tmp16 += f.vv * -1
    tmp16 += einsum(tmp11, (0, 1), t1, (0, 2), (2, 1))
    del tmp11
    tmp1 = np.copy(ints.tmp11)
    tmp1 += ints.tmp13
    tmp1 += ints.tmp19
    tmp1 += ints.tmp1 * 2
    tmp1 += ints.tmp21
    tmp1 += ints.tmp25 * 2
    tmp1 += ints.tmp29 * 2
    tmp1 += ints.tmp32 * 2
    tmp1 += ints.tmp5 * 2
    tmp1 += ints.tmp8 * 2
    tmp1 += f.ov * -2
    tmp1 += ints.tmp16 * -2
    tmp1 += ints.tmp2 * -2
    tmp1 += ints.tmp3 * -2
    tmp0 = np.copy(ints.tmp12)
    tmp0 += np.transpose(ints.tmp23, (0, 2, 1, 3)) * 0.25
    tmp0 += np.transpose(ints.tmp34, (0, 2, 1, 3)) * 0.5
    tmp0 += np.transpose(ints.tmp4, (1, 0, 2, 3)) * 0.5
    tmp0 += np.transpose(ints.tmp7, (0, 2, 1, 3)) * 0.5
    tmp0 += ints.tmp9
    tmp0 += np.transpose(ints.tmp14, (0, 2, 1, 3)) * -0.25
    tmp0 += np.transpose(ints.tmp17, (0, 2, 1, 3)) * -0.5
    tmp0 += np.transpose(ints.tmp20, (0, 2, 1, 3)) * -1
    tmp0 += ints.tmp27 * -1
    tmp0 += np.transpose(ints.tmp31, (0, 2, 1, 3)) * -0.5
    tmp0 += np.transpose(v.ooov, (0, 2, 1, 3)) * -0.5
    tmp2 = np.copy(f.oo) * 2
    tmp2 += np.transpose(ints.tmp0, (1, 0)) * 2
    tmp2 += ints.tmp10
    tmp2 += ints.tmp24 * 2
    tmp2 += np.transpose(ints.tmp6, (1, 0)) * 2
    r2new = einsum(tmp3, (0,), v.oovv, (1, 2, 3, 0), (1, 2, 3)) * 0.5
    del tmp3
    r2new += tmp12 * -1
    r2new += np.transpose(tmp12, (1, 0, 2))
    del tmp12
    r2new += tmp14 * -1
    r2new += np.transpose(tmp14, (1, 0, 2))
    del tmp14
    r2new += einsum(tmp15, (0, 1, 2, 3), r2, (0, 1, 4), (2, 3, 4)) * 0.25
    del tmp15
    r2new += einsum(r2, (0, 1, 2), tmp16, (2, 3), (0, 1, 3)) * -1
    del tmp16
    r2new += einsum(r1, (0,), tmp17, (0, 1, 2, 3), (2, 1, 3)) * -1
    del tmp17
    r1new = einsum(r2, (0, 1, 2), tmp0, (0, 3, 1, 2), (3,))
    del tmp0
    r1new += einsum(r2, (0, 1, 2), tmp1, (1, 2), (0,)) * -0.5
    del tmp1
    r1new += einsum(tmp2, (0, 1), r1, (0,), (1,)) * -0.5
    del tmp2

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_lmatvec_ea_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:57:51.571408.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp1 : array
    tmp10 : array
    tmp11 : array
    tmp12 : array
    tmp13 : array
    tmp14 : array
    tmp15 : array
    tmp16 : array
    tmp17 : array
    tmp18 : array
    tmp19 : array
    tmp2 : array
    tmp20 : array
    tmp21 : array
    tmp22 : array
    tmp23 : array
    tmp24 : array
    tmp25 : array
    tmp27 : array
    tmp28 : array
    tmp29 : array
    tmp3 : array
    tmp30 : array
    tmp5 : array
    tmp6 : array
    tmp7 : array
    tmp8 : array
    """

    tmp16 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp29 = einsum(tmp16, (0, 1), t1, (2, 1), (2, 0))
    tmp7 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp24 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))
    tmp21 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 2, 3), (4, 0))
    tmp18 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp5 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp30 = einsum(t1, (0, 1), tmp29, (2, 0), (2, 1))
    tmp28 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp27 = einsum(tmp7, (0, 1), t1, (2, 1), (2, 0))
    tmp25 = einsum(tmp24, (0, 1), t1, (0, 2), (1, 2))
    tmp23 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp22 = einsum(tmp21, (0, 1), t1, (1, 2), (0, 2))
    tmp20 = einsum(t2, (0, 1, 2, 3), tmp18, (4, 1, 0, 5), (4, 2, 3, 5)) * -1
    tmp19 = einsum(t2, (0, 1, 2, 3), tmp18, (4, 1, 0, 3), (4, 2))
    tmp17 = einsum(tmp16, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp15 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 3), (0, 2, 4, 5))
    tmp14 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 0, 2, 3), (4, 1))
    tmp13 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 5, 0, 1), (4, 2, 3, 5))
    tmp12 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp11 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    tmp10 = einsum(v.vvvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp8 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp6 = einsum(t1, (0, 1), tmp5, (0, 2), (2, 1))
    tmp3 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp2 = einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    tmp1 = einsum(f.oo, (0, 1), t1, (1, 2), (0, 2))

    return {f"tmp1": tmp1, f"tmp10": tmp10, f"tmp11": tmp11, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp14": tmp14, f"tmp15": tmp15, f"tmp16": tmp16, f"tmp17": tmp17, f"tmp18": tmp18, f"tmp19": tmp19, f"tmp2": tmp2, f"tmp20": tmp20, f"tmp21": tmp21, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp24": tmp24, f"tmp25": tmp25, f"tmp27": tmp27, f"tmp28": tmp28, f"tmp29": tmp29, f"tmp3": tmp3, f"tmp30": tmp30, f"tmp5": tmp5, f"tmp6": tmp6, f"tmp7": tmp7, f"tmp8": tmp8}

def hbar_lmatvec_ea(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:57:51.596781.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp10 = np.copy(f.ov)
    tmp10 += ints.tmp16
    tmp17 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3))
    tmp14 = einsum(tmp10, (0, 1), t1, (0, 2), (1, 2)) * 2
    tmp11 = einsum(ints.tmp18, (0, 1, 2, 3), t1, (2, 4), (0, 1, 3, 4))
    tmp18 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3)))
    tmp18 += np.transpose(tmp17, (1, 0, 3, 2)) * -1
    del tmp17
    tmp15 = np.copy(ints.tmp11)
    tmp15 += f.vv * -2
    tmp15 += np.transpose(tmp14, (1, 0))
    del tmp14
    tmp12 = np.copy(ints.tmp23)
    tmp12 += ints.tmp28
    tmp12 += np.transpose(tmp11, (0, 1, 3, 2)) * -1
    del tmp11
    tmp7 = einsum(r1, (0,), t1, (1, 0), (1,))
    tmp8 = einsum(t2, (0, 1, 2, 3), r2, (2, 3, 1), (0,))
    tmp19 = einsum(r2, (0, 1, 2), tmp18, (2, 3, 4, 1), (3, 4, 0)) * -1
    del tmp18
    tmp16 = einsum(tmp15, (0, 1), r2, (2, 0, 3), (3, 1, 2)) * -0.5
    del tmp15
    tmp13 = einsum(r2, (0, 1, 2), tmp12, (2, 3, 1, 4), (3, 4, 0)) * -1
    del tmp12
    tmp22 = np.copy(t2)
    tmp22 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp1 = einsum(t1, (0, 1), r2, (2, 1, 3), (3, 0, 2))
    tmp9 = np.copy(tmp7)
    del tmp7
    tmp9 += tmp8 * 0.5
    del tmp8
    tmp20 = np.copy(tmp13) * -1
    del tmp13
    tmp20 += tmp16
    del tmp16
    tmp20 += np.transpose(tmp19, (0, 2, 1)) * -1
    del tmp19
    tmp20 += einsum(tmp10, (0, 1), r1, (2,), (0, 1, 2))
    tmp24 = np.copy(f.oo)
    tmp24 += ints.tmp21 * 0.5
    tmp24 += np.transpose(ints.tmp24, (1, 0))
    tmp24 += ints.tmp29
    tmp24 += np.transpose(ints.tmp5, (1, 0))
    tmp21 = einsum(ints.tmp7, (0, 1), r2, (2, 0, 3), (3, 1, 2))
    tmp23 = einsum(tmp22, (0, 1, 2, 3), r2, (2, 3, 4), (4, 1, 0)) * -1
    del tmp22
    tmp5 = np.copy(ints.tmp12) * 0.5
    tmp5 += ints.tmp14 * 0.5
    tmp5 += ints.tmp19 * 0.5
    tmp5 += ints.tmp1
    tmp5 += ints.tmp22 * 0.5
    tmp5 += ints.tmp25
    tmp5 += ints.tmp27
    tmp5 += ints.tmp30
    tmp5 += ints.tmp6
    tmp5 += ints.tmp8
    tmp5 += f.ov * -1
    tmp5 += ints.tmp17 * -1
    tmp5 += ints.tmp2 * -1
    tmp5 += ints.tmp3 * -1
    tmp3 = einsum(t1, (0, 1), tmp1, (2, 3, 1), (2, 3, 0)) * -1
    tmp6 = np.copy(ints.tmp11) * 0.5
    tmp6 += ints.tmp7
    tmp6 += f.vv * -1
    tmp4 = np.copy(ints.tmp18)
    tmp4 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp0 = np.copy(ints.tmp10) * 0.5
    tmp0 += ints.tmp15
    tmp0 += ints.tmp20 * 0.25
    tmp0 += ints.tmp13 * -0.25
    tmp0 += np.transpose(v.ovvv, (0, 2, 3, 1)) * -0.5
    tmp2 = np.copy(ints.tmp23)
    tmp2 += ints.tmp28
    tmp2 += np.transpose(v.ovov, (0, 2, 3, 1)) * -1
    r2new = einsum(v.ovvv, (0, 1, 2, 3), tmp1, (4, 0, 1), (2, 3, 4))
    r2new += einsum(r2, (0, 1, 2), v.vvvv, (3, 4, 0, 1), (3, 4, 2)) * 0.5
    r2new += einsum(r1, (0,), v.ovvv, (1, 0, 2, 3), (2, 3, 1)) * -1
    r2new += np.transpose(tmp20, (1, 2, 0)) * -1
    r2new += np.transpose(tmp20, (2, 1, 0))
    del tmp20
    r2new += np.transpose(tmp21, (1, 2, 0))
    r2new += np.transpose(tmp21, (2, 1, 0)) * -1
    del tmp21
    r2new += einsum(v.oovv, (0, 1, 2, 3), tmp23, (4, 0, 1), (2, 3, 4)) * 0.25
    del tmp23
    r2new += einsum(tmp24, (0, 1), r2, (2, 3, 0), (2, 3, 1)) * -1
    del tmp24
    r2new += einsum(v.oovv, (0, 1, 2, 3), tmp9, (1,), (2, 3, 0))
    r1new = einsum(tmp0, (0, 1, 2, 3), r2, (1, 2, 0), (3,))
    del tmp0
    r1new += einsum(tmp1, (0, 1, 2), tmp2, (0, 1, 2, 3), (3,))
    del tmp1, tmp2
    r1new += einsum(tmp3, (0, 1, 2), tmp4, (0, 2, 1, 3), (3,)) * -0.5
    del tmp3, tmp4
    r1new += einsum(r2, (0, 1, 2), tmp5, (2, 1), (0,)) * -1
    del tmp5
    r1new += einsum(tmp6, (0, 1), r1, (0,), (1,)) * -1
    del tmp6
    r1new += einsum(tmp9, (0,), tmp10, (0, 1), (1,)) * -1
    del tmp10, tmp9

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_lmatvec_ee_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:58:11.847808.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp0 : array
    tmp10 : array
    tmp11 : array
    tmp12 : array
    tmp13 : array
    tmp15 : array
    tmp16 : array
    tmp17 : array
    tmp19 : array
    tmp2 : array
    tmp20 : array
    tmp21 : array
    tmp22 : array
    tmp23 : array
    tmp24 : array
    tmp26 : array
    tmp27 : array
    tmp28 : array
    tmp29 : array
    tmp3 : array
    tmp30 : array
    tmp31 : array
    tmp32 : array
    tmp33 : array
    tmp34 : array
    tmp35 : array
    tmp36 : array
    tmp38 : array
    tmp39 : array
    tmp4 : array
    tmp40 : array
    tmp41 : array
    tmp43 : array
    tmp44 : array
    tmp45 : array
    tmp46 : array
    tmp47 : array
    tmp5 : array
    tmp7 : array
    tmp8 : array
    tmp9 : array
    """

    tmp29 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp26 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp46 = einsum(tmp29, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp38 = einsum(tmp26, (0, 1), t1, (2, 1), (2, 0))
    tmp10 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp9 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp40 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp8 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp34 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp16 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 2, 3), (4, 0))
    tmp0 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp47 = einsum(t1, (0, 1), tmp46, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp45 = einsum(tmp38, (0, 1), t1, (1, 2), (0, 2))
    tmp44 = einsum(tmp10, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp43 = einsum(tmp9, (0, 1), t1, (2, 1), (2, 0))
    tmp41 = einsum(t1, (0, 1), tmp40, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp39 = einsum(tmp8, (0, 1), t1, (0, 2), (1, 2))
    tmp36 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp35 = einsum(t1, (0, 1), tmp34, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp33 = einsum(t1, (0, 1), tmp16, (2, 0), (2, 1))
    tmp32 = einsum(tmp29, (0, 1, 2, 3), t2, (2, 1, 4, 5), (0, 4, 5, 3)) * -1
    tmp31 = einsum(t2, (0, 1, 2, 3), tmp29, (4, 5, 1, 3), (4, 0, 5, 2)) * -1
    tmp30 = einsum(tmp29, (0, 1, 2, 3), t2, (2, 1, 4, 3), (0, 4))
    tmp28 = einsum(tmp26, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    tmp27 = einsum(tmp26, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp24 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 3), (0, 2, 4, 5))
    tmp23 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp22 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 0, 2, 3), (4, 1))
    tmp21 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 5, 0, 1), (4, 2, 3, 5))
    tmp20 = einsum(t2, (0, 1, 2, 3), v.ooov, (4, 1, 5, 3), (0, 4, 5, 2))
    tmp19 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp17 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    tmp15 = einsum(v.vvvv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp13 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp12 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp11 = einsum(t1, (0, 1), v.oooo, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp7 = einsum(tmp0, (0, 1), t1, (0, 2), (1, 2))
    tmp5 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp4 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp3 = einsum(t1, (0, 1), f.vv, (2, 1), (0, 2))
    tmp2 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))

    return {f"tmp0": tmp0, f"tmp10": tmp10, f"tmp11": tmp11, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp15": tmp15, f"tmp16": tmp16, f"tmp17": tmp17, f"tmp19": tmp19, f"tmp2": tmp2, f"tmp20": tmp20, f"tmp21": tmp21, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp24": tmp24, f"tmp26": tmp26, f"tmp27": tmp27, f"tmp28": tmp28, f"tmp29": tmp29, f"tmp3": tmp3, f"tmp30": tmp30, f"tmp31": tmp31, f"tmp32": tmp32, f"tmp33": tmp33, f"tmp34": tmp34, f"tmp35": tmp35, f"tmp36": tmp36, f"tmp38": tmp38, f"tmp39": tmp39, f"tmp4": tmp4, f"tmp40": tmp40, f"tmp41": tmp41, f"tmp43": tmp43, f"tmp44": tmp44, f"tmp45": tmp45, f"tmp46": tmp46, f"tmp47": tmp47, f"tmp5": tmp5, f"tmp7": tmp7, f"tmp8": tmp8, f"tmp9": tmp9}

def hbar_lmatvec_ee(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T15:58:11.888475.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp1 = einsum(r1, (0, 1), t1, (2, 1), (0, 2))
    tmp0 = einsum(t2, (0, 1, 2, 3), r2, (4, 1, 2, 3), (4, 0))
    tmp6 = einsum(t1, (0, 1), r2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp12 = np.copy(tmp1) * 2
    tmp12 += tmp0
    tmp14 = np.copy(f.oo)
    tmp14 += np.transpose(ints.tmp0, (1, 0))
    tmp14 += ints.tmp16 * 0.5
    tmp14 += ints.tmp38
    tmp14 += np.transpose(ints.tmp8, (1, 0))
    tmp15 = np.copy(f.ov)
    tmp15 += ints.tmp26
    tmp2 = einsum(r2, (0, 1, 2, 3), t2, (0, 1, 4, 3), (2, 4))
    tmp19 = np.copy(ints.tmp10)
    tmp19 += ints.tmp36
    tmp7 = einsum(tmp6, (0, 1, 2, 3), t1, (4, 3), (0, 1, 4, 2))
    tmp30 = einsum(f.vv, (0, 1), r2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp29 = einsum(v.ooov, (0, 1, 2, 3), r1, (2, 4), (0, 1, 4, 3))
    tmp28 = einsum(ints.tmp29, (0, 1, 2, 3), r1, (0, 4), (1, 2, 3, 4))
    tmp26 = einsum(v.oovv, (0, 1, 2, 3), tmp12, (4, 1), (4, 0, 2, 3)) * -0.5
    tmp25 = einsum(tmp14, (0, 1), r2, (2, 0, 3, 4), (1, 2, 3, 4)) * -1
    tmp23 = einsum(tmp6, (0, 1, 2, 3), tmp15, (2, 4), (0, 1, 4, 3))
    tmp22 = einsum(v.oovv, (0, 1, 2, 3), tmp2, (4, 3), (0, 1, 4, 2)) * -1
    tmp20 = einsum(r2, (0, 1, 2, 3), tmp19, (1, 4, 3, 5), (4, 0, 5, 2))
    del tmp19
    tmp18 = einsum(ints.tmp29, (0, 1, 2, 3), tmp6, (4, 0, 2, 5), (1, 4, 3, 5))
    tmp17 = einsum(tmp6, (0, 1, 2, 3), v.ooov, (4, 2, 1, 5), (0, 4, 3, 5))
    tmp16 = einsum(r2, (0, 1, 2, 3), v.ovov, (4, 3, 1, 5), (0, 4, 2, 5))
    tmp33 = np.copy(ints.tmp17) * 0.5
    tmp33 += ints.tmp9
    tmp36 = einsum(t2, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1)) * -0.5
    tmp36 += np.transpose(tmp7, (0, 1, 3, 2))
    tmp31 = np.copy(tmp28) * -1
    del tmp28
    tmp31 += np.transpose(tmp29, (1, 0, 2, 3))
    del tmp29
    tmp31 += np.transpose(tmp30, (1, 0, 2, 3))
    del tmp30
    tmp27 = np.copy(np.transpose(tmp25, (0, 1, 3, 2)))
    del tmp25
    tmp27 += np.transpose(tmp26, (0, 1, 3, 2))
    del tmp26
    tmp24 = np.copy(tmp22) * -0.5
    del tmp22
    tmp24 += np.transpose(tmp23, (1, 0, 2, 3)) * -1
    del tmp23
    tmp21 = np.copy(tmp16) * -1
    del tmp16
    tmp21 += tmp17
    del tmp17
    tmp21 += tmp18 * -1
    del tmp18
    tmp21 += tmp20
    del tmp20
    tmp21 += einsum(tmp15, (0, 1), r1, (2, 3), (0, 2, 1, 3))
    tmp35 = np.copy(ints.tmp34) * 0.25
    tmp35 += ints.tmp46 * 0.5
    tmp35 += v.oooo * 0.5
    tmp35 += np.transpose(ints.tmp40, (0, 3, 1, 2)) * -1
    tmp34 = einsum(tmp33, (0, 1), r2, (2, 3, 4, 0), (2, 3, 1, 4)) * -1
    del tmp33
    tmp32 = einsum(r1, (0, 1), v.ovvv, (2, 1, 3, 4), (0, 2, 3, 4))
    tmp3 = np.copy(ints.tmp15) * 0.5
    tmp3 += ints.tmp24
    tmp3 += ints.tmp32 * 0.25
    tmp3 += ints.tmp21 * -0.25
    tmp3 += np.transpose(v.ovvv, (0, 2, 3, 1)) * -0.5
    tmp13 = np.copy(ints.tmp17) * 0.5
    tmp13 += ints.tmp9
    tmp13 += f.vv * -1
    tmp10 = einsum(r1, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp10 += einsum(t2, (0, 1, 2, 3), tmp6, (1, 0, 4, 3), (4, 2)) * -0.5
    tmp5 = np.copy(ints.tmp10)
    tmp5 += ints.tmp36
    tmp5 += np.transpose(v.ovov, (0, 2, 3, 1)) * -1
    tmp9 = np.copy(ints.tmp12)
    tmp9 += ints.tmp19 * 0.5
    tmp9 += ints.tmp22 * 0.5
    tmp9 += ints.tmp2
    tmp9 += ints.tmp30 * 0.5
    tmp9 += ints.tmp33 * 0.5
    tmp9 += ints.tmp39
    tmp9 += ints.tmp43
    tmp9 += ints.tmp45
    tmp9 += ints.tmp7
    tmp9 += f.ov * -1
    tmp9 += ints.tmp27 * -1
    tmp9 += ints.tmp3 * -1
    tmp9 += ints.tmp4 * -1
    tmp8 = np.copy(ints.tmp29)
    tmp8 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp4 = np.copy(ints.tmp11) * 0.5
    tmp4 += np.transpose(ints.tmp13, (0, 2, 1, 3))
    tmp4 += np.transpose(ints.tmp20, (0, 2, 1, 3))
    tmp4 += ints.tmp35 * 0.25
    tmp4 += ints.tmp47 * 0.5
    tmp4 += np.transpose(ints.tmp5, (1, 2, 0, 3)) * 0.5
    tmp4 += ints.tmp23 * -0.25
    tmp4 += ints.tmp28 * -0.5
    tmp4 += ints.tmp31 * -1
    tmp4 += np.transpose(ints.tmp41, (0, 2, 1, 3)) * -1
    tmp4 += ints.tmp44 * -0.5
    tmp4 += v.ooov * -0.5
    tmp11 = np.copy(ints.tmp10)
    tmp11 += np.transpose(v.ovov, (0, 2, 3, 1)) * -1
    r2new = einsum(v.ovvv, (0, 1, 2, 3), tmp6, (4, 5, 0, 1), (5, 4, 2, 3)) * -1
    r2new += einsum(v.vvvv, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1)) * 0.5
    r2new += tmp21
    r2new += np.transpose(tmp21, (0, 1, 3, 2)) * -1
    r2new += np.transpose(tmp21, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp21, (1, 0, 3, 2))
    del tmp21
    r2new += tmp24
    r2new += np.transpose(tmp24, (0, 1, 3, 2)) * -1
    del tmp24
    r2new += tmp27
    r2new += np.transpose(tmp27, (1, 0, 2, 3)) * -1
    del tmp27
    r2new += np.transpose(tmp31, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp31, (1, 0, 3, 2))
    del tmp31
    r2new += np.transpose(tmp32, (0, 1, 3, 2))
    r2new += np.transpose(tmp32, (1, 0, 3, 2)) * -1
    del tmp32
    r2new += np.transpose(tmp34, (1, 0, 2, 3))
    r2new += np.transpose(tmp34, (1, 0, 3, 2)) * -1
    del tmp34
    r2new += einsum(tmp35, (0, 1, 2, 3), r2, (0, 1, 4, 5), (2, 3, 4, 5))
    del tmp35
    r2new += einsum(v.oovv, (0, 1, 2, 3), tmp36, (4, 5, 0, 1), (5, 4, 2, 3)) * 0.5
    del tmp36
    r1new = einsum(ints.tmp29, (0, 1, 2, 3), tmp0, (0, 2), (1, 3)) * -0.5
    del tmp0
    r1new += einsum(tmp1, (0, 1), ints.tmp29, (0, 2, 1, 3), (2, 3)) * -1
    del tmp1
    r1new += einsum(v.ovvv, (0, 1, 2, 3), tmp2, (1, 3), (0, 2)) * 0.5
    del tmp2
    r1new += einsum(r2, (0, 1, 2, 3), tmp3, (1, 2, 3, 4), (0, 4))
    del tmp3
    r1new += einsum(tmp4, (0, 1, 2, 3), r2, (0, 1, 4, 3), (2, 4))
    del tmp4
    r1new += einsum(tmp5, (0, 1, 2, 3), tmp6, (0, 4, 1, 2), (4, 3)) * -1
    del tmp6, tmp5
    r1new += einsum(tmp7, (0, 1, 2, 3), tmp8, (1, 3, 2, 4), (0, 4)) * -0.5
    del tmp7, tmp8
    r1new += einsum(r2, (0, 1, 2, 3), tmp9, (1, 3), (0, 2)) * -1
    del tmp9
    r1new += einsum(tmp10, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    del tmp10
    r1new += einsum(tmp11, (0, 1, 2, 3), r1, (0, 2), (1, 3))
    del tmp11
    r1new += einsum(tmp12, (0, 1), v.ooov, (2, 1, 0, 3), (2, 3)) * 0.5
    r1new += einsum(r1, (0, 1), tmp13, (1, 2), (0, 2)) * -1
    del tmp13
    r1new += einsum(tmp14, (0, 1), r1, (0, 2), (1, 2)) * -1
    del tmp14
    r1new += einsum(tmp15, (0, 1), tmp12, (2, 0), (2, 1)) * -0.5
    del tmp12, tmp15

    return {f"r1new": r1new, f"r2new": r2new}

