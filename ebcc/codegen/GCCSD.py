"""Code generated by `albert` version 0.0.0.

 * date: 2024-12-19T15:11:05.244703
 * python version: 3.10.15 (main, Sep  9 2024, 03:03:06) [GCC 13.2.0]
 * albert version: 0.0.0
 * caller: /opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/albert/code/einsum.py
 * node: fv-az1676-657
 * system: Linux
 * processor: x86_64
 * release: 6.8.0-1017-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        e_cc: 
    """

    e_cc = einsum(t1, (0, 1), f.ov, (0, 1), ())
    tmp0 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp0 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    e_cc += einsum(tmp0, (0, 1, 2, 3), v.oovv, (0, 1, 2, 3), ()) * 0.25
    del tmp0

    return e_cc

def update_amps(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        t1new: 
        t2new: 
    """

    t1new = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    t1new += f.ov
    t1new += einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3)) * -1
    tmp1 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -1
    tmp0 = einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp1 += np.transpose(tmp0, (0, 2, 1, 3)) * -1
    t1new += einsum(t2, (0, 1, 2, 3), tmp1, (4, 0, 1, 3), (4, 2)) * 0.5
    del tmp1
    tmp2 = np.copy(t2) * 0.5
    tmp2 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    t1new += einsum(tmp2, (0, 1, 2, 3), v.ovvv, (0, 4, 2, 3), (1, 4))
    tmp4 = np.copy(f.ov)
    tmp3 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp4 += tmp3
    t1new += einsum(t2, (0, 1, 2, 3), tmp4, (1, 3), (0, 2))
    tmp7 = np.copy(f.oo)
    tmp7 += einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp5 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp7 += tmp5
    tmp6 = np.copy(t2)
    tmp6 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp7 += einsum(v.oovv, (0, 1, 2, 3), tmp6, (1, 4, 2, 3), (0, 4)) * -0.5
    t1new += einsum(t1, (0, 1), tmp7, (0, 2), (2, 1)) * -1
    del tmp7
    t2new = np.copy(v.oovv)
    tmp8 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp9 = einsum(t2, (0, 1, 2, 3), tmp8, (4, 1, 5, 3), (4, 0, 5, 2))
    del tmp8
    tmp18 = np.copy(tmp9)
    del tmp9
    tmp10 = einsum(t1, (0, 1), v.ovvv, (0, 2, 3, 1), (2, 3))
    tmp12 = np.copy(tmp10)
    del tmp10
    tmp11 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 4, 3), (2, 4))
    tmp12 += tmp11 * 0.5
    del tmp11
    tmp13 = einsum(t2, (0, 1, 2, 3), tmp12, (4, 3), (0, 1, 4, 2)) * -1
    del tmp12
    tmp18 += np.transpose(tmp13, (1, 0, 3, 2)) * -1
    del tmp13
    tmp14 = einsum(f.ov, (0, 1), t2, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp16 = np.copy(np.transpose(tmp14, (0, 2, 1, 3))) * -1
    del tmp14
    tmp15 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp16 += np.transpose(tmp15, (2, 1, 0, 3)) * 0.5
    del tmp15
    tmp17 = einsum(t1, (0, 1), tmp16, (0, 2, 3, 4), (2, 3, 4, 1))
    del tmp16
    tmp18 += np.transpose(tmp17, (1, 0, 3, 2)) * -1
    del tmp17
    t2new += tmp18
    t2new += np.transpose(tmp18, (0, 1, 3, 2)) * -1
    del tmp18
    tmp19 = einsum(v.ovov, (0, 1, 2, 3), t2, (4, 2, 5, 1), (4, 0, 5, 3))
    tmp27 = np.copy(tmp19) * -1
    del tmp19
    tmp20 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp21 = einsum(tmp20, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 5, 2)) * -1
    tmp27 += tmp21
    del tmp21
    tmp22 = einsum(t1, (0, 1), v.ovov, (2, 3, 4, 1), (0, 2, 4, 3))
    tmp25 = np.copy(tmp22)
    del tmp22
    tmp23 = einsum(t2, (0, 1, 2, 3), v.ooov, (4, 1, 5, 3), (0, 4, 5, 2))
    tmp25 += tmp23
    del tmp23
    tmp24 = einsum(tmp0, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5))
    del tmp0
    tmp25 += np.transpose(tmp24, (0, 2, 1, 3)) * -1
    del tmp24
    tmp26 = einsum(t1, (0, 1), tmp25, (2, 0, 3, 4), (2, 3, 4, 1))
    del tmp25
    tmp27 += np.transpose(tmp26, (0, 1, 3, 2))
    del tmp26
    t2new += tmp27
    t2new += np.transpose(tmp27, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp27, (1, 0, 2, 3)) * -1
    t2new += np.transpose(tmp27, (1, 0, 3, 2))
    del tmp27
    tmp28 = einsum(t1, (0, 1), tmp20, (2, 3, 4, 1), (2, 0, 3, 4)) * -1
    del tmp20
    tmp30 = np.copy(tmp28)
    del tmp28
    tmp29 = einsum(tmp3, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    del tmp3
    tmp30 += tmp29
    del tmp29
    tmp31 = einsum(t1, (0, 1), tmp30, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp30
    t2new += np.transpose(tmp31, (0, 1, 3, 2)) * -1
    t2new += tmp31
    del tmp31
    tmp32 = einsum(t1, (0, 1), v.ovvv, (2, 1, 3, 4), (0, 2, 3, 4))
    tmp40 = np.copy(np.transpose(tmp32, (0, 1, 3, 2))) * -1
    del tmp32
    tmp33 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp34 = einsum(tmp33, (0, 1), t2, (2, 1, 3, 4), (2, 0, 3, 4))
    del tmp33
    tmp40 += np.transpose(tmp34, (0, 1, 3, 2)) * -0.5
    del tmp34
    tmp36 = np.copy(f.oo)
    tmp35 = einsum(t1, (0, 1), tmp4, (2, 1), (0, 2))
    del tmp4
    tmp36 += tmp35
    del tmp35
    tmp37 = einsum(t2, (0, 1, 2, 3), tmp36, (4, 1), (4, 0, 2, 3)) * -1
    del tmp36
    tmp40 += np.transpose(tmp37, (0, 1, 3, 2)) * -1
    del tmp37
    tmp38 = einsum(t1, (0, 1), v.ooov, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp39 = einsum(tmp6, (0, 1, 2, 3), tmp38, (4, 0, 1, 5), (4, 5, 2, 3)) * 0.5
    del tmp38
    tmp40 += np.transpose(tmp39, (0, 1, 3, 2)) * -1
    del tmp39
    t2new += tmp40 * -1
    t2new += np.transpose(tmp40, (1, 0, 2, 3))
    del tmp40
    tmp41 = einsum(v.ooov, (0, 1, 2, 3), t1, (2, 4), (0, 1, 4, 3))
    tmp43 = np.copy(np.transpose(tmp41, (1, 0, 2, 3))) * -1
    del tmp41
    tmp42 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp43 += np.transpose(tmp42, (1, 0, 2, 3)) * -1
    del tmp42
    t2new += tmp43 * -1
    t2new += np.transpose(tmp43, (0, 1, 3, 2))
    del tmp43
    tmp44 = einsum(t2, (0, 1, 2, 3), tmp5, (1, 4), (0, 4, 2, 3)) * -1
    del tmp5
    t2new += np.transpose(tmp44, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp44, (1, 0, 3, 2))
    del tmp44
    tmp45 = np.copy(v.oooo)
    tmp45 += einsum(tmp6, (0, 1, 2, 3), v.oovv, (4, 5, 2, 3), (4, 5, 1, 0)) * -0.5
    t2new += einsum(tmp45, (0, 1, 2, 3), tmp6, (0, 1, 4, 5), (2, 3, 5, 4)) * -0.5
    del tmp45, tmp6
    t2new += einsum(tmp2, (0, 1, 2, 3), v.vvvv, (4, 5, 2, 3), (1, 0, 4, 5)) * -1
    del tmp2

    return {"t1new": t1new, "t2new": t2new}

def update_lams(f=None, l1=None, l2=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        l1: 
        l2: 
        t1: 
        t2: 
        v: 

    Returns:
        l1new: 
        l2new: 
    """

    l1new = einsum(f.vv, (0, 1), l1, (1, 2), (0, 2))
    tmp0 = einsum(t1, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    l1new += einsum(tmp0, (0, 1, 2, 3), v.ovov, (2, 3, 1, 4), (4, 0)) * -1
    l1new += np.transpose(f.ov, (1, 0))
    l1new += einsum(l1, (0, 1), v.ovov, (2, 0, 1, 3), (3, 2)) * -1
    tmp1 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    l1new += einsum(tmp0, (0, 1, 2, 3), tmp1, (1, 2, 3, 4), (4, 0))
    tmp2 = einsum(l2, (0, 1, 2, 3), t2, (4, 5, 0, 1), (2, 3, 4, 5))
    l1new += einsum(tmp2, (0, 1, 2, 3), v.ovoo, (1, 4, 3, 2), (4, 0)) * 0.25
    tmp3 = einsum(t1, (0, 1), tmp0, (2, 3, 4, 1), (3, 2, 4, 0))
    l1new += einsum(tmp3, (0, 1, 2, 3), v.ooov, (2, 3, 1, 4), (4, 0)) * -0.5
    del tmp3
    tmp12 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -1
    tmp12 += einsum(t1, (0, 1), v.ovov, (2, 3, 4, 1), (2, 4, 0, 3)) * -2
    tmp4 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -1
    tmp4 += einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp12 += einsum(t2, (0, 1, 2, 3), tmp4, (4, 1, 5, 3), (5, 0, 4, 2)) * 2
    del tmp4
    tmp5 = einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1))
    tmp5 += t2 * -0.5
    tmp7 = np.copy(v.ovvv)
    tmp6 = einsum(v.oovv, (0, 1, 2, 3), t1, (1, 4), (0, 4, 2, 3))
    tmp7 += np.transpose(tmp6, (0, 1, 3, 2))
    tmp12 += einsum(tmp7, (0, 1, 2, 3), tmp5, (4, 5, 2, 3), (0, 5, 4, 1)) * -1
    del tmp5, tmp7
    tmp9 = np.copy(f.ov)
    tmp8 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp9 += tmp8
    tmp12 += einsum(tmp9, (0, 1), t2, (2, 3, 4, 1), (0, 2, 3, 4))
    del tmp9
    tmp11 = np.copy(v.oooo) * -0.5
    tmp10 = einsum(t1, (0, 1), v.ooov, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp11 += np.transpose(tmp10, (2, 1, 0, 3)) * -1
    tmp12 += einsum(t1, (0, 1), tmp11, (0, 2, 3, 4), (2, 4, 3, 1)) * -2
    del tmp11
    l1new += einsum(tmp12, (0, 1, 2, 3), l2, (4, 3, 1, 2), (4, 0)) * 0.5
    del tmp12
    tmp13 = np.copy(v.ovvv)
    tmp13 += einsum(t1, (0, 1), v.vvvv, (2, 1, 3, 4), (0, 2, 3, 4)) * -1
    l1new += einsum(tmp13, (0, 1, 2, 3), l2, (2, 3, 4, 0), (1, 4)) * -0.5
    del tmp13
    tmp18 = einsum(t2, (0, 1, 2, 3), l1, (3, 4), (4, 0, 1, 2))
    tmp18 += einsum(t1, (0, 1), tmp2, (2, 0, 3, 4), (2, 4, 3, 1)) * -0.5
    tmp14 = np.copy(t2)
    tmp14 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -0.5
    tmp18 += einsum(tmp0, (0, 1, 2, 3), tmp14, (0, 4, 3, 5), (1, 4, 2, 5)) * 2
    del tmp14
    tmp15 = einsum(l1, (0, 1), t1, (2, 0), (1, 2))
    tmp17 = np.copy(tmp15) * 2
    tmp16 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 0, 1), (2, 4))
    tmp17 += tmp16
    tmp18 += einsum(tmp17, (0, 1), t1, (2, 3), (0, 2, 1, 3))
    l1new += einsum(v.oovv, (0, 1, 2, 3), tmp18, (4, 0, 1, 3), (2, 4)) * 0.5
    del tmp18
    tmp19 = np.copy(t1) * -1
    tmp19 += einsum(t2, (0, 1, 2, 3), l1, (3, 1), (0, 2)) * -1
    tmp19 += einsum(tmp0, (0, 1, 2, 3), t2, (1, 0, 4, 3), (2, 4)) * 0.5
    del tmp0
    tmp19 += einsum(t1, (0, 1), tmp17, (0, 2), (2, 1)) * 0.5
    l1new += einsum(tmp19, (0, 1), v.oovv, (2, 0, 3, 1), (3, 2)) * -1
    del tmp19
    tmp20 = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    tmp22 = np.copy(tmp20) * 2
    tmp21 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2))
    tmp22 += tmp21
    l1new += einsum(v.ovvv, (0, 1, 2, 3), tmp22, (1, 3), (2, 0)) * 0.5
    del tmp22
    tmp23 = einsum(t1, (0, 1), l1, (2, 3), (3, 0, 2, 1))
    tmp23 += einsum(t2, (0, 1, 2, 3), l2, (4, 3, 5, 1), (5, 0, 4, 2))
    l1new += einsum(tmp23, (0, 1, 2, 3), v.ovvv, (1, 2, 4, 3), (4, 0)) * -1
    del tmp23
    l1new += einsum(tmp17, (0, 1), v.ooov, (2, 1, 0, 3), (3, 2)) * 0.5
    tmp27 = np.copy(f.oo)
    tmp24 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp27 += np.transpose(tmp24, (1, 0))
    tmp25 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp27 += np.transpose(tmp25, (1, 0))
    tmp26 = np.copy(t2) * 0.5
    tmp26 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp27 += einsum(v.oovv, (0, 1, 2, 3), tmp26, (1, 4, 2, 3), (4, 0)) * -1
    l1new += einsum(tmp27, (0, 1), l1, (2, 0), (2, 1)) * -1
    del tmp27
    l1new += einsum(tmp17, (0, 1), f.ov, (1, 2), (2, 0)) * -0.5
    del tmp17
    l2new = np.copy(np.transpose(v.oovv, (2, 3, 0, 1)))
    l2new += einsum(tmp2, (0, 1, 2, 3), v.oovv, (3, 2, 4, 5), (4, 5, 0, 1)) * -0.25
    del tmp2
    tmp33 = einsum(f.ov, (0, 1), l1, (2, 3), (0, 3, 1, 2))
    tmp33 += einsum(l1, (0, 1), tmp8, (2, 3), (1, 2, 0, 3))
    tmp31 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * -1
    tmp28 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 4), (2, 3, 1, 4))
    tmp31 += np.transpose(tmp28, (1, 0, 2, 3))
    del tmp28
    tmp31 += tmp1
    del tmp1
    tmp29 = np.copy(t2)
    tmp29 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    tmp30 = einsum(tmp29, (0, 1, 2, 3), v.oovv, (4, 0, 5, 2), (1, 4, 3, 5))
    del tmp29
    tmp31 += tmp30
    del tmp30
    tmp32 = einsum(tmp31, (0, 1, 2, 3), l2, (4, 2, 5, 0), (1, 5, 3, 4))
    del tmp31
    tmp33 += np.transpose(tmp32, (1, 0, 3, 2))
    del tmp32
    l2new += np.transpose(tmp33, (2, 3, 0, 1))
    l2new += np.transpose(tmp33, (3, 2, 0, 1)) * -1
    l2new += np.transpose(tmp33, (2, 3, 1, 0)) * -1
    l2new += np.transpose(tmp33, (3, 2, 1, 0))
    del tmp33
    tmp34 = einsum(v.ooov, (0, 1, 2, 3), l1, (4, 2), (0, 1, 4, 3))
    tmp44 = np.copy(np.transpose(tmp34, (1, 0, 2, 3))) * -1
    del tmp34
    tmp35 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp37 = np.copy(tmp35)
    del tmp35
    tmp36 = einsum(v.oovv, (0, 1, 2, 3), tmp26, (0, 1, 3, 4), (4, 2)) * -1
    tmp37 += tmp36
    del tmp36
    tmp38 = einsum(l2, (0, 1, 2, 3), tmp37, (1, 4), (2, 3, 4, 0)) * -1
    del tmp37
    tmp44 += np.transpose(tmp38, (1, 0, 3, 2))
    del tmp38
    tmp40 = np.copy(f.vv)
    tmp39 = einsum(t1, (0, 1), f.ov, (0, 2), (2, 1))
    tmp40 += np.transpose(tmp39, (1, 0)) * -1
    del tmp39
    tmp41 = einsum(tmp40, (0, 1), l2, (2, 0, 3, 4), (3, 4, 1, 2)) * -1
    del tmp40
    tmp44 += np.transpose(tmp41, (1, 0, 2, 3))
    del tmp41
    tmp42 = np.copy(tmp20)
    del tmp20
    tmp42 += tmp21 * 0.5
    del tmp21
    tmp43 = einsum(v.oovv, (0, 1, 2, 3), tmp42, (4, 3), (0, 1, 4, 2)) * -1
    del tmp42
    tmp44 += np.transpose(tmp43, (1, 0, 2, 3)) * -1
    del tmp43
    l2new += np.transpose(tmp44, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp44, (3, 2, 0, 1))
    del tmp44
    tmp45 = einsum(l2, (0, 1, 2, 3), tmp24, (4, 3), (4, 2, 0, 1))
    del tmp24
    tmp51 = np.copy(np.transpose(tmp45, (0, 1, 3, 2)))
    del tmp45
    tmp46 = np.copy(tmp15)
    del tmp15
    tmp46 += tmp16 * 0.5
    del tmp16
    tmp47 = einsum(v.oovv, (0, 1, 2, 3), tmp46, (4, 1), (4, 0, 2, 3)) * -1
    del tmp46
    tmp51 += np.transpose(tmp47, (0, 1, 3, 2)) * -1
    del tmp47
    tmp49 = np.copy(tmp25) * 2
    del tmp25
    tmp48 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 2, 3), (4, 0))
    tmp49 += np.transpose(tmp48, (1, 0))
    del tmp48
    tmp50 = einsum(tmp49, (0, 1), l2, (2, 3, 4, 1), (0, 4, 2, 3)) * -0.5
    del tmp49
    tmp51 += np.transpose(tmp50, (1, 0, 3, 2))
    del tmp50
    l2new += np.transpose(tmp51, (3, 2, 0, 1))
    l2new += np.transpose(tmp51, (3, 2, 1, 0)) * -1
    del tmp51
    tmp52 = einsum(t1, (0, 1), tmp8, (2, 1), (0, 2))
    del tmp8
    tmp53 = einsum(tmp52, (0, 1), l2, (2, 3, 4, 0), (4, 1, 2, 3))
    del tmp52
    l2new += np.transpose(tmp53, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp53, (2, 3, 1, 0))
    del tmp53
    tmp54 = einsum(l2, (0, 1, 2, 3), f.oo, (4, 3), (4, 2, 0, 1))
    tmp56 = np.copy(np.transpose(tmp54, (0, 1, 3, 2))) * -1
    del tmp54
    tmp55 = einsum(l1, (0, 1), v.ovvv, (2, 0, 3, 4), (1, 2, 3, 4))
    tmp56 += np.transpose(tmp55, (0, 1, 3, 2))
    del tmp55
    l2new += np.transpose(tmp56, (2, 3, 0, 1))
    l2new += np.transpose(tmp56, (2, 3, 1, 0)) * -1
    del tmp56
    tmp58 = np.copy(v.vvvv)
    tmp57 = np.copy(v.ovvv)
    tmp57 += np.transpose(tmp6, (0, 1, 3, 2)) * 0.5
    del tmp6
    tmp58 += einsum(t1, (0, 1), tmp57, (0, 2, 3, 4), (2, 1, 4, 3)) * -2
    del tmp57
    l2new += einsum(tmp58, (0, 1, 2, 3), l2, (0, 1, 4, 5), (2, 3, 4, 5)) * 0.5
    del tmp58
    tmp59 = np.copy(v.oooo)
    tmp59 += np.transpose(tmp10, (3, 0, 2, 1)) * -2
    del tmp10
    tmp59 += einsum(v.oovv, (0, 1, 2, 3), tmp26, (4, 5, 2, 3), (5, 4, 0, 1)) * -1
    del tmp26
    l2new += einsum(tmp59, (0, 1, 2, 3), l2, (4, 5, 0, 1), (4, 5, 2, 3)) * 0.5
    del tmp59

    return {"l1new": l1new, "l2new": l2new}

def make_rdm1_f(l1=None, l2=None, t1=None, t2=None, δ=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        l1: 
        l2: 
        t1: 
        t2: 
        δ: 

    Returns:
        rdm1: 
    """

    δ = Namespace()
    δ.oo = np.eye(t1.shape[0])
    δ.vv = np.eye(t1.shape[-1])

    rdm1 = Namespace()
    rdm1.vo = np.copy(l1)
    tmp0 = einsum(l1, (0, 1), t1, (2, 0), (1, 2))
    rdm1.oo = np.copy(np.transpose(tmp0, (1, 0))) * -1
    tmp1 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 0, 1), (2, 4))
    rdm1.oo += np.transpose(tmp1, (1, 0)) * -0.5
    rdm1.oo += δ.oo
    rdm1.vv = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2)) * 0.5
    rdm1.vv += einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    tmp2 = einsum(t1, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    rdm1.ov = einsum(t2, (0, 1, 2, 3), tmp2, (1, 0, 4, 3), (4, 2)) * -0.5
    del tmp2
    rdm1.ov += t1
    rdm1.ov += einsum(t2, (0, 1, 2, 3), l1, (3, 1), (0, 2))
    tmp3 = np.copy(tmp0)
    del tmp0
    tmp3 += tmp1 * 0.5
    del tmp1
    rdm1.ov += einsum(t1, (0, 1), tmp3, (0, 2), (2, 1)) * -1
    del tmp3

    rdm1 = np.block([[rdm1.oo, rdm1.ov], [rdm1.vo, rdm1.vv]])

    return rdm1

def make_rdm2_f(l1=None, l2=None, t1=None, t2=None, δ=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        l1: 
        l2: 
        t1: 
        t2: 
        δ: 

    Returns:
        rdm2: 
    """

    δ = Namespace()
    δ.oo = np.eye(t1.shape[0])
    δ.vv = np.eye(t1.shape[-1])

    rdm2 = Namespace()
    rdm2.vvoo = np.copy(l2)
    tmp38 = einsum(t1, (0, 1), l2, (2, 3, 4, 0), (4, 2, 3, 1))
    rdm2.vvov = np.copy(np.transpose(tmp38, (2, 1, 0, 3))) * -1
    rdm2.vvvo = np.copy(np.transpose(tmp38, (2, 1, 3, 0)))
    del tmp38
    tmp26 = np.copy(t2)
    tmp26 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    rdm2.vvvv = einsum(l2, (0, 1, 2, 3), tmp26, (2, 3, 4, 5), (0, 1, 5, 4)) * -0.5
    tmp4 = einsum(t1, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    rdm2.ovoo = np.copy(np.transpose(tmp4, (2, 3, 1, 0))) * -1
    rdm2.ovoo += einsum(δ.oo, (0, 1), l1, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.ovoo += einsum(δ.oo, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.vooo = np.copy(np.transpose(tmp4, (3, 2, 1, 0)))
    rdm2.vooo += einsum(δ.oo, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.vooo += einsum(δ.oo, (0, 1), l1, (2, 3), (2, 0, 1, 3)) * -1
    tmp0 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 0, 1), (2, 4))
    rdm2.oooo = einsum(δ.oo, (0, 1), tmp0, (2, 3), (3, 0, 2, 1)) * -0.5
    rdm2.oooo += einsum(tmp0, (0, 1), δ.oo, (2, 3), (2, 1, 0, 3)) * 0.5
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp0, (2, 3), (3, 0, 1, 2)) * 0.5
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp0, (2, 3), (0, 3, 1, 2)) * -0.5
    tmp1 = einsum(l1, (0, 1), t1, (2, 0), (1, 2))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.oooo += einsum(tmp1, (0, 1), δ.oo, (2, 3), (2, 1, 0, 3))
    rdm2.oooo += einsum(δ.oo, (0, 1), tmp1, (2, 3), (3, 0, 1, 2))
    rdm2.oooo += einsum(tmp1, (0, 1), δ.oo, (2, 3), (2, 1, 3, 0)) * -1
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1))
    rdm2.oooo += einsum(δ.oo, (0, 1), δ.oo, (2, 3), (2, 0, 1, 3)) * -1
    tmp2 = np.copy(t2) * 0.5
    tmp2 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.oooo += einsum(tmp2, (0, 1, 2, 3), l2, (2, 3, 4, 5), (1, 0, 4, 5)) * -1
    del tmp2
    rdm2.ovov = einsum(t1, (0, 1), l1, (2, 3), (0, 2, 3, 1)) * -1
    tmp27 = np.copy(t2)
    tmp27 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    tmp28 = einsum(l2, (0, 1, 2, 3), tmp27, (3, 4, 1, 5), (2, 4, 0, 5))
    del tmp27
    rdm2.ovov += np.transpose(tmp28, (1, 2, 0, 3)) * -1
    tmp29 = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    tmp30 = np.copy(tmp29) * 2
    tmp21 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2))
    tmp30 += tmp21
    rdm2.ovov += einsum(tmp30, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1)) * 0.5
    rdm2.ovvo = einsum(t1, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    tmp31 = np.copy(t2)
    tmp31 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    tmp32 = einsum(tmp31, (0, 1, 2, 3), l2, (4, 2, 5, 0), (5, 1, 4, 3))
    del tmp31
    rdm2.ovvo += np.transpose(tmp32, (1, 2, 3, 0))
    tmp33 = np.copy(tmp29)
    del tmp29
    tmp33 += tmp21 * 0.5
    rdm2.ovvo += einsum(tmp33, (0, 1), δ.oo, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.voov = einsum(t1, (0, 1), l1, (2, 3), (2, 0, 3, 1))
    rdm2.voov += np.transpose(tmp32, (2, 1, 0, 3))
    del tmp32
    rdm2.voov += einsum(tmp30, (0, 1), δ.oo, (2, 3), (0, 2, 3, 1)) * -0.5
    del tmp30
    rdm2.vovo = einsum(t1, (0, 1), l1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.vovo += np.transpose(tmp28, (2, 1, 3, 0)) * -1
    del tmp28
    rdm2.vovo += einsum(tmp33, (0, 1), δ.oo, (2, 3), (0, 2, 1, 3))
    tmp34 = einsum(t2, (0, 1, 2, 3), l1, (4, 1), (0, 4, 2, 3))
    rdm2.vovv = np.copy(np.transpose(tmp34, (1, 0, 3, 2)))
    tmp23 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 5, 1), (5, 0, 4, 2))
    tmp35 = einsum(t1, (0, 1), tmp23, (0, 2, 3, 4), (2, 3, 1, 4))
    rdm2.vovv += np.transpose(tmp35, (1, 0, 2, 3))
    rdm2.vovv += np.transpose(tmp35, (1, 0, 3, 2)) * -1
    rdm2.vovv += einsum(t1, (0, 1), tmp33, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.vovv += einsum(t1, (0, 1), tmp33, (2, 3), (2, 0, 3, 1))
    tmp37 = einsum(tmp26, (0, 1, 2, 3), tmp4, (0, 1, 4, 5), (4, 5, 2, 3)) * 0.5
    rdm2.vovv += np.transpose(tmp37, (1, 0, 3, 2))
    rdm2.ovvv = np.copy(np.transpose(tmp34, (0, 1, 3, 2))) * -1
    del tmp34
    tmp36 = np.copy(tmp35) * -1
    del tmp35
    tmp36 += einsum(t1, (0, 1), tmp33, (2, 3), (0, 2, 1, 3))
    del tmp33
    rdm2.ovvv += tmp36
    rdm2.ovvv += np.transpose(tmp36, (0, 1, 3, 2)) * -1
    del tmp36
    rdm2.ovvv += np.transpose(tmp37, (0, 1, 3, 2)) * -1
    del tmp37
    tmp3 = einsum(t2, (0, 1, 2, 3), l1, (3, 4), (4, 0, 1, 2))
    rdm2.oovo = np.copy(np.transpose(tmp3, (2, 1, 3, 0)))
    tmp9 = np.copy(tmp1) * 2
    tmp9 += tmp0
    rdm2.oovo += einsum(t1, (0, 1), tmp9, (2, 3), (0, 3, 1, 2)) * -0.5
    rdm2.oovo += einsum(t1, (0, 1), tmp9, (2, 3), (3, 0, 1, 2)) * 0.5
    rdm2.oovo += einsum(δ.oo, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.oovo += einsum(t1, (0, 1), δ.oo, (2, 3), (2, 0, 1, 3)) * -1
    tmp5 = einsum(tmp4, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 2, 4, 5)) * -1
    rdm2.oovo += np.transpose(tmp5, (1, 2, 3, 0))
    rdm2.oovo += np.transpose(tmp5, (2, 1, 3, 0)) * -1
    tmp7 = einsum(t2, (0, 1, 2, 3), l1, (3, 1), (0, 2))
    tmp11 = np.copy(tmp7) * -1
    del tmp7
    tmp8 = einsum(t2, (0, 1, 2, 3), tmp4, (1, 0, 4, 3), (4, 2))
    del tmp4
    tmp11 += tmp8 * 0.5
    del tmp8
    tmp10 = einsum(tmp9, (0, 1), t1, (0, 2), (1, 2)) * 0.5
    del tmp9
    tmp11 += tmp10
    del tmp10
    rdm2.oovo += einsum(tmp11, (0, 1), δ.oo, (2, 3), (0, 2, 1, 3)) * -1
    rdm2.oovo += einsum(δ.oo, (0, 1), tmp11, (2, 3), (0, 2, 3, 1))
    tmp12 = einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * 2
    tmp12 += t2 * -1
    tmp14 = einsum(tmp12, (0, 1, 2, 3), l2, (2, 3, 4, 5), (4, 5, 1, 0)) * -1
    rdm2.oovo += einsum(t1, (0, 1), tmp14, (0, 2, 3, 4), (4, 3, 1, 2)) * 0.5
    del tmp14
    rdm2.ooov = np.copy(np.transpose(tmp3, (2, 1, 0, 3))) * -1
    rdm2.ooov += einsum(tmp1, (0, 1), t1, (2, 3), (2, 1, 0, 3))
    rdm2.ooov += einsum(tmp1, (0, 1), t1, (2, 3), (1, 2, 0, 3)) * -1
    rdm2.ooov += einsum(δ.oo, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ooov += einsum(t1, (0, 1), δ.oo, (2, 3), (2, 0, 3, 1))
    tmp6 = np.copy(tmp5)
    tmp6 += einsum(t1, (0, 1), tmp0, (2, 3), (2, 0, 3, 1)) * -0.5
    rdm2.ooov += np.transpose(tmp6, (1, 2, 0, 3)) * -1
    rdm2.ooov += np.transpose(tmp6, (2, 1, 0, 3))
    del tmp6
    rdm2.ooov += einsum(tmp11, (0, 1), δ.oo, (2, 3), (0, 2, 3, 1))
    rdm2.ooov += einsum(δ.oo, (0, 1), tmp11, (2, 3), (0, 2, 1, 3)) * -1
    tmp13 = einsum(tmp12, (0, 1, 2, 3), l2, (2, 3, 4, 5), (4, 5, 0, 1)) * 0.5
    del tmp12
    rdm2.ooov += einsum(t1, (0, 1), tmp13, (2, 0, 3, 4), (3, 4, 2, 1)) * -1
    rdm2.oovv = np.copy(t2)
    rdm2.oovv += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.oovv += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp15 = einsum(t1, (0, 1), tmp5, (0, 2, 3, 4), (2, 3, 1, 4))
    del tmp5
    tmp16 = np.copy(tmp15)
    del tmp15
    tmp16 += einsum(t1, (0, 1), tmp11, (2, 3), (0, 2, 1, 3))
    del tmp11
    rdm2.oovv += tmp16 * -1
    rdm2.oovv += np.transpose(tmp16, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp16, (1, 0, 2, 3))
    rdm2.oovv += np.transpose(tmp16, (1, 0, 3, 2)) * -1
    del tmp16
    tmp17 = einsum(tmp1, (0, 1), t2, (2, 0, 3, 4), (1, 2, 3, 4))
    del tmp1
    tmp19 = np.copy(np.transpose(tmp17, (0, 1, 3, 2))) * -1
    del tmp17
    tmp18 = einsum(t2, (0, 1, 2, 3), tmp0, (1, 4), (0, 4, 2, 3))
    del tmp0
    tmp19 += np.transpose(tmp18, (0, 1, 3, 2)) * 0.5
    del tmp18
    rdm2.oovv += tmp19
    rdm2.oovv += np.transpose(tmp19, (1, 0, 2, 3)) * -1
    del tmp19
    tmp20 = einsum(t1, (0, 1), tmp3, (0, 2, 3, 4), (2, 3, 1, 4))
    del tmp3
    tmp25 = np.copy(tmp20)
    del tmp20
    tmp22 = einsum(tmp21, (0, 1), t2, (2, 3, 4, 0), (2, 3, 4, 1))
    del tmp21
    tmp25 += tmp22 * -0.5
    del tmp22
    tmp24 = einsum(t2, (0, 1, 2, 3), tmp23, (1, 4, 3, 5), (4, 0, 5, 2))
    del tmp23
    tmp25 += tmp24
    del tmp24
    rdm2.oovv += tmp25
    rdm2.oovv += np.transpose(tmp25, (0, 1, 3, 2)) * -1
    del tmp25
    rdm2.oovv += einsum(tmp13, (0, 1, 2, 3), tmp26, (1, 0, 4, 5), (2, 3, 5, 4)) * -0.5
    del tmp13, tmp26

    rdm2 = pack_2e(rdm2.oooo, rdm2.ooov, rdm2.oovo, rdm2.ovoo, rdm2.vooo, rdm2.oovv, rdm2.ovov, rdm2.ovvo, rdm2.voov, rdm2.vovo, rdm2.vvoo, rdm2.ovvv, rdm2.vovv, rdm2.vvov, rdm2.vvvo, rdm2.vvvv).transpose((0, 2, 1, 3))

    return rdm2

def hbar_matvec_ip_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp1: 
        tmp10: 
        tmp12: 
        tmp16: 
        tmp19: 
        tmp25: 
        tmp28: 
        tmp3: 
        tmp32: 
        tmp35: 
        tmp38: 
        tmp41: 
        tmp43: 
        tmp51: 
        tmp7: 
    """

    tmp1 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -1
    tmp0 = einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp1 += np.transpose(tmp0, (2, 1, 0, 3))
    tmp10 = einsum(t1, (0, 1), v.ovov, (2, 1, 3, 4), (0, 3, 2, 4))
    tmp12 = einsum(t1, (0, 1), v.ooov, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp38 = np.copy(np.transpose(v.oooo, (2, 3, 1, 0))) * -1
    tmp6 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp6 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp38 += einsum(tmp6, (0, 1, 2, 3), v.oovv, (4, 5, 2, 3), (5, 4, 1, 0)) * 0.5
    tmp27 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp27 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    tmp28 = einsum(v.oovv, (0, 1, 2, 3), tmp27, (0, 4, 2, 5), (4, 1, 5, 3))
    tmp16 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1))) * -1
    tmp14 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 4), (2, 3, 1, 4))
    tmp16 += tmp14
    del tmp14
    tmp15 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp16 += np.transpose(tmp15, (1, 0, 2, 3))
    del tmp15
    tmp4 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp19 = np.copy(np.transpose(tmp4, (1, 0))) * 2
    tmp18 = einsum(t2, (0, 1, 2, 3), v.oovv, (1, 4, 2, 3), (0, 4)) * -1
    tmp19 += tmp18
    tmp7 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp7 += tmp4
    del tmp4
    tmp5 = einsum(t1, (0, 1), v.ooov, (0, 2, 3, 1), (2, 3)) * -1
    tmp7 += tmp5
    tmp7 += einsum(v.oovv, (0, 1, 2, 3), tmp6, (0, 4, 2, 3), (1, 4)) * 0.5
    tmp35 = np.copy(tmp5)
    tmp2 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp34 = einsum(tmp2, (0, 1), t1, (2, 1), (2, 0))
    tmp35 += np.transpose(tmp34, (1, 0))
    del tmp34
    tmp41 = np.copy(np.transpose(f.vv, (1, 0))) * -1
    tmp41 += einsum(t1, (0, 1), f.ov, (0, 2), (2, 1))
    tmp40 = einsum(t1, (0, 1), v.ovvv, (0, 2, 1, 3), (2, 3)) * -1
    tmp41 += np.transpose(tmp40, (1, 0))
    tmp41 += einsum(tmp6, (0, 1, 2, 3), v.oovv, (0, 1, 2, 4), (4, 3)) * 0.5
    del tmp6
    tmp30 = einsum(tmp0, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5))
    tmp32 = np.copy(np.transpose(tmp30, (0, 2, 1, 3)))
    del tmp30
    tmp31 = einsum(tmp27, (0, 1, 2, 3), v.ooov, (0, 4, 5, 2), (1, 4, 5, 3))
    del tmp27
    tmp32 += tmp31
    del tmp31
    tmp43 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3)))
    tmp42 = einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1))
    tmp42 += np.transpose(t2, (1, 0, 3, 2)) * -0.5
    tmp43 += einsum(tmp42, (0, 1, 2, 3), v.ovvv, (4, 5, 2, 3), (1, 0, 4, 5)) * -1
    del tmp42
    tmp3 = np.copy(f.ov)
    tmp3 += tmp2
    del tmp2
    tmp43 += einsum(tmp3, (0, 1), t2, (2, 3, 1, 4), (3, 2, 0, 4))
    tmp21 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp25 = np.copy(tmp21)
    del tmp21
    tmp22 = einsum(tmp18, (0, 1), t1, (1, 2), (0, 2))
    del tmp18
    tmp25 += tmp22
    del tmp22
    tmp23 = np.copy(np.transpose(v.ooov, (2, 1, 0, 3)))
    tmp23 += np.transpose(tmp0, (0, 2, 1, 3)) * -1
    del tmp0
    tmp24 = einsum(t2, (0, 1, 2, 3), tmp23, (4, 0, 1, 2), (4, 3))
    del tmp23
    tmp25 += tmp24
    del tmp24
    tmp51 = np.copy(f.ov) * -1
    tmp44 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp51 += tmp44
    del tmp44
    tmp45 = einsum(t2, (0, 1, 2, 3), tmp3, (0, 2), (1, 3))
    tmp51 += tmp45 * -1
    del tmp45
    tmp46 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp46 += np.transpose(tmp40, (1, 0)) * -1
    del tmp40
    tmp47 = einsum(t1, (0, 1), tmp46, (1, 2), (0, 2))
    del tmp46
    tmp51 += tmp47 * -1
    del tmp47
    tmp49 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp49 += tmp5
    del tmp5
    tmp48 = einsum(t1, (0, 1), tmp3, (2, 1), (0, 2))
    tmp49 += np.transpose(tmp48, (1, 0))
    del tmp48
    tmp50 = einsum(t1, (0, 1), tmp49, (0, 2), (2, 1))
    del tmp49
    tmp51 += tmp50
    del tmp50

    return {"tmp1": tmp1, "tmp10": tmp10, "tmp12": tmp12, "tmp16": tmp16, "tmp19": tmp19, "tmp25": tmp25, "tmp28": tmp28, "tmp3": tmp3, "tmp32": tmp32, "tmp35": tmp35, "tmp38": tmp38, "tmp41": tmp41, "tmp43": tmp43, "tmp51": tmp51, "tmp7": tmp7}

def hbar_matvec_ip(f=None, ints=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        t1: 
        t2: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(r1, (0,), ints.tmp7, (0, 1), (1,)) * -1
    r1new += einsum(r2, (0, 1, 2), ints.tmp3, (1, 2), (0,))
    r1new += einsum(r2, (0, 1, 2), ints.tmp1, (0, 1, 3, 2), (3,)) * -0.5
    r2new = einsum(ints.tmp41, (0, 1), r2, (2, 3, 0), (3, 2, 1))
    tmp0 = einsum(v.oovv, (0, 1, 2, 3), r2, (0, 1, 2), (3,)) * -1
    r2new += einsum(tmp0, (0,), t2, (1, 2, 3, 0), (1, 2, 3)) * 0.5
    del tmp0
    r2new += einsum(r1, (0,), ints.tmp43, (1, 2, 0, 3), (2, 1, 3)) * -1
    tmp7 = einsum(r1, (0,), ints.tmp25, (1, 2), (1, 0, 2)) * -0.5
    tmp1 = einsum(r1, (0,), ints.tmp32, (1, 0, 2, 3), (1, 2, 3))
    tmp7 += tmp1
    del tmp1
    tmp2 = einsum(ints.tmp12, (0, 1, 2, 3), r2, (1, 2, 4), (0, 3, 4))
    tmp7 += tmp2 * 0.5
    del tmp2
    tmp3 = np.copy(ints.tmp16)
    tmp3 += np.transpose(ints.tmp28, (1, 0, 2, 3))
    tmp4 = einsum(tmp3, (0, 1, 2, 3), r2, (0, 4, 3), (4, 1, 2))
    del tmp3
    tmp7 += np.transpose(tmp4, (1, 0, 2)) * -1
    del tmp4
    tmp5 = np.copy(ints.tmp19) * 0.5
    tmp5 += np.transpose(ints.tmp35, (1, 0))
    tmp6 = einsum(tmp5, (0, 1), r2, (1, 2, 3), (2, 0, 3))
    del tmp5
    tmp7 += np.transpose(tmp6, (1, 0, 2))
    del tmp6
    r2new += tmp7 * -1
    r2new += np.transpose(tmp7, (1, 0, 2))
    del tmp7
    tmp10 = einsum(r1, (0,), ints.tmp51, (1, 2), (1, 0, 2))
    tmp8 = einsum(r2, (0, 1, 2), f.oo, (3, 1), (3, 0, 2))
    tmp10 += tmp8
    del tmp8
    tmp9 = einsum(r1, (0,), ints.tmp10, (1, 0, 2, 3), (1, 2, 3))
    tmp10 += tmp9
    del tmp9
    r2new += tmp10
    r2new += np.transpose(tmp10, (1, 0, 2)) * -1
    del tmp10
    tmp11 = einsum(t1, (0, 1), r1, (2,), (0, 2, 1)) * 2
    tmp11 += np.transpose(r2, (1, 0, 2))
    r2new += einsum(tmp11, (0, 1, 2), ints.tmp38, (0, 1, 3, 4), (3, 4, 2)) * -0.5
    del tmp11

    return {"r1new": r1new, "r2new": r2new}

def hbar_matvec_ea_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp0: 
        tmp10: 
        tmp16: 
        tmp2: 
        tmp22: 
        tmp26: 
        tmp35: 
        tmp37: 
        tmp39: 
        tmp42: 
        tmp51: 
        tmp6: 
    """

    tmp0 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2))) * -1
    tmp0 += einsum(t1, (0, 1), v.oovv, (2, 0, 3, 4), (2, 1, 4, 3))
    tmp37 = np.copy(np.transpose(v.vvvv, (2, 3, 1, 0)))
    tmp5 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp5 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp37 += einsum(v.oovv, (0, 1, 2, 3), tmp5, (0, 1, 4, 5), (3, 2, 5, 4)) * -0.5
    tmp8 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 4), (2, 3, 1, 4))
    tmp10 = np.copy(np.transpose(tmp8, (1, 0, 2, 3)))
    del tmp8
    tmp9 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp10 += tmp9
    del tmp9
    tmp22 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3)))
    tmp20 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp20 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    tmp21 = einsum(v.oovv, (0, 1, 2, 3), tmp20, (0, 4, 2, 5), (4, 1, 5, 3))
    del tmp20
    tmp22 += tmp21 * -1
    del tmp21
    tmp6 = np.copy(np.transpose(f.vv, (1, 0))) * -1
    tmp3 = einsum(t1, (0, 1), f.ov, (0, 2), (2, 1))
    tmp6 += tmp3
    tmp4 = einsum(t1, (0, 1), v.ovvv, (0, 2, 1, 3), (2, 3)) * -1
    tmp6 += np.transpose(tmp4, (1, 0))
    tmp6 += einsum(tmp5, (0, 1, 2, 3), v.oovv, (0, 1, 2, 4), (4, 3)) * 0.5
    tmp32 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp35 = np.copy(tmp32)
    del tmp32
    tmp33 = einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp34 = einsum(t2, (0, 1, 2, 3), tmp33, (4, 0, 1, 3), (4, 2)) * -1
    del tmp33
    tmp35 += tmp34
    del tmp34
    tmp42 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp40 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp42 += tmp40
    tmp41 = einsum(t1, (0, 1), v.ooov, (0, 2, 3, 1), (2, 3)) * -1
    tmp42 += tmp41
    tmp42 += einsum(tmp5, (0, 1, 2, 3), v.oovv, (0, 4, 2, 3), (4, 1)) * 0.5
    tmp12 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 0, 5, 2), (4, 1, 5, 3))
    tmp13 = einsum(tmp12, (0, 1, 2, 3), t1, (1, 4), (0, 4, 2, 3))
    del tmp12
    tmp16 = np.copy(tmp13)
    del tmp13
    tmp14 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp14 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    tmp15 = einsum(v.ovvv, (0, 1, 2, 3), tmp14, (0, 4, 2, 5), (4, 5, 1, 3))
    del tmp14
    tmp16 += tmp15
    del tmp15
    tmp26 = np.copy(np.transpose(tmp3, (1, 0)))
    del tmp3
    tmp26 += tmp4
    tmp24 = np.copy(np.transpose(t2, (1, 0, 3, 2))) * 0.5
    tmp24 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp25 = einsum(v.oovv, (0, 1, 2, 3), tmp24, (0, 1, 2, 4), (4, 3))
    del tmp24
    tmp26 += tmp25
    del tmp25
    tmp39 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2))) * -2
    tmp39 += einsum(v.ooov, (0, 1, 2, 3), tmp5, (0, 1, 4, 5), (2, 3, 5, 4)) * -1
    tmp2 = np.copy(f.ov)
    tmp1 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp2 += tmp1
    del tmp1
    tmp39 += einsum(t2, (0, 1, 2, 3), tmp2, (0, 4), (1, 4, 3, 2)) * -2
    tmp51 = np.copy(f.ov) * -2
    tmp43 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp51 += tmp43 * 2
    del tmp43
    tmp44 = einsum(t2, (0, 1, 2, 3), v.ooov, (0, 1, 4, 3), (4, 2))
    tmp51 += tmp44
    del tmp44
    tmp45 = einsum(tmp2, (0, 1), t2, (0, 2, 1, 3), (2, 3)) * 2
    tmp51 += tmp45 * -1
    del tmp45
    tmp47 = np.copy(np.transpose(f.oo, (1, 0))) * 2
    tmp47 += tmp40 * 2
    del tmp40
    tmp47 += tmp41 * 2
    del tmp41
    tmp46 = einsum(tmp5, (0, 1, 2, 3), v.oovv, (0, 4, 2, 3), (4, 1))
    del tmp5
    tmp47 += tmp46
    del tmp46
    tmp48 = einsum(t1, (0, 1), tmp47, (0, 2), (2, 1))
    del tmp47
    tmp51 += tmp48
    del tmp48
    tmp49 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp49 += np.transpose(tmp4, (1, 0)) * -1
    del tmp4
    tmp50 = einsum(t1, (0, 1), tmp49, (1, 2), (0, 2)) * 2
    del tmp49
    tmp51 += tmp50 * -1
    del tmp50

    return {"tmp0": tmp0, "tmp10": tmp10, "tmp16": tmp16, "tmp2": tmp2, "tmp22": tmp22, "tmp26": tmp26, "tmp35": tmp35, "tmp37": tmp37, "tmp39": tmp39, "tmp42": tmp42, "tmp51": tmp51, "tmp6": tmp6}

def hbar_matvec_ea(f=None, ints=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        t1: 
        t2: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(r2, (0, 1, 2), ints.tmp0, (2, 3, 1, 0), (3,)) * 0.5
    r1new += einsum(r1, (0,), ints.tmp6, (0, 1), (1,)) * -1
    r1new += einsum(r2, (0, 1, 2), ints.tmp2, (2, 1), (0,))
    r2new = einsum(ints.tmp37, (0, 1, 2, 3), r2, (1, 0, 4), (2, 3, 4)) * 0.5
    tmp0 = einsum(ints.tmp37, (0, 1, 2, 3), r1, (1,), (0, 2, 3))
    r2new += einsum(t1, (0, 1), tmp0, (1, 2, 3), (2, 3, 0))
    del tmp0
    tmp1 = einsum(v.oovv, (0, 1, 2, 3), r2, (2, 3, 0), (1,)) * -1
    r2new += einsum(tmp1, (0,), t2, (1, 0, 2, 3), (3, 2, 1)) * -0.5
    del tmp1
    r2new += einsum(ints.tmp42, (0, 1), r2, (2, 3, 0), (3, 2, 1))
    r2new += einsum(ints.tmp39, (0, 1, 2, 3), r1, (1,), (3, 2, 0)) * 0.5
    tmp2 = einsum(ints.tmp16, (0, 1, 2, 3), r1, (3,), (0, 1, 2))
    tmp12 = np.copy(tmp2) * -1
    del tmp2
    tmp3 = np.copy(ints.tmp10)
    tmp3 += ints.tmp22 * -1
    tmp4 = einsum(r2, (0, 1, 2), tmp3, (3, 2, 4, 0), (3, 1, 4))
    del tmp3
    tmp12 += np.transpose(tmp4, (0, 2, 1))
    del tmp4
    tmp5 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp5 += np.transpose(ints.tmp26, (1, 0)) * -1
    tmp6 = einsum(tmp5, (0, 1), r2, (0, 2, 3), (3, 2, 1))
    del tmp5
    tmp12 += np.transpose(tmp6, (0, 2, 1))
    del tmp6
    tmp7 = einsum(r1, (0,), v.ovov, (1, 0, 2, 3), (2, 1, 3))
    tmp9 = np.copy(tmp7)
    del tmp7
    tmp8 = einsum(v.ovvv, (0, 1, 2, 3), r2, (2, 3, 4), (4, 0, 1))
    tmp9 += np.transpose(tmp8, (1, 0, 2)) * -0.5
    del tmp8
    tmp10 = einsum(tmp9, (0, 1, 2), t1, (0, 3), (1, 3, 2))
    del tmp9
    tmp12 += tmp10
    del tmp10
    tmp11 = np.copy(ints.tmp35)
    tmp11 += ints.tmp51
    tmp12 += einsum(tmp11, (0, 1), r1, (2,), (0, 1, 2)) * 0.5
    del tmp11
    r2new += np.transpose(tmp12, (1, 2, 0))
    r2new += np.transpose(tmp12, (2, 1, 0)) * -1
    del tmp12

    return {"r1new": r1new, "r2new": r2new}

def hbar_matvec_ee_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp0: 
        tmp1: 
        tmp106: 
        tmp111: 
        tmp12: 
        tmp14: 
        tmp2: 
        tmp24: 
        tmp35: 
        tmp4: 
        tmp42: 
        tmp47: 
        tmp54: 
        tmp56: 
        tmp6: 
        tmp71: 
        tmp73: 
        tmp80: 
        tmp84: 
        tmp9: 
        tmp91: 
        tmp94: 
        tmp95: 
    """

    tmp4 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1))) * -1
    tmp2 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp4 += np.transpose(tmp2, (1, 0, 2, 3))
    tmp3 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 0, 5, 2), (4, 1, 5, 3))
    tmp4 += np.transpose(tmp3, (1, 0, 2, 3))
    tmp47 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 0, 5, 2), (4, 5, 1, 3)) * -1
    tmp56 = np.copy(tmp2)
    tmp56 += tmp3
    tmp80 = einsum(t1, (0, 1), v.ovov, (2, 1, 3, 4), (0, 3, 2, 4))
    tmp84 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * -1
    tmp84 += tmp3
    del tmp3
    tmp95 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp95 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp10 = einsum(t1, (0, 1), v.ooov, (0, 2, 3, 1), (2, 3)) * -1
    tmp91 = np.copy(tmp10)
    tmp5 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp90 = einsum(t1, (0, 1), tmp5, (2, 1), (0, 2))
    tmp91 += np.transpose(tmp90, (1, 0))
    del tmp90
    tmp9 = np.copy(np.transpose(f.vv, (1, 0))) * -1
    tmp7 = einsum(t1, (0, 1), v.ovvv, (0, 2, 1, 3), (2, 3)) * -1
    tmp9 += np.transpose(tmp7, (1, 0))
    tmp8 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 3, 4), (2, 4)) * -1
    tmp9 += np.transpose(tmp8, (1, 0)) * 0.5
    tmp41 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp42 = np.copy(np.transpose(tmp41, (1, 0))) * 2
    del tmp41
    tmp11 = einsum(t2, (0, 1, 2, 3), v.oovv, (1, 4, 2, 3), (0, 4)) * -1
    tmp42 += tmp11
    tmp73 = np.copy(tmp7)
    tmp73 += tmp8 * 0.5
    del tmp8
    tmp12 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp12 += tmp10
    tmp12 += np.transpose(tmp11, (1, 0)) * 0.5
    tmp6 = np.copy(f.ov)
    tmp6 += tmp5
    tmp12 += einsum(tmp6, (0, 1), t1, (2, 1), (0, 2))
    tmp21 = einsum(t1, (0, 1), v.oooo, (2, 3, 0, 4), (2, 3, 4, 1)) * -1
    tmp24 = np.copy(np.transpose(tmp21, (1, 0, 2, 3)))
    del tmp21
    tmp22 = einsum(t1, (0, 1), tmp2, (2, 3, 4, 1), (2, 0, 3, 4)) * -1
    tmp24 += tmp22
    del tmp22
    tmp23 = einsum(t2, (0, 1, 2, 3), tmp5, (4, 3), (0, 1, 4, 2)) * -1
    del tmp5
    tmp24 += tmp23
    del tmp23
    tmp35 = np.copy(np.transpose(v.ovvv, (0, 3, 2, 1))) * -1
    tmp33 = einsum(t1, (0, 1), v.vvvv, (2, 3, 1, 4), (0, 2, 3, 4)) * -1
    tmp35 += np.transpose(tmp33, (0, 2, 1, 3))
    del tmp33
    tmp14 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -1
    tmp0 = einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp14 += np.transpose(tmp0, (2, 1, 0, 3))
    tmp34 = einsum(t2, (0, 1, 2, 3), tmp14, (0, 1, 4, 5), (4, 5, 2, 3)) * 0.5
    tmp35 += np.transpose(tmp34, (0, 3, 2, 1)) * -1
    del tmp34
    tmp50 = einsum(t2, (0, 1, 2, 3), v.ooov, (1, 4, 5, 3), (0, 4, 5, 2)) * -1
    tmp54 = np.copy(tmp50) * -1
    del tmp50
    tmp51 = einsum(t1, (0, 1), v.ooov, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp52 = einsum(t1, (0, 1), tmp51, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp54 += tmp52
    del tmp52
    tmp53 = einsum(tmp0, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5))
    tmp54 += np.transpose(tmp53, (0, 2, 1, 3))
    del tmp53
    tmp94 = np.copy(np.transpose(v.oooo, (2, 3, 1, 0))) * -1
    tmp67 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp94 += np.transpose(tmp67, (3, 2, 1, 0)) * 0.5
    tmp68 = einsum(tmp0, (0, 1, 2, 3), t1, (4, 3), (0, 4, 2, 1))
    tmp94 += np.transpose(tmp68, (2, 3, 1, 0)) * -1
    tmp94 += np.transpose(tmp51, (2, 1, 0, 3))
    tmp94 += np.transpose(tmp51, (2, 1, 3, 0)) * -1
    del tmp51
    tmp71 = np.copy(np.transpose(v.ooov, (2, 1, 0, 3))) * -1
    tmp65 = einsum(f.ov, (0, 1), t2, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp71 += np.transpose(tmp65, (0, 2, 1, 3))
    del tmp65
    tmp66 = einsum(v.ovvv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp71 += np.transpose(tmp66, (2, 1, 0, 3)) * -0.5
    del tmp66
    tmp69 = np.copy(np.transpose(tmp67, (1, 0, 3, 2))) * -0.5
    del tmp67
    tmp69 += np.transpose(tmp68, (0, 1, 3, 2))
    del tmp68
    tmp70 = einsum(t1, (0, 1), tmp69, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp69
    tmp71 += np.transpose(tmp70, (2, 1, 0, 3))
    del tmp70
    tmp106 = np.copy(f.ov) * -1
    tmp97 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp106 += tmp97
    tmp98 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp106 += tmp98 * 0.5
    tmp1 = np.copy(np.transpose(v.ooov, (2, 1, 0, 3)))
    tmp1 += np.transpose(tmp0, (0, 2, 1, 3)) * -1
    tmp99 = einsum(t2, (0, 1, 2, 3), tmp1, (4, 0, 1, 2), (4, 3)) * 0.5
    tmp106 += tmp99
    del tmp99
    tmp100 = einsum(tmp6, (0, 1), t2, (0, 2, 1, 3), (2, 3))
    tmp106 += tmp100 * -1
    del tmp100
    tmp102 = np.copy(np.transpose(f.oo, (1, 0))) * 2
    tmp102 += tmp10 * 2
    del tmp10
    tmp102 += np.transpose(tmp11, (1, 0))
    del tmp11
    tmp101 = einsum(tmp6, (0, 1), t1, (2, 1), (0, 2)) * 2
    tmp102 += tmp101
    del tmp101
    tmp103 = einsum(tmp102, (0, 1), t1, (0, 2), (1, 2)) * 0.5
    tmp106 += tmp103
    del tmp103
    tmp104 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp104 += np.transpose(tmp7, (1, 0)) * -1
    del tmp7
    tmp105 = einsum(tmp104, (0, 1), t1, (2, 0), (2, 1))
    tmp106 += tmp105 * -1
    del tmp105
    tmp111 = np.copy(f.ov) * -2
    tmp111 += tmp97 * 2
    del tmp97
    tmp111 += tmp98
    del tmp98
    tmp107 = einsum(t2, (0, 1, 2, 3), tmp1, (4, 0, 1, 2), (4, 3))
    tmp111 += tmp107
    del tmp107
    tmp108 = einsum(tmp6, (0, 1), t2, (0, 2, 1, 3), (2, 3)) * 2
    tmp111 += tmp108 * -1
    del tmp108
    tmp109 = einsum(tmp102, (0, 1), t1, (0, 2), (1, 2))
    del tmp102
    tmp111 += tmp109
    del tmp109
    tmp110 = einsum(tmp104, (0, 1), t1, (2, 0), (2, 1)) * 2
    del tmp104
    tmp111 += tmp110 * -1
    del tmp110

    return {"tmp0": tmp0, "tmp1": tmp1, "tmp106": tmp106, "tmp111": tmp111, "tmp12": tmp12, "tmp14": tmp14, "tmp2": tmp2, "tmp24": tmp24, "tmp35": tmp35, "tmp4": tmp4, "tmp42": tmp42, "tmp47": tmp47, "tmp54": tmp54, "tmp56": tmp56, "tmp6": tmp6, "tmp71": tmp71, "tmp73": tmp73, "tmp80": tmp80, "tmp84": tmp84, "tmp9": tmp9, "tmp91": tmp91, "tmp94": tmp94, "tmp95": tmp95}

def hbar_matvec_ee(f=None, ints=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        t1: 
        t2: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(ints.tmp9, (0, 1), r1, (2, 0), (2, 1)) * -1
    r1new += einsum(r2, (0, 1, 2, 3), ints.tmp1, (4, 0, 1, 3), (4, 2)) * 0.5
    r1new += einsum(r1, (0, 1), ints.tmp4, (0, 2, 3, 1), (2, 3))
    r1new += einsum(ints.tmp6, (0, 1), r2, (2, 0, 3, 1), (2, 3))
    r1new += einsum(ints.tmp12, (0, 1), r1, (0, 2), (1, 2)) * -1
    r1new += einsum(v.ovvv, (0, 1, 2, 3), r2, (4, 0, 2, 3), (4, 1)) * -0.5
    tmp0 = einsum(r1, (0, 1), ints.tmp6, (2, 1), (2, 0))
    tmp2 = np.copy(tmp0) * 2
    tmp2 += einsum(r1, (0, 1), ints.tmp14, (0, 2, 3, 1), (2, 3)) * -2
    tmp1 = einsum(r2, (0, 1, 2, 3), v.oovv, (1, 4, 2, 3), (0, 4)) * -1
    tmp2 += np.transpose(tmp1, (1, 0))
    r1new += einsum(tmp2, (0, 1), t1, (0, 2), (1, 2)) * -0.5
    del tmp2
    r2new = einsum(ints.tmp94, (0, 1, 2, 3), r2, (1, 0, 4, 5), (2, 3, 5, 4)) * 0.5
    r2new += einsum(v.vvvv, (0, 1, 2, 3), r2, (4, 5, 3, 2), (5, 4, 1, 0)) * -0.5
    tmp3 = einsum(v.oovv, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1))
    r2new += einsum(tmp3, (0, 1, 2, 3), ints.tmp95, (3, 2, 4, 5), (1, 0, 5, 4)) * -0.25
    del tmp3
    tmp4 = einsum(r2, (0, 1, 2, 3), ints.tmp6, (4, 3), (4, 0, 1, 2))
    tmp5 = einsum(t1, (0, 1), tmp4, (0, 2, 3, 4), (2, 3, 4, 1))
    del tmp4
    tmp15 = np.copy(tmp5)
    del tmp5
    tmp6 = einsum(r1, (0, 1), v.ovvv, (0, 2, 1, 3), (2, 3)) * -1
    tmp7 = einsum(tmp6, (0, 1), t2, (2, 3, 4, 1), (2, 3, 4, 0)) * -1
    del tmp6
    tmp15 += tmp7 * -1
    del tmp7
    tmp8 = einsum(v.oovv, (0, 1, 2, 3), r2, (0, 1, 4, 2), (4, 3)) * -1
    tmp9 = einsum(tmp8, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    del tmp8
    tmp15 += tmp9 * 0.5
    del tmp9
    tmp10 = einsum(v.ovvv, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp13 = np.copy(np.transpose(tmp10, (1, 0, 2, 3)))
    del tmp10
    tmp11 = einsum(r1, (0, 1), v.oovv, (0, 2, 1, 3), (2, 3))
    tmp12 = einsum(tmp11, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    del tmp11
    tmp13 += tmp12 * -2
    del tmp12
    tmp14 = einsum(t1, (0, 1), tmp13, (2, 3, 0, 4), (2, 3, 4, 1)) * 0.5
    del tmp13
    tmp15 += np.transpose(tmp14, (1, 0, 3, 2))
    del tmp14
    r2new += tmp15 * -1
    r2new += np.transpose(tmp15, (0, 1, 3, 2))
    del tmp15
    tmp19 = einsum(ints.tmp106, (0, 1), r1, (2, 3), (0, 2, 1, 3))
    tmp16 = einsum(r1, (0, 1), ints.tmp0, (2, 3, 4, 1), (2, 3, 4, 0))
    tmp17 = einsum(t1, (0, 1), tmp16, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp16
    tmp18 = einsum(t1, (0, 1), tmp17, (2, 0, 3, 4), (2, 3, 1, 4))
    del tmp17
    tmp19 += tmp18
    del tmp18
    r2new += tmp19 * -1
    r2new += np.transpose(tmp19, (1, 0, 2, 3))
    del tmp19
    tmp31 = einsum(r1, (0, 1), ints.tmp111, (2, 3), (2, 0, 3, 1)) * 0.5
    tmp20 = einsum(ints.tmp35, (0, 1, 2, 3), r1, (4, 3), (0, 4, 1, 2))
    tmp31 += tmp20 * -1
    del tmp20
    tmp21 = einsum(r1, (0, 1), v.ooov, (0, 2, 3, 1), (2, 3)) * -1
    tmp22 = einsum(t2, (0, 1, 2, 3), tmp21, (1, 4), (0, 4, 2, 3)) * -1
    del tmp21
    tmp31 += np.transpose(tmp22, (0, 1, 3, 2))
    del tmp22
    tmp23 = einsum(v.ooov, (0, 1, 2, 3), r1, (4, 3), (4, 0, 1, 2))
    tmp24 = einsum(t1, (0, 1), tmp23, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp23
    tmp25 = einsum(t1, (0, 1), tmp24, (2, 0, 3, 4), (2, 3, 4, 1)) * -1
    del tmp24
    tmp31 += np.transpose(tmp25, (0, 1, 3, 2)) * -1
    del tmp25
    tmp27 = np.copy(np.transpose(tmp0, (1, 0)))
    del tmp0
    tmp26 = einsum(r1, (0, 1), ints.tmp0, (2, 0, 3, 1), (2, 3))
    tmp27 += tmp26
    del tmp26
    tmp27 += tmp1 * 0.5
    del tmp1
    tmp28 = einsum(t2, (0, 1, 2, 3), tmp27, (4, 0), (4, 1, 2, 3))
    del tmp27
    tmp31 += np.transpose(tmp28, (0, 1, 3, 2)) * -1
    del tmp28
    tmp29 = np.copy(np.transpose(f.oo, (1, 0))) * 2
    tmp29 += np.transpose(ints.tmp42, (1, 0))
    tmp30 = einsum(tmp29, (0, 1), r2, (0, 2, 3, 4), (1, 2, 3, 4)) * 0.5
    del tmp29
    tmp31 += np.transpose(tmp30, (0, 1, 3, 2)) * -1
    del tmp30
    r2new += np.transpose(tmp31, (0, 1, 3, 2))
    r2new += np.transpose(tmp31, (1, 0, 3, 2)) * -1
    del tmp31
    tmp32 = einsum(ints.tmp80, (0, 1, 2, 3), r1, (1, 4), (0, 2, 3, 4))
    tmp43 = np.copy(tmp32) * -1
    del tmp32
    tmp33 = einsum(ints.tmp47, (0, 1, 2, 3), r1, (4, 3), (0, 4, 1, 2))
    tmp43 += tmp33 * -1
    del tmp33
    tmp34 = einsum(v.ovov, (0, 1, 2, 3), r1, (4, 1), (4, 2, 0, 3))
    tmp35 = einsum(t1, (0, 1), tmp34, (2, 0, 3, 4), (2, 3, 1, 4))
    del tmp34
    tmp43 += tmp35
    del tmp35
    tmp36 = np.copy(ints.tmp2)
    tmp36 += ints.tmp84
    tmp37 = einsum(tmp36, (0, 1, 2, 3), r2, (1, 4, 3, 5), (0, 4, 2, 5))
    del tmp36
    tmp43 += tmp37
    del tmp37
    tmp38 = einsum(ints.tmp56, (0, 1, 2, 3), r1, (4, 3), (0, 1, 4, 2))
    tmp41 = np.copy(tmp38)
    del tmp38
    tmp39 = einsum(r2, (0, 1, 2, 3), v.ooov, (1, 4, 5, 3), (0, 4, 5, 2)) * -1
    tmp41 += tmp39
    del tmp39
    tmp40 = einsum(r2, (0, 1, 2, 3), ints.tmp0, (4, 1, 5, 3), (4, 5, 0, 2))
    tmp41 += tmp40 * -1
    del tmp40
    tmp42 = einsum(t1, (0, 1), tmp41, (2, 0, 3, 4), (2, 3, 4, 1))
    del tmp41
    tmp43 += tmp42 * -1
    del tmp42
    r2new += tmp43
    r2new += np.transpose(tmp43, (0, 1, 3, 2)) * -1
    r2new += np.transpose(tmp43, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp43, (1, 0, 3, 2))
    del tmp43
    tmp44 = einsum(ints.tmp71, (0, 1, 2, 3), r1, (0, 4), (1, 2, 3, 4))
    tmp47 = np.copy(tmp44)
    del tmp44
    tmp45 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp45 += np.transpose(ints.tmp73, (1, 0)) * -1
    tmp46 = einsum(r2, (0, 1, 2, 3), tmp45, (2, 4), (0, 1, 4, 3))
    del tmp45
    tmp47 += np.transpose(tmp46, (1, 0, 2, 3)) * -1
    del tmp46
    r2new += np.transpose(tmp47, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp47, (1, 0, 3, 2))
    del tmp47
    tmp48 = einsum(ints.tmp54, (0, 1, 2, 3), r1, (1, 4), (0, 2, 3, 4))
    r2new += tmp48
    r2new += np.transpose(tmp48, (0, 1, 3, 2)) * -1
    r2new += np.transpose(tmp48, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp48, (1, 0, 3, 2))
    del tmp48
    tmp49 = einsum(ints.tmp24, (0, 1, 2, 3), r1, (2, 4), (0, 1, 3, 4))
    r2new += tmp49
    r2new += np.transpose(tmp49, (0, 1, 3, 2)) * -1
    del tmp49
    tmp50 = einsum(ints.tmp91, (0, 1), r2, (2, 0, 3, 4), (1, 2, 3, 4))
    r2new += np.transpose(tmp50, (0, 1, 3, 2)) * -1
    r2new += np.transpose(tmp50, (1, 0, 3, 2))
    del tmp50


    return {"r1new": r1new, "r2new": r2new}

def hbar_lmatvec_ip_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp13: 
        tmp14: 
        tmp18: 
        tmp21: 
        tmp25: 
        tmp28: 
        tmp31: 
        tmp32: 
        tmp4: 
        tmp8: 
        tmp9: 
    """

    tmp4 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp25 = einsum(t1, (0, 1), tmp4, (2, 1), (0, 2))
    tmp27 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp27 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    tmp28 = einsum(v.oovv, (0, 1, 2, 3), tmp27, (0, 4, 2, 5), (4, 1, 5, 3))
    del tmp27
    tmp31 = np.copy(np.transpose(v.oooo, (2, 3, 1, 0))) * -0.5
    tmp6 = einsum(t1, (0, 1), v.ooov, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp31 += np.transpose(tmp6, (3, 0, 2, 1)) * -1
    tmp2 = np.copy(np.transpose(t2, (1, 0, 3, 2))) * 0.5
    tmp2 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp31 += einsum(v.oovv, (0, 1, 2, 3), tmp2, (4, 5, 2, 3), (5, 4, 1, 0)) * 0.5
    tmp18 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1))) * -1
    tmp16 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 4), (2, 3, 1, 4))
    tmp18 += tmp16
    del tmp16
    tmp17 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp18 += np.transpose(tmp17, (1, 0, 2, 3))
    del tmp17
    tmp10 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp21 = np.copy(tmp10) * 2
    tmp20 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 4, 2, 3), (4, 1))
    tmp21 += np.transpose(tmp20, (1, 0))
    del tmp20
    tmp32 = np.copy(np.transpose(f.vv, (1, 0))) * -1
    tmp32 += einsum(t1, (0, 1), f.ov, (0, 2), (1, 2))
    tmp32 += einsum(t1, (0, 1), v.ovvv, (0, 2, 1, 3), (2, 3)) * -1
    tmp32 += einsum(v.oovv, (0, 1, 2, 3), tmp2, (0, 1, 2, 4), (4, 3))
    tmp14 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp9 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp14 += np.transpose(tmp9, (1, 0))
    tmp14 += np.transpose(tmp10, (1, 0))
    tmp14 += einsum(v.oovv, (0, 1, 2, 3), tmp2, (0, 4, 2, 3), (4, 1))
    tmp8 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3)))
    tmp8 += einsum(t1, (0, 1), v.ovov, (2, 3, 4, 1), (4, 0, 2, 3)) * -2
    tmp1 = np.copy(np.transpose(v.ooov, (2, 1, 0, 3)))
    tmp0 = einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp1 += np.transpose(tmp0, (0, 2, 1, 3)) * -1
    del tmp0
    tmp8 += einsum(t2, (0, 1, 2, 3), tmp1, (4, 0, 5, 2), (1, 4, 5, 3)) * 2
    tmp3 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2))) * -1
    tmp3 += einsum(t1, (0, 1), v.oovv, (2, 0, 3, 4), (2, 1, 4, 3))
    tmp8 += einsum(tmp2, (0, 1, 2, 3), tmp3, (4, 5, 2, 3), (1, 0, 4, 5))
    del tmp3
    tmp5 = np.copy(f.ov)
    tmp5 += tmp4
    tmp8 += einsum(t2, (0, 1, 2, 3), tmp5, (4, 2), (1, 0, 4, 3))
    tmp7 = np.copy(np.transpose(v.oooo, (2, 3, 1, 0))) * -0.5
    tmp7 += np.transpose(tmp6, (2, 1, 3, 0)) * -1
    del tmp6
    tmp8 += einsum(t1, (0, 1), tmp7, (0, 2, 3, 4), (3, 4, 2, 1)) * -2
    del tmp7
    tmp13 = np.copy(f.ov) * -1
    tmp13 += einsum(t1, (0, 1), f.vv, (1, 2), (0, 2)) * -1
    tmp13 += einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp13 += einsum(t2, (0, 1, 2, 3), tmp1, (4, 0, 1, 2), (4, 3)) * 0.5
    del tmp1
    tmp13 += einsum(tmp2, (0, 1, 2, 3), v.ovvv, (0, 4, 2, 3), (1, 4)) * -1
    del tmp2
    tmp13 += einsum(t2, (0, 1, 2, 3), tmp5, (0, 2), (1, 3)) * -1
    del tmp5
    tmp12 = np.copy(np.transpose(f.oo, (1, 0))) * 2
    tmp12 += tmp9 * 2
    tmp12 += tmp10 * 2
    del tmp10
    tmp11 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp11 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp12 += einsum(tmp11, (0, 1, 2, 3), v.oovv, (0, 4, 2, 3), (4, 1))
    del tmp11
    tmp13 += einsum(tmp12, (0, 1), t1, (0, 2), (1, 2)) * 0.5
    del tmp12

    return {"tmp13": tmp13, "tmp14": tmp14, "tmp18": tmp18, "tmp21": tmp21, "tmp25": tmp25, "tmp28": tmp28, "tmp31": tmp31, "tmp32": tmp32, "tmp4": tmp4, "tmp8": tmp8, "tmp9": tmp9}

def hbar_lmatvec_ip(f=None, ints=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        t1: 
        t2: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(r1, (0,), ints.tmp14, (0, 1), (1,)) * -1
    r1new += einsum(ints.tmp13, (0, 1), r2, (2, 0, 1), (2,)) * -1
    r1new += einsum(r2, (0, 1, 2), ints.tmp8, (0, 1, 3, 2), (3,)) * 0.5
    r2new = einsum(r2, (0, 1, 2), ints.tmp32, (2, 3), (1, 0, 3))
    r2new += einsum(ints.tmp31, (0, 1, 2, 3), r2, (0, 1, 4), (2, 3, 4))
    r2new += einsum(r1, (0,), v.ooov, (1, 2, 0, 3), (2, 1, 3))
    tmp0 = einsum(ints.tmp21, (0, 1), r2, (2, 1, 3), (0, 2, 3))
    tmp4 = np.copy(tmp0) * -0.5
    del tmp0
    tmp1 = np.copy(ints.tmp18)
    tmp1 += np.transpose(ints.tmp28, (1, 0, 2, 3))
    tmp2 = einsum(tmp1, (0, 1, 2, 3), r2, (1, 4, 2), (4, 0, 3))
    del tmp1
    tmp4 += np.transpose(tmp2, (1, 0, 2)) * -1
    del tmp2
    tmp3 = np.copy(f.ov)
    tmp3 += ints.tmp4
    tmp4 += einsum(r1, (0,), tmp3, (1, 2), (1, 0, 2))
    del tmp3
    r2new += tmp4 * -1
    r2new += np.transpose(tmp4, (1, 0, 2))
    del tmp4
    tmp5 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp5 += ints.tmp25
    tmp5 += np.transpose(ints.tmp9, (1, 0))
    tmp6 = einsum(tmp5, (0, 1), r2, (0, 2, 3), (2, 1, 3))
    del tmp5
    r2new += np.transpose(tmp6, (1, 0, 2)) * -1
    r2new += tmp6
    del tmp6
    tmp7 = einsum(t1, (0, 1), r1, (0,), (1,))
    tmp7 += einsum(t2, (0, 1, 2, 3), r2, (0, 1, 2), (3,)) * -0.5
    r2new += einsum(tmp7, (0,), v.oovv, (1, 2, 0, 3), (2, 1, 3))
    del tmp7

    return {"r1new": r1new, "r2new": r2new}

def hbar_lmatvec_ea_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp14: 
        tmp18: 
        tmp23: 
        tmp25: 
        tmp27: 
        tmp30: 
        tmp31: 
        tmp4: 
        tmp8: 
    """

    tmp27 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp15 = einsum(t1, (0, 1), f.ov, (0, 2), (2, 1))
    tmp27 += np.transpose(tmp15, (1, 0)) * -1
    tmp30 = np.copy(np.transpose(v.vvvv, (2, 3, 1, 0))) * -0.5
    tmp30 += einsum(t1, (0, 1), v.ovvv, (0, 2, 3, 4), (2, 1, 4, 3)) * -1
    tmp10 = np.copy(np.transpose(t2, (1, 0, 3, 2))) * 0.5
    tmp10 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    tmp30 += einsum(tmp10, (0, 1, 2, 3), v.oovv, (0, 1, 4, 5), (3, 2, 5, 4)) * 0.5
    tmp16 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp25 = np.copy(tmp16)
    tmp17 = einsum(tmp10, (0, 1, 2, 3), v.oovv, (0, 1, 2, 4), (3, 4))
    tmp25 += tmp17
    tmp23 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * -1
    tmp6 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp23 += tmp6
    tmp21 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp21 += einsum(t1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    tmp22 = einsum(v.oovv, (0, 1, 2, 3), tmp21, (0, 4, 2, 5), (4, 1, 5, 3))
    del tmp21
    tmp23 += tmp22
    del tmp22
    tmp31 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp11 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp31 += np.transpose(tmp11, (1, 0))
    tmp12 = einsum(t1, (0, 1), v.ooov, (0, 2, 3, 1), (2, 3)) * -1
    tmp31 += np.transpose(tmp12, (1, 0))
    tmp31 += einsum(v.oovv, (0, 1, 2, 3), tmp10, (0, 4, 2, 3), (4, 1))
    tmp18 = np.copy(np.transpose(f.vv, (1, 0))) * -1
    tmp18 += np.transpose(tmp15, (1, 0))
    del tmp15
    tmp18 += tmp16
    del tmp16
    tmp18 += tmp17
    del tmp17
    tmp8 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2)))
    tmp8 += einsum(t1, (0, 1), v.vvvv, (2, 1, 3, 4), (0, 2, 4, 3)) * -1
    tmp1 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -1
    tmp0 = einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp1 += np.transpose(tmp0, (2, 1, 0, 3))
    tmp2 = np.copy(np.transpose(t2, (1, 0, 3, 2)))
    tmp2 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp8 += einsum(tmp2, (0, 1, 2, 3), tmp1, (0, 1, 4, 5), (4, 5, 3, 2)) * 0.5
    del tmp1
    tmp3 = np.copy(np.transpose(v.ovvv, (0, 1, 3, 2)))
    tmp3 += einsum(t1, (0, 1), v.oovv, (2, 0, 3, 4), (2, 1, 4, 3)) * -1
    tmp8 += einsum(t2, (0, 1, 2, 3), tmp3, (0, 4, 2, 5), (1, 5, 3, 4)) * 2
    del tmp3
    tmp5 = np.copy(f.ov)
    tmp4 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp5 += tmp4
    tmp8 += einsum(t2, (0, 1, 2, 3), tmp5, (0, 4), (1, 4, 3, 2))
    tmp7 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1)))
    tmp7 += np.transpose(tmp6, (1, 0, 2, 3)) * -1
    del tmp6
    tmp8 += einsum(t1, (0, 1), tmp7, (0, 2, 3, 4), (2, 4, 3, 1)) * -2
    del tmp7
    tmp14 = np.copy(f.ov) * -1
    tmp14 += einsum(t1, (0, 1), f.vv, (1, 2), (0, 2)) * -1
    tmp14 += einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp9 = np.copy(np.transpose(v.ooov, (2, 1, 0, 3)))
    tmp9 += np.transpose(tmp0, (0, 2, 1, 3)) * -1
    del tmp0
    tmp14 += einsum(t2, (0, 1, 2, 3), tmp9, (4, 0, 1, 2), (4, 3)) * 0.5
    del tmp9
    tmp14 += einsum(tmp10, (0, 1, 2, 3), v.ovvv, (0, 4, 2, 3), (1, 4)) * -1
    del tmp10
    tmp14 += einsum(t2, (0, 1, 2, 3), tmp5, (0, 2), (1, 3)) * -1
    del tmp5
    tmp13 = np.copy(np.transpose(f.oo, (1, 0))) * 2
    tmp13 += tmp11 * 2
    del tmp11
    tmp13 += tmp12 * 2
    del tmp12
    tmp13 += einsum(v.oovv, (0, 1, 2, 3), tmp2, (0, 4, 2, 3), (1, 4))
    del tmp2
    tmp14 += einsum(t1, (0, 1), tmp13, (0, 2), (2, 1)) * 0.5
    del tmp13

    return {"tmp14": tmp14, "tmp18": tmp18, "tmp23": tmp23, "tmp25": tmp25, "tmp27": tmp27, "tmp30": tmp30, "tmp31": tmp31, "tmp4": tmp4, "tmp8": tmp8}

def hbar_lmatvec_ea(f=None, ints=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        t1: 
        t2: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(r2, (0, 1, 2), ints.tmp8, (2, 3, 1, 0), (3,)) * -0.5
    r1new += einsum(r1, (0,), ints.tmp18, (0, 1), (1,)) * -1
    r1new += einsum(ints.tmp14, (0, 1), r2, (2, 1, 0), (2,)) * -1
    r2new = einsum(ints.tmp30, (0, 1, 2, 3), r2, (1, 0, 4), (2, 3, 4)) * -1
    r2new += einsum(ints.tmp31, (0, 1), r2, (2, 3, 0), (3, 2, 1))
    r2new += einsum(r1, (0,), v.ovvv, (1, 0, 2, 3), (3, 2, 1))
    tmp0 = einsum(t1, (0, 1), r2, (2, 1, 3), (3, 0, 2))
    tmp1 = einsum(v.ooov, (0, 1, 2, 3), tmp0, (2, 1, 4), (0, 4, 3))
    del tmp0
    tmp5 = np.copy(tmp1) * -1
    del tmp1
    tmp2 = np.copy(ints.tmp25)
    tmp2 += ints.tmp27 * -1
    tmp3 = einsum(tmp2, (0, 1), r2, (0, 2, 3), (3, 2, 1))
    del tmp2
    tmp5 += np.transpose(tmp3, (0, 2, 1))
    del tmp3
    tmp4 = np.copy(f.ov)
    tmp4 += ints.tmp4
    tmp5 += einsum(r1, (0,), tmp4, (1, 2), (1, 2, 0))
    del tmp4
    r2new += np.transpose(tmp5, (1, 2, 0)) * -1
    r2new += np.transpose(tmp5, (2, 1, 0))
    del tmp5
    tmp6 = einsum(ints.tmp23, (0, 1, 2, 3), r2, (4, 2, 0), (1, 3, 4))
    r2new += np.transpose(tmp6, (1, 2, 0)) * -1
    r2new += np.transpose(tmp6, (2, 1, 0))
    del tmp6
    tmp7 = einsum(t1, (0, 1), r1, (1,), (0,))
    tmp7 += einsum(t2, (0, 1, 2, 3), r2, (2, 3, 0), (1,)) * -0.5
    r2new += einsum(tmp7, (0,), v.oovv, (0, 1, 2, 3), (3, 2, 1))
    del tmp7

    return {"r1new": r1new, "r2new": r2new}

def hbar_lmatvec_ee_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        t1: 
        t2: 
        v: 

    Returns:
        tmp1: 
        tmp13: 
        tmp15: 
        tmp17: 
        tmp23: 
        tmp24: 
        tmp29: 
        tmp30: 
        tmp34: 
        tmp4: 
        tmp41: 
        tmp47: 
        tmp49: 
        tmp5: 
        tmp53: 
        tmp55: 
        tmp6: 
        tmp7: 
    """

    tmp4 = np.copy(np.transpose(v.ovvv, (0, 3, 2, 1)))
    tmp4 += einsum(t1, (0, 1), v.vvvv, (2, 1, 3, 4), (0, 4, 3, 2)) * -1
    tmp4 += einsum(t2, (0, 1, 2, 3), v.ovvv, (0, 4, 5, 2), (1, 3, 4, 5)) * 2
    tmp3 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -1
    tmp1 = einsum(t1, (0, 1), v.oovv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp3 += np.transpose(tmp1, (2, 1, 0, 3))
    tmp4 += einsum(tmp3, (0, 1, 2, 3), t2, (0, 1, 4, 5), (2, 5, 4, 3)) * 0.5
    del tmp3
    tmp6 = einsum(t1, (0, 1), v.oovv, (2, 0, 1, 3), (2, 3)) * -1
    tmp53 = einsum(tmp6, (0, 1), t1, (2, 1), (2, 0))
    tmp8 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp17 = np.copy(tmp8) * 2
    tmp17 += einsum(t1, (0, 1), tmp1, (2, 3, 0, 4), (2, 3, 1, 4)) * -1
    tmp47 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp46 = einsum(f.ov, (0, 1), t1, (2, 1), (0, 2))
    tmp47 += np.transpose(tmp46, (1, 0))
    del tmp46
    tmp15 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1))) * -1
    tmp15 += einsum(t1, (0, 1), v.ooov, (0, 2, 3, 4), (2, 3, 1, 4)) * -0.5
    tmp14 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 0, 5, 2), (1, 4, 3, 5))
    tmp15 += np.transpose(tmp14, (1, 0, 2, 3))
    tmp21 = einsum(t1, (0, 1), v.ovvv, (0, 2, 1, 3), (2, 3)) * -1
    tmp41 = np.copy(tmp21)
    tmp28 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 4, 2), (3, 4)) * -1
    tmp41 += tmp28 * 0.5
    tmp18 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp49 = np.copy(tmp18) * 2
    tmp19 = einsum(v.oovv, (0, 1, 2, 3), t2, (1, 4, 2, 3), (4, 0)) * -1
    tmp49 += np.transpose(tmp19, (1, 0))
    tmp24 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1))) * -1
    tmp24 += np.transpose(tmp8, (0, 1, 3, 2))
    tmp24 += np.transpose(tmp14, (0, 1, 3, 2))
    tmp29 = np.copy(np.transpose(f.vv, (1, 0))) * -1
    tmp29 += tmp21
    tmp29 += tmp28 * 0.5
    del tmp28
    tmp34 = np.copy(np.transpose(v.ovov, (2, 0, 1, 3))) * -1
    tmp34 += tmp8
    tmp34 += tmp14
    del tmp14
    tmp55 = np.copy(np.transpose(v.oooo, (2, 3, 1, 0))) * -2
    tmp10 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp55 += np.transpose(tmp10, (1, 0, 3, 2))
    tmp11 = np.copy(np.transpose(v.ooov, (1, 0, 2, 3))) * -1
    tmp11 += np.transpose(tmp1, (2, 1, 0, 3)) * 0.5
    tmp55 += einsum(t1, (0, 1), tmp11, (2, 3, 4, 1), (4, 0, 3, 2)) * -4
    tmp30 = np.copy(np.transpose(f.oo, (1, 0)))
    tmp30 += np.transpose(tmp18, (1, 0))
    tmp30 += tmp19 * 0.5
    tmp7 = np.copy(f.ov)
    tmp7 += tmp6
    tmp30 += einsum(t1, (0, 1), tmp7, (2, 1), (0, 2))
    tmp13 = np.copy(np.transpose(v.ooov, (2, 1, 0, 3)))
    tmp13 += einsum(t2, (0, 1, 2, 3), v.ovvv, (4, 5, 2, 3), (4, 1, 0, 5)) * 0.5
    tmp5 = np.copy(np.transpose(v.ooov, (2, 1, 0, 3)))
    tmp5 += np.transpose(tmp1, (0, 2, 1, 3)) * -1
    tmp13 += einsum(t2, (0, 1, 2, 3), tmp5, (4, 0, 5, 2), (5, 1, 4, 3)) * 2
    tmp13 += einsum(tmp7, (0, 1), t2, (2, 3, 1, 4), (0, 3, 2, 4))
    tmp9 = np.copy(np.transpose(v.ovov, (2, 0, 3, 1)))
    tmp9 += np.transpose(tmp8, (0, 1, 3, 2)) * -0.5
    del tmp8
    tmp13 += einsum(t1, (0, 1), tmp9, (2, 3, 1, 4), (3, 2, 0, 4)) * -2
    del tmp9
    tmp12 = np.copy(np.transpose(v.oooo, (2, 3, 1, 0))) * 0.5
    tmp12 += np.transpose(tmp10, (3, 2, 1, 0)) * -0.25
    del tmp10
    tmp12 += einsum(t1, (0, 1), tmp11, (2, 3, 4, 1), (3, 2, 0, 4)) * -1
    del tmp11
    tmp13 += einsum(t1, (0, 1), tmp12, (0, 2, 3, 4), (2, 4, 3, 1)) * -2
    del tmp12
    tmp23 = np.copy(f.ov) * -1
    tmp23 += einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp23 += einsum(t2, (0, 1, 2, 3), v.ovvv, (0, 4, 2, 3), (1, 4)) * -0.5
    tmp23 += einsum(t2, (0, 1, 2, 3), tmp5, (4, 0, 1, 2), (4, 3)) * 0.5
    tmp23 += einsum(t2, (0, 1, 2, 3), tmp7, (0, 2), (1, 3)) * -1
    tmp20 = np.copy(np.transpose(f.oo, (1, 0))) * 2
    tmp20 += tmp18 * 2
    del tmp18
    tmp20 += np.transpose(tmp19, (1, 0))
    del tmp19
    tmp20 += einsum(t1, (0, 1), tmp7, (2, 1), (2, 0)) * 2
    tmp23 += einsum(t1, (0, 1), tmp20, (0, 2), (2, 1)) * 0.5
    del tmp20
    tmp22 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp22 += np.transpose(tmp21, (1, 0)) * -1
    del tmp21
    tmp23 += einsum(t1, (0, 1), tmp22, (1, 2), (0, 2)) * -1
    del tmp22

    return {"tmp1": tmp1, "tmp13": tmp13, "tmp15": tmp15, "tmp17": tmp17, "tmp23": tmp23, "tmp24": tmp24, "tmp29": tmp29, "tmp30": tmp30, "tmp34": tmp34, "tmp4": tmp4, "tmp41": tmp41, "tmp47": tmp47, "tmp49": tmp49, "tmp5": tmp5, "tmp53": tmp53, "tmp55": tmp55, "tmp6": tmp6, "tmp7": tmp7}

def hbar_lmatvec_ee(f=None, ints=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """Code generated by `albert` 0.0.0.

    Args:
        f: 
        ints: 
        r1: 
        r2: 
        t1: 
        t2: 
        v: 

    Returns:
        r1new: 
        r2new: 
    """

    r1new = einsum(ints.tmp29, (0, 1), r1, (2, 0), (2, 1)) * -1
    r1new += einsum(ints.tmp13, (0, 1, 2, 3), r2, (1, 2, 4, 3), (0, 4)) * 0.5
    tmp0 = einsum(t1, (0, 1), r1, (2, 1), (2, 0))
    r1new += einsum(ints.tmp1, (0, 1, 2, 3), tmp0, (0, 2), (1, 3)) * -1
    r1new += einsum(ints.tmp23, (0, 1), r2, (2, 0, 3, 1), (2, 3)) * -1
    r1new += einsum(ints.tmp24, (0, 1, 2, 3), r1, (0, 3), (1, 2))
    r1new += einsum(ints.tmp30, (0, 1), r1, (0, 2), (1, 2)) * -1
    tmp1 = einsum(t2, (0, 1, 2, 3), r2, (0, 1, 2, 4), (4, 3))
    r1new += einsum(tmp1, (0, 1), v.ovvv, (2, 0, 3, 1), (2, 3)) * 0.5
    r1new += einsum(ints.tmp4, (0, 1, 2, 3), r2, (4, 0, 2, 1), (4, 3)) * -0.5
    tmp3 = np.copy(ints.tmp15) * 2
    tmp3 += np.transpose(ints.tmp17, (1, 0, 2, 3))
    tmp2 = einsum(t1, (0, 1), r2, (2, 3, 4, 1), (2, 3, 0, 4))
    r1new += einsum(tmp2, (0, 1, 2, 3), tmp3, (2, 0, 3, 4), (1, 4)) * -0.5
    del tmp3
    tmp5 = einsum(t2, (0, 1, 2, 3), tmp2, (0, 1, 4, 2), (4, 3))
    tmp4 = einsum(r2, (0, 1, 2, 3), t2, (1, 4, 2, 3), (0, 4)) * -1
    tmp5 += einsum(t1, (0, 1), tmp4, (0, 2), (2, 1))
    r1new += einsum(tmp5, (0, 1), v.oovv, (0, 2, 1, 3), (2, 3)) * -0.5
    del tmp5
    tmp6 = np.copy(tmp0) * 2
    tmp6 += tmp4
    r1new += einsum(tmp6, (0, 1), v.ooov, (1, 2, 0, 3), (2, 3)) * -0.5
    del tmp6
    tmp7 = np.copy(tmp0)
    del tmp0
    tmp7 += tmp4 * 0.5
    del tmp4
    r1new += einsum(tmp7, (0, 1), ints.tmp7, (1, 2), (0, 2)) * -1
    r2new = einsum(r2, (0, 1, 2, 3), ints.tmp55, (1, 0, 4, 5), (4, 5, 3, 2)) * 0.25
    r2new += einsum(v.vvvv, (0, 1, 2, 3), r2, (4, 5, 3, 2), (5, 4, 1, 0)) * -0.5
    r2new += einsum(v.ovvv, (0, 1, 2, 3), tmp2, (4, 5, 0, 1), (5, 4, 3, 2))
    tmp8 = einsum(r2, (0, 1, 2, 3), ints.tmp34, (1, 4, 3, 5), (4, 0, 5, 2))
    tmp12 = np.copy(tmp8)
    del tmp8
    tmp9 = einsum(v.ooov, (0, 1, 2, 3), tmp2, (4, 2, 1, 5), (4, 0, 5, 3))
    tmp12 += tmp9
    del tmp9
    tmp10 = einsum(ints.tmp1, (0, 1, 2, 3), tmp2, (4, 0, 2, 5), (1, 4, 3, 5))
    tmp12 += tmp10 * -1
    del tmp10
    tmp11 = np.copy(f.ov)
    tmp11 += ints.tmp6
    tmp12 += einsum(tmp11, (0, 1), r1, (2, 3), (0, 2, 1, 3))
    r2new += tmp12
    r2new += np.transpose(tmp12, (0, 1, 3, 2)) * -1
    r2new += np.transpose(tmp12, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp12, (1, 0, 3, 2))
    del tmp12
    tmp13 = einsum(v.oovv, (0, 1, 2, 3), tmp1, (4, 3), (1, 0, 4, 2))
    del tmp1
    tmp15 = np.copy(tmp13) * -0.5
    del tmp13
    tmp14 = einsum(tmp11, (0, 1), tmp2, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp11
    tmp15 += np.transpose(tmp14, (1, 0, 3, 2)) * -1
    del tmp14
    r2new += tmp15
    r2new += np.transpose(tmp15, (0, 1, 3, 2)) * -1
    del tmp15
    tmp16 = einsum(r1, (0, 1), v.ovvv, (2, 1, 3, 4), (0, 2, 3, 4))
    tmp20 = np.copy(np.transpose(tmp16, (0, 1, 3, 2)))
    del tmp16
    tmp17 = np.copy(ints.tmp49) * 0.5
    tmp17 += np.transpose(ints.tmp53, (1, 0))
    tmp18 = einsum(tmp17, (0, 1), r2, (1, 2, 3, 4), (2, 0, 3, 4))
    del tmp17
    tmp20 += np.transpose(tmp18, (1, 0, 3, 2))
    del tmp18
    tmp19 = einsum(tmp7, (0, 1), v.oovv, (1, 2, 3, 4), (2, 0, 3, 4))
    del tmp7
    tmp20 += np.transpose(tmp19, (1, 0, 3, 2))
    del tmp19
    r2new += tmp20
    r2new += np.transpose(tmp20, (1, 0, 2, 3)) * -1
    del tmp20
    tmp21 = np.copy(np.transpose(f.vv, (1, 0)))
    tmp21 += ints.tmp41 * -1
    tmp22 = einsum(r2, (0, 1, 2, 3), tmp21, (2, 4), (0, 1, 3, 4))
    del tmp21
    r2new += np.transpose(tmp22, (1, 0, 3, 2)) * -1
    r2new += np.transpose(tmp22, (1, 0, 2, 3))
    del tmp22
    tmp23 = einsum(ints.tmp5, (0, 1, 2, 3), r1, (0, 4), (1, 2, 3, 4))
    r2new += np.transpose(tmp23, (1, 0, 2, 3))
    r2new += np.transpose(tmp23, (1, 0, 3, 2)) * -1
    del tmp23
    tmp24 = einsum(r2, (0, 1, 2, 3), ints.tmp47, (1, 4), (4, 0, 2, 3))
    r2new += np.transpose(tmp24, (0, 1, 3, 2)) * -1
    r2new += np.transpose(tmp24, (1, 0, 3, 2))
    del tmp24
    tmp25 = einsum(r2, (0, 1, 2, 3), t2, (4, 5, 2, 3), (1, 0, 5, 4)) * -1
    tmp25 += einsum(t1, (0, 1), tmp2, (2, 3, 4, 1), (2, 3, 4, 0)) * 2
    del tmp2
    r2new += einsum(v.oovv, (0, 1, 2, 3), tmp25, (4, 5, 0, 1), (5, 4, 3, 2)) * -0.25
    del tmp25


    return {"r1new": r1new, "r2new": r2new}

