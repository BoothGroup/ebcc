# Code generated by qwick.

import numpy as np
from pyscf import lib
from types import SimpleNamespace
from ebcc.codegen import common

def energy(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, **kwargs):
    # energy
    x0 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x0 += lib.einsum("jiba->ijab", t2)
    x0 += lib.einsum("ia,jb->ijab", t1, t1) * 2
    e_cc = 0
    e_cc += lib.einsum("ijab,ijab->", v.oovv, x0) * 0.25
    del x0
    e_cc += lib.einsum("ia,ia->", f.ov, t1)

    return e_cc

def update_amps(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, **kwargs):
    # T1 and T2 amplitudes
    x0 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x0 += lib.einsum("kd,lmcd->klmc", t1, v.oovv)
    x1 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x1 += lib.einsum("kmlc->klmc", x0) * -1
    x25 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x25 += lib.einsum("lncd,knmd->klmc", t2, x0)
    x26 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x26 -= lib.einsum("kmlc->klmc", x25)
    del x25
    x47 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x47 += lib.einsum("lc,knmc->klmn", t1, x0)
    del x0
    x48 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x48 += lib.einsum("nmkl->klmn", x47) * -2.0000000000000013
    x49 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x49 += lib.einsum("nmkl->klmn", x47) * -1
    del x47
    x1 += lib.einsum("mlkc->klmc", v.ooov)
    t1new = np.zeros((nocc, nvir), dtype=np.float64)
    t1new += lib.einsum("lmdc,klmd->kc", t2, x1) * -0.5
    del x1
    x2 = np.zeros((nocc, nvir), dtype=np.float64)
    x2 += lib.einsum("ld,klcd->kc", t1, v.oovv)
    x3 = np.zeros((nocc, nvir), dtype=np.float64)
    x3 += lib.einsum("kc->kc", x2)
    x8 = np.zeros((nocc, nvir), dtype=np.float64)
    x8 += lib.einsum("kc->kc", x2)
    del x2
    x3 += lib.einsum("kc->kc", f.ov)
    x16 = np.zeros((nocc, nocc), dtype=np.float64)
    x16 += lib.einsum("kc,lc->kl", t1, x3)
    x17 = np.zeros((nocc, nocc), dtype=np.float64)
    x17 += lib.einsum("kl->kl", x16)
    del x16
    x33 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x33 += lib.einsum("md,kldc->klmc", x3, t2)
    x34 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x34 += lib.einsum("mlkc->klmc", x33)
    del x33
    t1new += lib.einsum("ld,lkdc->kc", x3, t2)
    del x3
    x4 = np.zeros((nvir, nvir), dtype=np.float64)
    x4 -= lib.einsum("ke,kced->cd", t1, v.ovvv)
    x5 = np.zeros((nvir, nvir), dtype=np.float64)
    x5 -= lib.einsum("cd->cd", x4)
    x29 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x29 -= lib.einsum("de,klce->klcd", x4, t2)
    del x4
    x36 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x36 += lib.einsum("klcd->klcd", x29)
    del x29
    x5 += lib.einsum("cd->cd", f.vv)
    t1new += lib.einsum("kd,cd->kc", t1, x5)
    del x5
    x6 = np.zeros((nocc, nocc), dtype=np.float64)
    x6 -= lib.einsum("mc,mklc->kl", t1, v.ooov)
    x9 = np.zeros((nocc, nocc), dtype=np.float64)
    x9 += lib.einsum("kl->kl", x6)
    x12 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x12 -= lib.einsum("ml,kmcd->klcd", x6, t2)
    del x6
    x19 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x19 -= lib.einsum("kldc->klcd", x12)
    del x12
    x7 = np.zeros((nocc, nocc), dtype=np.float64)
    x7 -= lib.einsum("kmdc,mldc->kl", t2, v.oovv)
    x9 += lib.einsum("lk->kl", x7) * 0.5
    x43 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x43 += lib.einsum("lm,kmcd->klcd", x7, t2)
    del x7
    x44 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x44 += lib.einsum("kldc->klcd", x43) * -0.5
    del x43
    x8 += lib.einsum("kc->kc", f.ov)
    x9 += lib.einsum("lc,kc->kl", t1, x8)
    del x8
    x9 += lib.einsum("kl->kl", f.oo)
    t1new += lib.einsum("lc,lk->kc", t1, x9) * -1
    del x9
    x10 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x10 += lib.einsum("kg,cdeg->kcde", t1, v.vvvv)
    t2new = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    t2new -= lib.einsum("ke,ldce->klcd", t1, x10)
    del x10
    x11 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x11 += lib.einsum("ke,cdle->klcd", t1, v.vvov)
    x19 += lib.einsum("kldc->klcd", x11)
    del x11
    x13 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x13 += lib.einsum("kc,lmnc->klmn", t1, v.ooov)
    x14 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x14 += lib.einsum("nc,klnm->klmc", t1, x13)
    x15 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x15 -= lib.einsum("md,kmlc->klcd", t1, x14)
    del x14
    x19 += lib.einsum("kldc->klcd", x15)
    del x15
    x42 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x42 += lib.einsum("nmcd,knml->klcd", t2, x13)
    del x13
    x44 += lib.einsum("kldc->klcd", x42) * -0.5
    del x42
    t2new += lib.einsum("klcd->klcd", x44) * -1
    t2new += lib.einsum("lkcd->klcd", x44)
    del x44
    x17 += lib.einsum("lk->kl", f.oo)
    x18 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x18 += lib.einsum("km,mlcd->klcd", x17, t2)
    del x17
    x19 += lib.einsum("kldc->klcd", x18)
    del x18
    t2new += lib.einsum("klcd->klcd", x19)
    t2new -= lib.einsum("lkcd->klcd", x19)
    del x19
    x20 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x20 += lib.einsum("kmce,mdle->klcd", t2, v.ovov)
    x28 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x28 -= lib.einsum("klcd->klcd", x20)
    del x20
    x21 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x21 += lib.einsum("ke,lcde->klcd", t1, v.ovvv)
    x22 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x22 -= lib.einsum("lmce,kmde->klcd", t2, x21)
    x28 += lib.einsum("klcd->klcd", x22)
    del x22
    x32 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x32 -= lib.einsum("ld,kmcd->klmc", t1, x21)
    del x21
    x34 += lib.einsum("mlkc->klmc", x32)
    del x32
    x35 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x35 += lib.einsum("md,mklc->klcd", t1, x34)
    del x34
    x36 -= lib.einsum("lkdc->klcd", x35)
    del x35
    x23 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x23 += lib.einsum("kd,lcmd->klmc", t1, v.ovov)
    x26 += lib.einsum("klmc->klmc", x23)
    del x23
    x24 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x24 -= lib.einsum("kncd,nlmd->klmc", t2, v.ooov)
    x26 += lib.einsum("klmc->klmc", x24)
    del x24
    x27 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x27 += lib.einsum("md,kmlc->klcd", t1, x26)
    del x26
    x28 += lib.einsum("kldc->klcd", x27)
    del x27
    t2new += lib.einsum("klcd->klcd", x28)
    t2new -= lib.einsum("kldc->klcd", x28)
    t2new -= lib.einsum("lkcd->klcd", x28)
    t2new += lib.einsum("lkdc->klcd", x28)
    del x28
    x30 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x30 += lib.einsum("kmce,mled->klcd", t2, v.oovv)
    x31 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x31 += lib.einsum("kmce,lmde->klcd", t2, x30)
    del x30
    x36 += lib.einsum("klcd->klcd", x31)
    del x31
    t2new += lib.einsum("klcd->klcd", x36)
    t2new -= lib.einsum("kldc->klcd", x36)
    del x36
    x37 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x37 += lib.einsum("kled,mced->klmc", t2, v.ovvv)
    x38 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x38 += lib.einsum("mc,klmd->klcd", t1, x37)
    del x37
    x41 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x41 += lib.einsum("klcd->klcd", x38) * 0.5
    del x38
    x39 = np.zeros((nvir, nvir), dtype=np.float64)
    x39 -= lib.einsum("lkce,lked->cd", t2, v.oovv)
    x40 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x40 += lib.einsum("de,klce->klcd", x39, t2)
    del x39
    x41 += lib.einsum("klcd->klcd", x40) * 0.5
    del x40
    t2new += lib.einsum("klcd->klcd", x41) * -1
    t2new += lib.einsum("kldc->klcd", x41)
    del x41
    x45 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x45 += lib.einsum("ce,klde->klcd", f.vv, t2)
    t2new += lib.einsum("lkcd->klcd", x45)
    t2new -= lib.einsum("lkdc->klcd", x45)
    del x45
    x46 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x46 += lib.einsum("kldc,mndc->klmn", t2, v.oovv)
    x48 += lib.einsum("nmlk->klmn", x46)
    x49 += lib.einsum("nmlk->klmn", x46) * 0.5000000000000003
    del x46
    x48 += lib.einsum("lknm->klmn", v.oooo) * 2
    t2new += lib.einsum("mndc,mnlk->klcd", t2, x48) * 0.25
    del x48
    x49 += lib.einsum("lknm->klmn", v.oooo)
    x50 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x50 += lib.einsum("nc,nmlk->klmc", t1, x49)
    del x49
    x50 += lib.einsum("mclk->klmc", v.ovoo)
    t2new += lib.einsum("mc,klmd->klcd", t1, x50)
    del x50
    t1new -= lib.einsum("ld,lckd->kc", t1, v.ovov)
    t1new += lib.einsum("kled,lced->kc", t2, v.ovvv) * -0.5
    t1new += lib.einsum("ck->kc", f.vo)
    t2new -= lib.einsum("md,mclk->klcd", t1, v.ovoo)
    t2new += lib.einsum("dclk->klcd", v.vvoo)
    t2new += lib.einsum("lkge,dcge->klcd", t2, v.vvvv) * 0.5

    return {"t1new": t1new, "t2new": t2new}

def update_lams(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    # L1 and L2 amplitudes
    x0 = np.zeros((nocc, nocc), dtype=np.float64)
    x0 += lib.einsum("ho,ph->op", l1, t1)
    x29 = np.zeros((nocc, nocc), dtype=np.float64)
    x29 += lib.einsum("op->op", x0)
    x32 = np.zeros((nocc, nocc), dtype=np.float64)
    x32 += lib.einsum("op->op", x0) * 2
    x37 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x37 += lib.einsum("oI,pIhA->ophA", x0, v.oovv)
    x44 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x44 -= lib.einsum("opAh->ophA", x37)
    del x37
    x1 = np.zeros((nocc, nvir), dtype=np.float64)
    x1 += lib.einsum("pA,ophA->oh", t1, v.oovv)
    x8 = np.zeros((nocc, nvir), dtype=np.float64)
    x8 += lib.einsum("oh->oh", x1)
    x41 = np.zeros((nocc, nocc), dtype=np.float64)
    x41 += lib.einsum("oh,ph->op", t1, x1)
    x42 = np.zeros((nocc, nocc), dtype=np.float64)
    x42 += lib.einsum("po->op", x41)
    del x41
    x50 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x50 += lib.einsum("ho,pA->ophA", l1, x1)
    l1new = np.zeros((nvir, nocc), dtype=np.float64)
    l1new -= lib.einsum("op,ph->ho", x0, x1)
    del x0
    x2 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x2 -= lib.einsum("BhoI,pIAB->ophA", l2, t2)
    l1new -= lib.einsum("pAhB,opAB->ho", v.ovvv, x2)
    del x2
    x3 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x3 += lib.einsum("Ahop,IJAh->opIJ", l2, t2)
    x17 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x17 += lib.einsum("poJI->opIJ", x3) * -1
    x65 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x65 += lib.einsum("poJI->opIJ", x3) * -0.5
    l1new += lib.einsum("JIph,opJI->ho", v.ooov, x3) * -0.25
    del x3
    x4 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x4 += lib.einsum("IA,hAop->opIh", t1, l2)
    x5 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x5 += lib.einsum("Ih,opJh->opIJ", t1, x4)
    x17 += lib.einsum("opJI->opIJ", x5) * 2.0000000000000013
    x18 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x18 += lib.einsum("Jh,JoIp->opIh", t1, x17) * -0.5
    del x17
    x65 += lib.einsum("opJI->opIJ", x5)
    l2new = np.zeros((nvir, nvir, nocc, nocc), dtype=np.float64)
    l2new += lib.einsum("IJAh,poIJ->hAop", v.oovv, x65) * -0.5
    del x65
    l1new += lib.einsum("IpJh,oJpI->ho", v.ooov, x5) * 0.5
    del x5
    x18 += lib.einsum("IJhA,oJpA->opIh", t2, x4) * 2
    x30 = np.zeros((nocc, nvir), dtype=np.float64)
    x30 += lib.einsum("IpAh,IpoA->oh", t2, x4) * 0.5
    x58 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x58 -= lib.einsum("Ih,poIA->ophA", f.ov, x4)
    x62 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x62 += lib.einsum("ophA->ophA", x58)
    del x58
    x61 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x61 -= lib.einsum("IA,poIh->ophA", x1, x4)
    del x1
    x62 -= lib.einsum("ophA->ophA", x61)
    del x61
    l2new += lib.einsum("IBAh,poIB->hAop", v.ovvv, x4)
    x6 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x6 += lib.einsum("oA,pIhA->opIh", t1, v.oovv)
    x7 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x7 += lib.einsum("oIph->opIh", x6) * -1
    x12 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x12 += lib.einsum("Ipoh->opIh", x6) * 0.5000000000000003
    x48 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x48 -= lib.einsum("oIph->opIh", x6)
    x59 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x59 -= lib.einsum("hI,IpoA->ophA", l1, x6)
    x62 += lib.einsum("ophA->ophA", x59)
    del x59
    x63 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x63 += lib.einsum("Ipoh->opIh", x6) * 0.5
    del x6
    x7 += lib.einsum("Ipoh->opIh", v.ooov)
    x14 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x14 += lib.einsum("JIAh,pJoA->opIh", t2, x7)
    x26 = np.zeros((nocc, nvir), dtype=np.float64)
    x26 += lib.einsum("pIAh,opIA->oh", t2, x7) * 0.5
    del x7
    x8 += lib.einsum("oh->oh", f.ov)
    x14 += lib.einsum("oA,IpAh->opIh", x8, t2) * -0.5
    x24 = np.zeros((nocc, nocc), dtype=np.float64)
    x24 += lib.einsum("ph,oh->op", t1, x8)
    x25 = np.zeros((nocc, nocc), dtype=np.float64)
    x25 += lib.einsum("op->op", x24)
    del x24
    x26 += lib.einsum("pA,poAh->oh", x8, t2) * -1
    del x8
    x9 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x9 += lib.einsum("oB,phAB->ophA", t1, v.ovvv)
    x10 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x10 += lib.einsum("pohA->ophA", x9) * -0.5
    x19 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x19 -= lib.einsum("pohA->ophA", x9)
    x46 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x46 += lib.einsum("ophA->ophA", x9)
    del x9
    x10 += lib.einsum("ohpA->ophA", v.ovov)
    x14 += lib.einsum("pA,oIhA->opIh", t1, x10) * -1
    del x10
    x11 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x11 += lib.einsum("opAh,IJAh->opIJ", t2, v.oovv)
    x13 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x13 += lib.einsum("JIpo->opIJ", x11)
    x64 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x64 += lib.einsum("JIpo->opIJ", x11) * 0.25
    del x11
    x12 += lib.einsum("poIh->opIh", v.ooov) * -1
    x13 += lib.einsum("Jh,poIh->opIJ", t1, x12) * -4
    del x12
    x13 += lib.einsum("poJI->opIJ", v.oooo) * 2
    x14 += lib.einsum("Jh,JoIp->opIh", t1, x13) * -0.25
    del x13
    x14 += lib.einsum("ohIp->opIh", v.ovoo) * -0.5
    x14 += lib.einsum("IpBA,ohBA->opIh", t2, v.ovvv) * -0.25
    l1new += lib.einsum("AhpI,opIA->ho", l2, x14)
    del x14
    x15 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x15 += lib.einsum("AhoB->ohAB", v.vvov) * -1
    x15 += lib.einsum("oC,AhBC->ohAB", t1, v.vvvv)
    l1new += lib.einsum("ABpo,pABh->ho", l2, x15) * 0.5
    del x15
    x16 = np.zeros((nocc, nocc), dtype=np.float64)
    x16 -= lib.einsum("AhoI,IpAh->op", l2, t2)
    x18 += lib.einsum("Ih,op->opIh", t1, x16) * -1
    x29 += lib.einsum("op->op", x16) * 0.5
    x30 += lib.einsum("ph,po->oh", t1, x29)
    l1new += lib.einsum("Ip,poIh->ho", x29, v.ooov) * -1
    del x29
    x32 += lib.einsum("op->op", x16)
    l1new += lib.einsum("ph,op->ho", f.ov, x32) * -0.5
    del x32
    x55 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x55 += lib.einsum("oI,pIAh->ophA", x16, v.oovv)
    del x16
    x57 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x57 += lib.einsum("opAh->ophA", x55) * -0.5
    del x55
    x18 += lib.einsum("Ao,IphA->opIh", l1, t2) * -1
    l1new += lib.einsum("pIAh,opIA->ho", v.oovv, x18) * -0.5
    del x18
    x19 += lib.einsum("ohpA->ophA", v.ovov)
    l1new += lib.einsum("pIAh,IopA->ho", x19, x4)
    del x19
    x20 = np.zeros((nvir, nvir), dtype=np.float64)
    x20 += lib.einsum("oB,ohAB->hA", t1, v.ovvv)
    x21 = np.zeros((nvir, nvir), dtype=np.float64)
    x21 += lib.einsum("hA->hA", x20) * -1
    x31 = np.zeros((nvir, nvir), dtype=np.float64)
    x31 -= lib.einsum("hA->hA", x20)
    x60 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x60 -= lib.einsum("BA,hBpo->ophA", x20, l2)
    del x20
    x62 -= lib.einsum("ophA->ophA", x60)
    del x60
    l2new -= lib.einsum("opAh->hAop", x62)
    l2new += lib.einsum("ophA->hAop", x62)
    del x62
    x21 += lib.einsum("hA->hA", f.vv)
    x26 += lib.einsum("oA,hA->oh", t1, x21) * -1
    del x21
    x22 = np.zeros((nocc, nocc), dtype=np.float64)
    x22 -= lib.einsum("Ih,Ioph->op", t1, v.ooov)
    x25 += lib.einsum("op->op", x22)
    x42 += lib.einsum("op->op", x22)
    del x22
    x43 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x43 += lib.einsum("oI,hAIp->ophA", x42, l2)
    del x42
    x44 -= lib.einsum("poAh->ophA", x43)
    del x43
    x23 = np.zeros((nocc, nocc), dtype=np.float64)
    x23 += lib.einsum("IoAh,IpAh->op", t2, v.oovv)
    x25 += lib.einsum("po->op", x23) * 0.5
    x56 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x56 += lib.einsum("Ip,hAoI->ophA", x23, l2)
    del x23
    x57 += lib.einsum("opAh->ophA", x56) * -0.5
    del x56
    l2new += lib.einsum("ophA->hAop", x57) * -1
    l2new += lib.einsum("pohA->hAop", x57)
    del x57
    x25 += lib.einsum("op->op", f.oo)
    x26 += lib.einsum("ph,po->oh", t1, x25)
    l1new += lib.einsum("hp,op->ho", l1, x25) * -1
    del x25
    x26 += lib.einsum("ho->oh", f.vo) * -1
    x26 += lib.einsum("pA,phoA->oh", t1, v.ovov)
    x26 += lib.einsum("poBA,phBA->oh", t2, v.ovvv) * -0.5
    l1new += lib.einsum("pA,Ahpo->ho", x26, l2) * -1
    del x26
    x27 = np.zeros((nvir, nvir), dtype=np.float64)
    x27 -= lib.einsum("hBpo,poBA->hA", l2, t2)
    x28 = np.zeros((nvir, nvir), dtype=np.float64)
    x28 += lib.einsum("hA->hA", x27) * 0.5
    x51 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x51 += lib.einsum("hB,poAB->ophA", x27, v.oovv)
    del x27
    x54 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x54 += lib.einsum("ophA->ophA", x51) * 0.5
    del x51
    x28 += lib.einsum("ho,oA->hA", l1, t1)
    l1new += lib.einsum("AB,oABh->ho", x28, v.ovvv) * -1
    del x28
    x30 += lib.einsum("oh->oh", t1) * -1
    x30 += lib.einsum("Ap,ophA->oh", l1, t2) * -1
    l1new += lib.einsum("pA,poAh->ho", x30, v.oovv) * -1
    del x30
    x31 += lib.einsum("hA->hA", f.vv)
    l1new += lib.einsum("Ao,Ah->ho", l1, x31)
    del x31
    x33 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x33 += lib.einsum("hI,opIA->ophA", l1, v.ooov)
    x35 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x35 -= lib.einsum("pohA->ophA", x33)
    del x33
    x34 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x34 += lib.einsum("Bh,ABop->ophA", f.vv, l2)
    x35 -= lib.einsum("pohA->ophA", x34)
    del x34
    l2new += lib.einsum("opAh->hAop", x35)
    l2new -= lib.einsum("ophA->hAop", x35)
    del x35
    x36 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x36 += lib.einsum("Bo,pBhA->ophA", l1, v.ovvv)
    x44 += lib.einsum("opAh->ophA", x36)
    del x36
    x38 = np.zeros((nocc, nocc), dtype=np.float64)
    x38 += lib.einsum("oh,ph->op", f.ov, t1)
    x39 = np.zeros((nocc, nocc), dtype=np.float64)
    x39 += lib.einsum("op->op", x38)
    del x38
    x39 += lib.einsum("op->op", f.oo)
    x40 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x40 += lib.einsum("oI,hAIp->ophA", x39, l2)
    del x39
    x44 += lib.einsum("opAh->ophA", x40)
    del x40
    l2new += lib.einsum("ophA->hAop", x44)
    l2new -= lib.einsum("pohA->hAop", x44)
    del x44
    x45 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x45 -= lib.einsum("IoBh,IpAB->ophA", t2, v.oovv)
    x46 += lib.einsum("ophA->ophA", x45)
    del x45
    x46 -= lib.einsum("phoA->ophA", v.ovov)
    x47 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x47 += lib.einsum("BAIp,IoBh->ophA", l2, x46)
    del x46
    x50 += lib.einsum("poAh->ophA", x47)
    del x47
    x48 += lib.einsum("Ipoh->opIh", v.ooov)
    x49 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x49 += lib.einsum("IpJA,IJoh->ophA", x4, x48)
    del x48
    del x4
    x50 -= lib.einsum("poAh->ophA", x49)
    del x49
    x50 += lib.einsum("oh,Ap->ophA", f.ov, l1)
    l2new -= lib.einsum("opAh->hAop", x50)
    l2new += lib.einsum("ophA->hAop", x50)
    l2new += lib.einsum("poAh->hAop", x50)
    l2new -= lib.einsum("pohA->hAop", x50)
    del x50
    x52 = np.zeros((nvir, nvir), dtype=np.float64)
    x52 += lib.einsum("poBh,poBA->hA", t2, v.oovv)
    x53 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x53 -= lib.einsum("BA,hBpo->ophA", x52, l2)
    del x52
    x54 += lib.einsum("ophA->ophA", x53) * 0.5
    del x53
    l2new += lib.einsum("opAh->hAop", x54)
    l2new += lib.einsum("ophA->hAop", x54) * -1
    del x54
    x63 += lib.einsum("poIh->opIh", v.ooov) * -1
    x64 += lib.einsum("Jh,poIh->opIJ", t1, x63) * -1
    del x63
    x64 += lib.einsum("poJI->opIJ", v.oooo) * 0.5
    l2new += lib.einsum("AhIJ,poIJ->hAop", l2, x64)
    del x64
    l1new += lib.einsum("oh->ho", f.ov)
    l1new -= lib.einsum("Ap,oAph->ho", l1, v.ovov)
    l2new += lib.einsum("CBpo,CBAh->hAop", l2, v.vvvv) * 0.5
    l2new += lib.einsum("poAh->hAop", v.oovv)

    return {"l1new": l1new, "l2new": l2new}

def make_rdm1_f(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    # 1RDM
    x0 = np.zeros((nocc, nocc), dtype=np.float64)
    x0 += lib.einsum("di,jd->ij", l1, t1)
    x3 = np.zeros((nocc, nocc), dtype=np.float64)
    x3 += lib.einsum("ij->ij", x0)
    rdm1_f_oo = np.zeros((nocc, nocc), dtype=np.float64)
    rdm1_f_oo -= lib.einsum("ij->ij", x0)
    del x0
    x1 = np.zeros((nocc, nocc), dtype=np.float64)
    x1 += lib.einsum("edik,jked->ij", l2, t2)
    x3 += lib.einsum("ij->ij", x1) * 0.5
    rdm1_f_vo = np.zeros((nvir, nocc), dtype=np.float64)
    rdm1_f_vo += lib.einsum("jd,ji->di", t1, x3) * -1
    del x3
    rdm1_f_oo += lib.einsum("ij->ij", x1) * -0.5
    del x1
    x2 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x2 += lib.einsum("ke,deij->ijkd", t1, l2)
    rdm1_f_vo += lib.einsum("kjde,kjie->di", t2, x2) * 0.5
    del x2
    rdm1_f_oo += lib.einsum("ji->ij", delta_oo)
    rdm1_f_ov = np.zeros((nocc, nvir), dtype=np.float64)
    rdm1_f_ov += lib.einsum("di->id", l1)
    rdm1_f_vo += lib.einsum("id->di", t1)
    rdm1_f_vo += lib.einsum("ej,ijde->di", l1, t2)
    rdm1_f_vv = np.zeros((nvir, nvir), dtype=np.float64)
    rdm1_f_vv += lib.einsum("feji,jidf->de", l2, t2) * -0.5
    rdm1_f_vv += lib.einsum("ei,id->de", l1, t1)

    rdm1_f = np.block([[rdm1_f_oo, rdm1_f_ov], [rdm1_f_vo, rdm1_f_vv]])

    return rdm1_f

def make_rdm2_f(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    # 2RDM
    x0 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x0 += lib.einsum("feij,klfe->ijkl", l2, t2)
    x14 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x14 += lib.einsum("jilk->ijkl", x0) * -1
    x26 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x26 += lib.einsum("jilk->ijkl", x0) * -1
    x27 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x27 += lib.einsum("jilk->ijkl", x0) * -1
    rdm2_f_oooo = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    rdm2_f_oooo += lib.einsum("lkji->ijkl", x0) * 0.5
    del x0
    x1 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x1 += lib.einsum("kf,efij->ijke", t1, l2)
    x2 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x2 += lib.einsum("ke,ijle->ijkl", t1, x1)
    x14 += lib.einsum("ijlk->ijkl", x2) * 2
    x15 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x15 += lib.einsum("le,lijk->ijke", t1, x14) * 0.5
    del x14
    rdm2_f_ooov = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    rdm2_f_ooov += lib.einsum("kjie->ijke", x15) * -1
    rdm2_f_oovo = np.zeros((nocc, nocc, nvir, nocc), dtype=np.float64)
    rdm2_f_oovo += lib.einsum("kjie->ijek", x15)
    del x15
    x26 += lib.einsum("ijlk->ijkl", x2) * 2.0000000000000013
    rdm2_f_oovv = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    rdm2_f_oovv += lib.einsum("klfe,klji->ijef", t2, x26) * -0.25
    del x26
    x27 += lib.einsum("ijlk->ijkl", x2) * 1.9999999999999987
    x28 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x28 += lib.einsum("le,likj->ijke", t1, x27) * -1
    del x27
    rdm2_f_oovv += lib.einsum("ke,kijf->ijef", t1, x28) * 0.5000000000000003
    del x28
    rdm2_f_oooo -= lib.einsum("lkij->ijkl", x2)
    del x2
    x6 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x6 -= lib.einsum("klef,iljf->ijke", t2, x1)
    x7 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x7 -= lib.einsum("jike->ijke", x6)
    x16 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x16 += lib.einsum("ke,kijf->ijef", t1, x6)
    del x6
    x17 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x17 += lib.einsum("ijef->ijef", x16)
    del x16
    x8 = np.zeros((nocc, nvir), dtype=np.float64)
    x8 -= lib.einsum("kjef,kjif->ie", t2, x1)
    x10 = np.zeros((nocc, nvir), dtype=np.float64)
    x10 += lib.einsum("ie->ie", x8)
    del x8
    x29 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x29 += lib.einsum("kf,ikje->ijef", t1, x1)
    x34 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x34 -= lib.einsum("jg,jief->iefg", t1, x29)
    rdm2_f_ovvv = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    rdm2_f_ovvv -= lib.einsum("iegf->iefg", x34)
    rdm2_f_vovv = np.zeros((nvir, nocc, nvir, nvir), dtype=np.float64)
    rdm2_f_vovv += lib.einsum("iegf->eifg", x34)
    del x34
    rdm2_f_ovov = np.zeros((nocc, nvir, nocc, nvir), dtype=np.float64)
    rdm2_f_ovov += lib.einsum("jief->iejf", x29)
    rdm2_f_ovvo = np.zeros((nocc, nvir, nvir, nocc), dtype=np.float64)
    rdm2_f_ovvo -= lib.einsum("jief->iefj", x29)
    rdm2_f_voov = np.zeros((nvir, nocc, nocc, nvir), dtype=np.float64)
    rdm2_f_voov -= lib.einsum("jief->eijf", x29)
    rdm2_f_vovo = np.zeros((nvir, nocc, nvir, nocc), dtype=np.float64)
    rdm2_f_vovo += lib.einsum("jief->eifj", x29)
    del x29
    x33 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x33 += lib.einsum("kjfg,kjie->iefg", t2, x1)
    rdm2_f_ovvv += lib.einsum("iegf->iefg", x33) * -0.5
    rdm2_f_vovv += lib.einsum("iegf->eifg", x33) * 0.5
    del x33
    rdm2_f_ovoo = np.zeros((nocc, nvir, nocc, nocc), dtype=np.float64)
    rdm2_f_ovoo -= lib.einsum("kjie->iejk", x1)
    rdm2_f_vooo = np.zeros((nvir, nocc, nocc, nocc), dtype=np.float64)
    rdm2_f_vooo += lib.einsum("kjie->eijk", x1)
    del x1
    x3 = np.zeros((nocc, nocc), dtype=np.float64)
    x3 += lib.einsum("feik,jkfe->ij", l2, t2)
    x9 = np.zeros((nocc, nvir), dtype=np.float64)
    x9 += lib.einsum("je,ji->ie", t1, x3)
    x10 += lib.einsum("ie->ie", x9)
    del x9
    rdm2_f_ooov += lib.einsum("ki,je->ijke", delta_oo, x10) * -0.5
    rdm2_f_ooov += lib.einsum("jk,ie->ijke", delta_oo, x10) * 0.5
    rdm2_f_oovo += lib.einsum("ki,je->ijek", delta_oo, x10) * 0.5
    rdm2_f_oovo += lib.einsum("jk,ie->ijek", delta_oo, x10) * -0.5
    rdm2_f_oovv += lib.einsum("ie,jf->ijef", t1, x10) * -0.5000000000000003
    rdm2_f_oovv += lib.einsum("if,je->ijef", t1, x10) * 0.5000000000000003
    rdm2_f_oovv += lib.einsum("je,if->ijef", t1, x10) * 0.5000000000000003
    rdm2_f_oovv += lib.einsum("jf,ie->ijef", t1, x10) * -0.5000000000000003
    del x10
    x25 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x25 += lib.einsum("kj,ikef->ijef", x3, t2)
    rdm2_f_oovv += lib.einsum("ijfe->ijef", x25) * 0.5
    rdm2_f_oovv += lib.einsum("jife->ijef", x25) * -0.5
    del x25
    rdm2_f_oooo += lib.einsum("ik,lj->ijkl", delta_oo, x3) * -0.5
    rdm2_f_oooo += lib.einsum("il,kj->ijkl", delta_oo, x3) * 0.5
    rdm2_f_oooo += lib.einsum("kj,li->ijkl", delta_oo, x3) * 0.5
    rdm2_f_oooo += lib.einsum("lj,ki->ijkl", delta_oo, x3) * -0.5
    rdm2_f_ooov += lib.einsum("ie,kj->ijke", t1, x3) * 0.5
    rdm2_f_ooov += lib.einsum("je,ki->ijke", t1, x3) * -0.5
    rdm2_f_oovo += lib.einsum("ie,kj->ijek", t1, x3) * -0.5
    rdm2_f_oovo += lib.einsum("je,ki->ijek", t1, x3) * 0.5
    del x3
    x4 = np.zeros((nocc, nocc), dtype=np.float64)
    x4 += lib.einsum("ei,je->ij", l1, t1)
    x7 += lib.einsum("ie,jk->ijke", t1, x4)
    x12 = np.zeros((nocc, nvir), dtype=np.float64)
    x12 += lib.einsum("je,ji->ie", t1, x4)
    x13 = np.zeros((nocc, nvir), dtype=np.float64)
    x13 -= lib.einsum("ie->ie", x12)
    del x12
    x22 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x22 += lib.einsum("ki,jkef->ijef", x4, t2)
    rdm2_f_oovv -= lib.einsum("ijfe->ijef", x22)
    rdm2_f_oovv += lib.einsum("jife->ijef", x22)
    del x22
    rdm2_f_oooo -= lib.einsum("ki,lj->ijkl", delta_oo, x4)
    rdm2_f_oooo += lib.einsum("kj,li->ijkl", delta_oo, x4)
    rdm2_f_oooo += lib.einsum("li,kj->ijkl", delta_oo, x4)
    rdm2_f_oooo -= lib.einsum("lj,ki->ijkl", delta_oo, x4)
    del x4
    x5 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x5 += lib.einsum("fi,jkef->ijke", l1, t2)
    x18 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x18 += lib.einsum("ke,kijf->ijef", t1, x5)
    x21 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x21 += lib.einsum("ijef->ijef", x18)
    del x18
    rdm2_f_ooov -= lib.einsum("kjie->ijke", x5)
    rdm2_f_oovo += lib.einsum("kjie->ijek", x5)
    del x5
    x7 += lib.einsum("ji,ke->ijke", delta_oo, t1)
    rdm2_f_ooov += lib.einsum("ikje->ijke", x7)
    rdm2_f_ooov -= lib.einsum("jkie->ijke", x7)
    rdm2_f_oovo -= lib.einsum("ikje->ijek", x7)
    rdm2_f_oovo += lib.einsum("jkie->ijek", x7)
    del x7
    x11 = np.zeros((nocc, nvir), dtype=np.float64)
    x11 += lib.einsum("fj,ijef->ie", l1, t2)
    x13 += lib.einsum("ie->ie", x11)
    del x11
    x17 -= lib.einsum("ie,jf->ijef", t1, x13)
    rdm2_f_oovv -= lib.einsum("ijef->ijef", x17)
    rdm2_f_oovv += lib.einsum("ijfe->ijef", x17)
    rdm2_f_oovv += lib.einsum("jief->ijef", x17)
    rdm2_f_oovv -= lib.einsum("jife->ijef", x17)
    del x17
    rdm2_f_ooov += lib.einsum("ki,je->ijke", delta_oo, x13)
    rdm2_f_ooov -= lib.einsum("jk,ie->ijke", delta_oo, x13)
    rdm2_f_oovo -= lib.einsum("ki,je->ijek", delta_oo, x13)
    rdm2_f_oovo += lib.einsum("jk,ie->ijek", delta_oo, x13)
    del x13
    x19 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x19 -= lib.einsum("geik,jkfg->ijef", l2, t2)
    x20 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x20 += lib.einsum("ikeg,kjgf->ijef", t2, x19)
    x21 += lib.einsum("ijef->ijef", x20)
    del x20
    rdm2_f_oovv += lib.einsum("ijef->ijef", x21)
    rdm2_f_oovv -= lib.einsum("ijfe->ijef", x21)
    del x21
    x35 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x35 += lib.einsum("jf,jieg->iefg", t1, x19)
    x36 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x36 -= lib.einsum("iefg->iefg", x35)
    del x35
    rdm2_f_ovov -= lib.einsum("jief->iejf", x19)
    rdm2_f_ovvo += lib.einsum("jief->iefj", x19)
    rdm2_f_voov += lib.einsum("jief->eijf", x19)
    rdm2_f_vovo -= lib.einsum("jief->eifj", x19)
    del x19
    x23 = np.zeros((nvir, nvir), dtype=np.float64)
    x23 -= lib.einsum("geji,jifg->ef", l2, t2)
    x24 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x24 += lib.einsum("gf,ijeg->ijef", x23, t2)
    rdm2_f_oovv += lib.einsum("ijef->ijef", x24) * -0.5
    rdm2_f_oovv += lib.einsum("ijfe->ijef", x24) * 0.5
    del x24
    x31 = np.zeros((nvir, nvir), dtype=np.float64)
    x31 += lib.einsum("ef->ef", x23) * 0.5
    rdm2_f_ovvv += lib.einsum("if,eg->iefg", t1, x23) * 0.5
    rdm2_f_ovvv += lib.einsum("ig,ef->iefg", t1, x23) * -0.5
    rdm2_f_vovv += lib.einsum("if,eg->eifg", t1, x23) * -0.5
    rdm2_f_vovv += lib.einsum("ig,ef->eifg", t1, x23) * 0.5
    del x23
    x30 = np.zeros((nvir, nvir), dtype=np.float64)
    x30 += lib.einsum("ei,if->ef", l1, t1)
    x31 += lib.einsum("ef->ef", x30)
    rdm2_f_ovov += lib.einsum("ji,ef->iejf", delta_oo, x31)
    rdm2_f_ovvo += lib.einsum("ji,ef->iefj", delta_oo, x31) * -1
    rdm2_f_voov += lib.einsum("ji,ef->eijf", delta_oo, x31) * -1
    rdm2_f_vovo += lib.einsum("ji,ef->eifj", delta_oo, x31)
    del x31
    x36 += lib.einsum("if,eg->iefg", t1, x30)
    del x30
    rdm2_f_ovvv += lib.einsum("iefg->iefg", x36)
    rdm2_f_ovvv -= lib.einsum("iegf->iefg", x36)
    rdm2_f_vovv -= lib.einsum("iefg->eifg", x36)
    rdm2_f_vovv += lib.einsum("iegf->eifg", x36)
    del x36
    x32 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x32 += lib.einsum("ej,ijfg->iefg", l1, t2)
    rdm2_f_ovvv -= lib.einsum("iegf->iefg", x32)
    rdm2_f_vovv += lib.einsum("iegf->eifg", x32)
    del x32
    x37 = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    x37 += lib.einsum("jg,efij->iefg", t1, l2)
    rdm2_f_vvov = np.zeros((nvir, nvir, nocc, nvir), dtype=np.float64)
    rdm2_f_vvov -= lib.einsum("ifeg->efig", x37)
    rdm2_f_vvvo = np.zeros((nvir, nvir, nvir, nocc), dtype=np.float64)
    rdm2_f_vvvo += lib.einsum("ifeg->efgi", x37)
    rdm2_f_vvvv = np.zeros((nvir, nvir, nvir, nvir), dtype=np.float64)
    rdm2_f_vvvv += lib.einsum("ig,iefh->efgh", t1, x37)
    del x37
    rdm2_f_oooo += lib.einsum("ki,lj->ijkl", delta_oo, delta_oo)
    rdm2_f_oooo -= lib.einsum("jk,li->ijkl", delta_oo, delta_oo)
    rdm2_f_ovoo += lib.einsum("ji,ek->iejk", delta_oo, l1)
    rdm2_f_ovoo -= lib.einsum("ki,ej->iejk", delta_oo, l1)
    rdm2_f_vooo -= lib.einsum("ji,ek->eijk", delta_oo, l1)
    rdm2_f_vooo += lib.einsum("ki,ej->eijk", delta_oo, l1)
    rdm2_f_oovv += lib.einsum("jife->ijef", t2)
    rdm2_f_oovv -= lib.einsum("if,je->ijef", t1, t1)
    rdm2_f_oovv += lib.einsum("ie,jf->ijef", t1, t1)
    rdm2_f_ovov -= lib.einsum("ej,if->iejf", l1, t1)
    rdm2_f_ovvo += lib.einsum("ej,if->iefj", l1, t1)
    rdm2_f_voov += lib.einsum("ej,if->eijf", l1, t1)
    rdm2_f_vovo -= lib.einsum("ej,if->eifj", l1, t1)
    rdm2_f_vvoo = np.zeros((nvir, nvir, nocc, nocc), dtype=np.float64)
    rdm2_f_vvoo += lib.einsum("feji->efij", l2)
    rdm2_f_vvvv += lib.einsum("feji,jihg->efgh", l2, t2) * 0.5

    rdm2_f = common.pack_2e(rdm2_f_oooo, rdm2_f_ooov, rdm2_f_oovo, rdm2_f_ovoo, rdm2_f_vooo, rdm2_f_oovv, rdm2_f_ovov, rdm2_f_ovvo, rdm2_f_voov, rdm2_f_vovo, rdm2_f_vvoo, rdm2_f_ovvv, rdm2_f_vovv, rdm2_f_vvov, rdm2_f_vvvo, rdm2_f_vvvv)

    return rdm2_f

def make_ip_mom_bras(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    r2_o = np.zeros((nocc, nocc, nvir, nocc), dtype=np.float64)
    r1_o = np.zeros((nocc, nocc), dtype=np.float64)
    r1_o += lib.einsum("lk->kl", delta_oo)
    r1_v = np.zeros((nocc, nvir), dtype=np.float64)
    r1_v += lib.einsum("kc->kc", t1)
    r2_v = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    r2_v -= lib.einsum("lkdc->klcd", t2)

    r1 = np.concatenate([r1_o, r1_v], axis=1)
    r2 = np.concatenate([r2_o, r2_v], axis=3).swapaxes(1, 2)

    return r1, r2

def make_ea_mom_bras(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    r2_v = np.zeros((nocc, nvir, nvir, nvir), dtype=np.float64)
    r1_o = np.zeros((nvir, nocc), dtype=np.float64)
    r1_o -= lib.einsum("kc->ck", t1)
    r1_v = np.zeros((nvir, nvir), dtype=np.float64)
    r1_v += lib.einsum("dc->cd", delta_vv)
    r2_o = np.zeros((nocc, nvir, nvir, nocc), dtype=np.float64)
    r2_o += lib.einsum("lkdc->kcdl", t2)

    r1 = np.concatenate([r1_o, r1_v], axis=1)
    r2 = np.concatenate([r2_o, r2_v], axis=3).swapaxes(1, 2)

    return r1, r2

def make_ip_mom_kets(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    r1_o = np.zeros((nocc, nocc), dtype=np.float64)
    r1_o += lib.einsum("dclm,kmdc->kl", l2, t2) * -0.5
    r1_o -= lib.einsum("cl,kc->kl", l1, t1)
    r1_o += lib.einsum("lk->kl", delta_oo)
    r1_v = np.zeros((nvir, nocc), dtype=np.float64)
    r1_v += lib.einsum("ck->ck", l1)
    r2_o = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    r2_o -= lib.einsum("kd,cdml->klmc", t1, l2)
    r2_o += lib.einsum("lk,cm->klmc", delta_oo, l1)
    r2_o -= lib.einsum("mk,cl->klmc", delta_oo, l1)
    r2_v = np.zeros((nvir, nocc, nocc, nvir), dtype=np.float64)
    r2_v += lib.einsum("dclk->ckld", l2)

    r1 = np.concatenate([r1_o, r1_v], axis=0)
    r2 = np.concatenate([r2_o, r2_v], axis=0).swapaxes(1, 2)

    return r1, r2

def make_ea_mom_kets(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    r1_o = np.zeros((nocc, nvir), dtype=np.float64)
    r1_o -= lib.einsum("fk->kf", l1)
    r1_v = np.zeros((nvir, nvir), dtype=np.float64)
    r1_v += lib.einsum("ghlk,lkfh->fg", l2, t2) * -0.5
    r1_v -= lib.einsum("gk,kf->fg", l1, t1)
    r1_v += lib.einsum("gf->fg", delta_vv)
    r2_o = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    r2_o += lib.einsum("gflk->klfg", l2)
    r2_v = np.zeros((nvir, nocc, nvir, nvir), dtype=np.float64)
    r2_v += lib.einsum("lf,hgkl->fkgh", t1, l2)
    r2_v -= lib.einsum("gf,hk->fkgh", delta_vv, l1)
    r2_v += lib.einsum("hf,gk->fkgh", delta_vv, l1)

    r1 = np.concatenate([r1_o, r1_v], axis=0)
    r2 = np.concatenate([r2_o, r2_v], axis=0).swapaxes(1, 2)

    return r1, r2

def hbar_diag_ip(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    r1 = np.zeros((nocc), dtype=np.float64)
    r1 -= lib.einsum("ml->l", f.oo)
    r1 -= lib.einsum("ma,la->l", f.ov, t1)
    r1 -= lib.einsum("na,nmal->l", t1, v.oovo)
    r1 += lib.einsum("nlab,nmab->l", t2, v.oovv) * -0.5
    r1 -= lib.einsum("lb,na,nmab->l", t1, t1, v.oovv)

    r2 = np.zeros((nocc,  nocc,  nvir), dtype=np.float64)
    r2 += lib.einsum("Ip,Kodg,JKeg->opd", delta_oo, t2, v.oovv)
    r2 += lib.einsum("Jo,Kpdg,IKeg->opd", delta_oo, t2, v.oovv)
    r2 -= lib.einsum("Io,Kpdg,JKeg->opd", delta_oo, t2, v.oovv)
    r2 -= lib.einsum("Jp,Kodg,IKeg->opd", delta_oo, t2, v.oovv)
    r2 += lib.einsum("Io,Jp,Kg,dKeg->opd", delta_oo, delta_oo, t1, v.vovv)
    r2 += lib.einsum("Io,de,Kg,JKgp->opd", delta_oo, delta_vv, t1, v.oovo)
    r2 += lib.einsum("Ip,Kd,og,JKeg->opd", delta_oo, t1, t1, v.oovv)
    r2 += lib.einsum("Jo,Kd,pg,IKeg->opd", delta_oo, t1, t1, v.oovv)
    r2 += lib.einsum("Jp,de,Kg,IKgo->opd", delta_oo, delta_vv, t1, v.oovo)
    r2 -= lib.einsum("Io,Kd,pg,JKeg->opd", delta_oo, t1, t1, v.oovv)
    r2 -= lib.einsum("Ip,Jo,Kg,dKeg->opd", delta_oo, delta_oo, t1, v.vovv)
    r2 -= lib.einsum("Ip,de,Kg,JKgo->opd", delta_oo, delta_vv, t1, v.oovo)
    r2 -= lib.einsum("Jo,de,Kg,IKgp->opd", delta_oo, delta_vv, t1, v.oovo)
    r2 -= lib.einsum("Jp,Kd,og,IKeg->opd", delta_oo, t1, t1, v.oovv)
    r2 += lib.einsum("de,opgh,IJgh->opd", delta_vv, t2, v.oovv) * 0.5
    r2 += lib.einsum("de,og,ph,IJgh->opd", delta_vv, t1, t1, v.oovv)
    r2 += lib.einsum("Io,de,Kpgh,JKgh->opd", delta_oo, delta_vv, t2, v.oovv) * 0.5
    r2 += lib.einsum("Jp,de,Kogh,IKgh->opd", delta_oo, delta_vv, t2, v.oovv) * 0.5
    r2 += lib.einsum("Ip,de,Kogh,JKgh->opd", delta_oo, delta_vv, t2, v.oovv) * -0.5
    r2 += lib.einsum("Jo,de,Kpgh,IKgh->opd", delta_oo, delta_vv, t2, v.oovv) * -0.5
    r2 += lib.einsum("Io,de,Kg,ph,JKgh->opd", delta_oo, delta_vv, t1, t1, v.oovv)
    r2 += lib.einsum("Jp,de,Kg,oh,IKgh->opd", delta_oo, delta_vv, t1, t1, v.oovv)
    r2 -= lib.einsum("Ip,de,Kg,oh,JKgh->opd", delta_oo, delta_vv, t1, t1, v.oovv)
    r2 -= lib.einsum("Jo,de,Kg,ph,IKgh->opd", delta_oo, delta_vv, t1, t1, v.oovv)
    r2 += lib.einsum("Io,Jdep->opd", delta_oo, v.ovvo)
    r2 += lib.einsum("Jp,Ideo->opd", delta_oo, v.ovvo)
    r2 += lib.einsum("de,IJop->opd", delta_vv, v.oooo)
    r2 -= lib.einsum("Ip,Jdeo->opd", delta_oo, v.ovvo)
    r2 -= lib.einsum("Jo,Idep->opd", delta_oo, v.ovvo)
    r2 += lib.einsum("Io,Jp,de->opd", delta_oo, delta_oo, f.vv)
    r2 += lib.einsum("Ip,de,Jo->opd", delta_oo, delta_vv, f.oo)
    r2 += lib.einsum("Jo,de,Ip->opd", delta_oo, delta_vv, f.oo)
    r2 -= lib.einsum("Io,de,Jp->opd", delta_oo, delta_vv, f.oo)
    r2 -= lib.einsum("Ip,Jo,de->opd", delta_oo, delta_oo, f.vv)
    r2 -= lib.einsum("Jp,de,Io->opd", delta_oo, delta_vv, f.oo)
    r2 += lib.einsum("Ip,Jo,KLdg,KLeg->opd", delta_oo, delta_oo, t2, v.oovv) * 0.5
    r2 += lib.einsum("Io,Jp,KLdg,KLeg->opd", delta_oo, delta_oo, t2, v.oovv) * -0.5
    r2 += lib.einsum("Ip,Jo,Kd,Lg,KLeg->opd", delta_oo, delta_oo, t1, t1, v.oovv)
    r2 -= lib.einsum("Io,Jp,Kd,Lg,KLeg->opd", delta_oo, delta_oo, t1, t1, v.oovv)
    r2 -= lib.einsum("opdg,IJeg->opd", t2, v.oovv)
    r2 += lib.einsum("Io,pg,Jdeg->opd", delta_oo, t1, v.ovvv)
    r2 += lib.einsum("Jp,og,Ideg->opd", delta_oo, t1, v.ovvv)
    r2 += lib.einsum("de,og,IJgp->opd", delta_vv, t1, v.oovo)
    r2 -= lib.einsum("Ip,og,Jdeg->opd", delta_oo, t1, v.ovvv)
    r2 -= lib.einsum("Jo,pg,Ideg->opd", delta_oo, t1, v.ovvv)
    r2 -= lib.einsum("de,pg,IJgo->opd", delta_vv, t1, v.oovo)
    r2 += lib.einsum("Ip,de,Jg,og->opd", delta_oo, delta_vv, f.ov, t1)
    r2 += lib.einsum("Jo,de,Ig,pg->opd", delta_oo, delta_vv, f.ov, t1)
    r2 -= lib.einsum("Io,de,Jg,pg->opd", delta_oo, delta_vv, f.ov, t1)
    r2 -= lib.einsum("Jp,de,Ig,og->opd", delta_oo, delta_vv, f.ov, t1)
    r2 += lib.einsum("Ip,Kd,JKeo->opd", delta_oo, t1, v.oovo)
    r2 += lib.einsum("Jo,Kd,IKep->opd", delta_oo, t1, v.oovo)
    r2 -= lib.einsum("Io,Kd,JKep->opd", delta_oo, t1, v.oovo)
    r2 -= lib.einsum("Jp,Kd,IKeo->opd", delta_oo, t1, v.oovo)
    r2 += lib.einsum("Ip,Jo,Ke,Kd->opd", delta_oo, delta_oo, f.ov, t1)
    r2 -= lib.einsum("Io,Jp,Ke,Kd->opd", delta_oo, delta_oo, f.ov, t1)

    return r1, r2

def hbar_diag_ea(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, **kwargs):
    delta_oo = np.eye(nocc)
    delta_vv = np.eye(nvir)

    r1 = np.zeros((nvir), dtype=np.float64)
    r1 += lib.einsum("ijdg,ijeg->d", t2, v.oovv) * -0.5
    r1 -= lib.einsum("id,jg,ijeg->d", t1, t1, v.oovv)
    r1 += lib.einsum("de->d", f.vv)
    r1 += lib.einsum("ig,dieg->d", t1, v.vovv)
    r1 -= lib.einsum("ie,id->d", f.ov, t1)

    r2 = np.zeros((nocc,  nvir,  nvir), dtype=np.float64)
    r2 += lib.einsum("lm,noAh,noBC->lhA", delta_oo, t2, v.oovv) * 0.5
    r2 += lib.einsum("lm,nA,oh,noBC->lhA", delta_oo, t1, t1, v.oovv)
    r2 += lib.einsum("AB,nlhD,nmCD->lhA", delta_vv, t2, v.oovv)
    r2 += lib.einsum("Ch,nlAD,nmBD->lhA", delta_vv, t2, v.oovv)
    r2 -= lib.einsum("AC,nlhD,nmBD->lhA", delta_vv, t2, v.oovv)
    r2 -= lib.einsum("Bh,nlAD,nmCD->lhA", delta_vv, t2, v.oovv)
    r2 += lib.einsum("AB,lm,nD,hnCD->lhA", delta_vv, delta_oo, t1, v.vovv)
    r2 += lib.einsum("AB,lD,nh,nmCD->lhA", delta_vv, t1, t1, v.oovv)
    r2 += lib.einsum("AC,Bh,nD,nmDl->lhA", delta_vv, delta_vv, t1, v.oovo)
    r2 += lib.einsum("Ch,lm,nD,AnBD->lhA", delta_vv, delta_oo, t1, v.vovv)
    r2 += lib.einsum("Ch,lD,nA,nmBD->lhA", delta_vv, t1, t1, v.oovv)
    r2 -= lib.einsum("AB,Ch,nD,nmDl->lhA", delta_vv, delta_vv, t1, v.oovo)
    r2 -= lib.einsum("AC,lm,nD,hnBD->lhA", delta_vv, delta_oo, t1, v.vovv)
    r2 -= lib.einsum("AC,lD,nh,nmBD->lhA", delta_vv, t1, t1, v.oovv)
    r2 -= lib.einsum("Bh,lm,nD,AnCD->lhA", delta_vv, delta_oo, t1, v.vovv)
    r2 -= lib.einsum("Bh,lD,nA,nmCD->lhA", delta_vv, t1, t1, v.oovv)
    r2 += lib.einsum("AC,lm,nohD,noBD->lhA", delta_vv, delta_oo, t2, v.oovv) * 0.5
    r2 += lib.einsum("Bh,lm,noAD,noCD->lhA", delta_vv, delta_oo, t2, v.oovv) * 0.5
    r2 += lib.einsum("AB,lm,nohD,noCD->lhA", delta_vv, delta_oo, t2, v.oovv) * -0.5
    r2 += lib.einsum("Ch,lm,noAD,noBD->lhA", delta_vv, delta_oo, t2, v.oovv) * -0.5
    r2 += lib.einsum("AC,lm,nh,oD,noBD->lhA", delta_vv, delta_oo, t1, t1, v.oovv)
    r2 += lib.einsum("Bh,lm,nA,oD,noCD->lhA", delta_vv, delta_oo, t1, t1, v.oovv)
    r2 -= lib.einsum("AB,lm,nh,oD,noCD->lhA", delta_vv, delta_oo, t1, t1, v.oovv)
    r2 -= lib.einsum("Ch,lm,nA,oD,noBD->lhA", delta_vv, delta_oo, t1, t1, v.oovv)
    r2 += lib.einsum("AC,hmBl->lhA", delta_vv, v.vovo)
    r2 += lib.einsum("Bh,AmCl->lhA", delta_vv, v.vovo)
    r2 += lib.einsum("lm,AhBC->lhA", delta_oo, v.vvvv)
    r2 -= lib.einsum("AB,hmCl->lhA", delta_vv, v.vovo)
    r2 -= lib.einsum("Ch,AmBl->lhA", delta_vv, v.vovo)
    r2 += lib.einsum("AB,lm,hC->lhA", delta_vv, delta_oo, f.vv)
    r2 += lib.einsum("AC,Bh,ml->lhA", delta_vv, delta_vv, f.oo)
    r2 += lib.einsum("Ch,lm,AB->lhA", delta_vv, delta_oo, f.vv)
    r2 -= lib.einsum("AB,Ch,ml->lhA", delta_vv, delta_vv, f.oo)
    r2 -= lib.einsum("AC,lm,hB->lhA", delta_vv, delta_oo, f.vv)
    r2 -= lib.einsum("Bh,lm,AC->lhA", delta_vv, delta_oo, f.vv)
    r2 += lib.einsum("AC,Bh,nlDE,nmDE->lhA", delta_vv, delta_vv, t2, v.oovv) * 0.5
    r2 += lib.einsum("AB,Ch,nlDE,nmDE->lhA", delta_vv, delta_vv, t2, v.oovv) * -0.5
    r2 += lib.einsum("AC,Bh,lE,nD,nmDE->lhA", delta_vv, delta_vv, t1, t1, v.oovv)
    r2 -= lib.einsum("AB,Ch,lE,nD,nmDE->lhA", delta_vv, delta_vv, t1, t1, v.oovv)
    r2 += lib.einsum("AC,lD,hmBD->lhA", delta_vv, t1, v.vovv)
    r2 += lib.einsum("Bh,lD,AmCD->lhA", delta_vv, t1, v.vovv)
    r2 -= lib.einsum("AB,lD,hmCD->lhA", delta_vv, t1, v.vovv)
    r2 -= lib.einsum("Ch,lD,AmBD->lhA", delta_vv, t1, v.vovv)
    r2 += lib.einsum("AC,Bh,mD,lD->lhA", delta_vv, delta_vv, f.ov, t1)
    r2 -= lib.einsum("AB,Ch,mD,lD->lhA", delta_vv, delta_vv, f.ov, t1)
    r2 -= lib.einsum("nlAh,nmBC->lhA", t2, v.oovv)
    r2 += lib.einsum("AB,nh,nmCl->lhA", delta_vv, t1, v.oovo)
    r2 += lib.einsum("Ch,nA,nmBl->lhA", delta_vv, t1, v.oovo)
    r2 += lib.einsum("lm,nA,hnBC->lhA", delta_oo, t1, v.vovv)
    r2 -= lib.einsum("AC,nh,nmBl->lhA", delta_vv, t1, v.oovo)
    r2 -= lib.einsum("Bh,nA,nmCl->lhA", delta_vv, t1, v.oovo)
    r2 -= lib.einsum("lm,nh,AnBC->lhA", delta_oo, t1, v.vovv)
    r2 += lib.einsum("AC,lm,nB,nh->lhA", delta_vv, delta_oo, f.ov, t1)
    r2 += lib.einsum("Bh,lm,nC,nA->lhA", delta_vv, delta_oo, f.ov, t1)
    r2 -= lib.einsum("AB,lm,nC,nh->lhA", delta_vv, delta_oo, f.ov, t1)
    r2 -= lib.einsum("Ch,lm,nB,nA->lhA", delta_vv, delta_oo, f.ov, t1)

    r2 = r2.transpose(1, 2, 0)

    return r1, r2

def hbar_matvec_ip(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, r1=None, r2=None, **kwargs):
    x0 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x0 += lib.einsum("l,klbc->kbc", r1, v.oovv)
    x53 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x53 += lib.einsum("kc,lbc->klb", t1, x0)
    x54 = np.zeros((nocc, nocc, nocc), dtype=np.float64)
    x54 += lib.einsum("lb,mkb->klm", t1, x53)
    del x53
    r1new = np.zeros((nocc), dtype=np.float64)
    r1new += lib.einsum("lcb,klcb->k", x0, t2) * 0.5
    del x0
    x1 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x1 += lib.einsum("l,kb->klb", r1, t1) * 2
    x1 += lib.einsum("klb->klb", r2) * -1
    x5 = np.zeros((nvir), dtype=np.float64)
    x5 += lib.einsum("klc,klcb->b", x1, v.oovv) * 0.5
    x6 = np.zeros((nvir), dtype=np.float64)
    x6 += lib.einsum("b->b", x5)
    del x5
    r1new += lib.einsum("lmb,lmkb->k", x1, v.ooov) * 0.5
    del x1
    x2 = np.zeros((nocc, nvir), dtype=np.float64)
    x2 += lib.einsum("lc,klbc->kb", t1, v.oovv)
    x3 = np.zeros((nocc, nvir), dtype=np.float64)
    x3 += lib.einsum("kb->kb", x2)
    del x2
    x3 += lib.einsum("kb->kb", f.ov)
    x19 = np.zeros((nocc, nocc), dtype=np.float64)
    x19 += lib.einsum("kb,lb->kl", t1, x3)
    x20 = np.zeros((nocc, nocc), dtype=np.float64)
    x20 += lib.einsum("lk->kl", x19)
    del x19
    x28 = np.zeros((nocc, nvir), dtype=np.float64)
    x28 += lib.einsum("lc,lkcb->kb", x3, t2)
    x33 = np.zeros((nocc, nvir), dtype=np.float64)
    x33 -= lib.einsum("kb->kb", x28)
    del x28
    r1new -= lib.einsum("lb,lkb->k", x3, r2)
    del x3
    x4 = np.zeros((nvir), dtype=np.float64)
    x4 += lib.einsum("k,kb->b", r1, f.ov)
    x6 += lib.einsum("b->b", x4)
    del x4
    r1new += lib.einsum("b,kb->k", x6, t1) * -1
    r2new = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    r2new += lib.einsum("c,lkcb->klb", x6, t2)
    del x6
    x7 = np.zeros((nvir, nvir, nvir), dtype=np.float64)
    x7 += lib.einsum("k,kbcd->bcd", r1, v.ovvv)
    x8 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x8 += lib.einsum("kd,bcd->kbc", t1, x7)
    r2new -= lib.einsum("kc,lbc->klb", t1, x8)
    del x8
    x49 = np.zeros((nvir, nvir, nvir), dtype=np.float64)
    x49 += lib.einsum("bdc->bcd", x7)
    del x7
    x9 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x9 += lib.einsum("mk,mlb->klb", f.oo, r2)
    x36 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x36 += lib.einsum("klb->klb", x9)
    del x9
    x10 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x10 += lib.einsum("m,kmlb->klb", r1, v.ooov)
    x11 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x11 -= lib.einsum("mlc,kmbc->klb", x10, t2)
    del x10
    x36 -= lib.einsum("klb->klb", x11)
    del x11
    x12 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x12 -= lib.einsum("lkd,lbdc->kbc", r2, v.ovvv)
    x13 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x13 -= lib.einsum("lc,kbc->klb", t1, x12)
    del x12
    x36 += lib.einsum("klb->klb", x13)
    del x13
    x14 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x14 += lib.einsum("klb->klb", r2)
    x14 += lib.einsum("k,lb->klb", r1, t1)
    x15 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x15 += lib.einsum("mkc,mlcb->klb", x14, v.oovv)
    x16 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x16 += lib.einsum("kmc,mlcb->klb", x15, t2)
    del x15
    x36 += lib.einsum("klb->klb", x16)
    del x16
    x17 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x17 += lib.einsum("mkc,mblc->klb", x14, v.ovov)
    x36 -= lib.einsum("klb->klb", x17)
    del x17
    x24 = np.zeros((nocc, nocc, nocc), dtype=np.float64)
    x24 += lib.einsum("nkb,nlmb->klm", x14, v.ooov)
    del x14
    x25 = np.zeros((nocc, nocc, nocc), dtype=np.float64)
    x25 -= lib.einsum("klm->klm", x24)
    del x24
    x18 = np.zeros((nocc, nocc), dtype=np.float64)
    x18 -= lib.einsum("mb,mklb->kl", t1, v.ooov)
    x20 += lib.einsum("kl->kl", x18)
    del x18
    x21 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x21 += lib.einsum("mk,mlb->klb", x20, r2)
    x36 -= lib.einsum("lkb->klb", x21)
    del x21
    x32 = np.zeros((nocc, nvir), dtype=np.float64)
    x32 += lib.einsum("lb,lk->kb", t1, x20)
    del x20
    x33 += lib.einsum("kb->kb", x32)
    del x32
    x22 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x22 += lib.einsum("mkc,mlcb->klb", r2, v.oovv)
    x23 = np.zeros((nocc, nocc, nocc), dtype=np.float64)
    x23 -= lib.einsum("lb,kmb->klm", t1, x22)
    del x22
    x25 -= lib.einsum("kml->klm", x23)
    del x23
    x26 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x26 += lib.einsum("mb,kml->klb", t1, x25)
    del x25
    x36 -= lib.einsum("klb->klb", x26)
    del x26
    x27 = np.zeros((nocc, nvir), dtype=np.float64)
    x27 += lib.einsum("lc,lbkc->kb", t1, v.ovov)
    x33 += lib.einsum("kb->kb", x27)
    del x27
    x29 = np.zeros((nvir, nvir), dtype=np.float64)
    x29 -= lib.einsum("kd,kbdc->bc", t1, v.ovvv)
    x30 = np.zeros((nvir, nvir), dtype=np.float64)
    x30 -= lib.einsum("bc->bc", x29)
    x52 = np.zeros((nvir, nvir), dtype=np.float64)
    x52 += lib.einsum("bc->bc", x29)
    del x29
    x30 += lib.einsum("bc->bc", f.vv)
    x31 = np.zeros((nocc, nvir), dtype=np.float64)
    x31 += lib.einsum("kc,bc->kb", t1, x30)
    del x30
    x33 -= lib.einsum("kb->kb", x31)
    del x31
    x36 += lib.einsum("k,lb->klb", r1, x33)
    del x33
    x34 = np.zeros((nocc, nvir), dtype=np.float64)
    x34 += lib.einsum("lk,lb->kb", f.oo, t1)
    x35 = np.zeros((nocc, nvir), dtype=np.float64)
    x35 -= lib.einsum("kb->kb", x34)
    del x34
    x35 += lib.einsum("bk->kb", f.vo)
    x36 += lib.einsum("l,kb->klb", r1, x35)
    del x35
    r2new -= lib.einsum("klb->klb", x36)
    r2new += lib.einsum("lkb->klb", x36)
    del x36
    x37 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x37 += lib.einsum("kb,lmnb->klmn", t1, v.ooov)
    x38 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x38 -= lib.einsum("mnb,knml->klb", r2, x37)
    del x37
    x47 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x47 += lib.einsum("klb->klb", x38) * 0.5
    del x38
    x39 = np.zeros((nocc, nocc), dtype=np.float64)
    x39 -= lib.einsum("kmcb,mlcb->kl", t2, v.oovv)
    x40 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x40 += lib.einsum("lm,mkb->klb", x39, r2)
    x47 += lib.einsum("klb->klb", x40) * -0.5
    del x40
    x42 = np.zeros((nocc, nvir), dtype=np.float64)
    x42 += lib.einsum("lb,kl->kb", t1, x39)
    del x39
    x46 = np.zeros((nocc, nvir), dtype=np.float64)
    x46 += lib.einsum("kb->kb", x42)
    del x42
    x41 = np.zeros((nocc, nvir), dtype=np.float64)
    x41 += lib.einsum("kldc,lbdc->kb", t2, v.ovvv)
    x46 += lib.einsum("kb->kb", x41)
    del x41
    x43 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x43 += lib.einsum("kc,lmbc->klmb", t1, v.oovv)
    x44 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x44 += lib.einsum("kmlb->klmb", x43) * -1
    x50 = np.zeros((nocc, nocc, nocc, nocc), dtype=np.float64)
    x50 += lib.einsum("mb,nlkb->klmn", t1, x43) * -1
    del x43
    x44 += lib.einsum("mlkb->klmb", v.ooov)
    x45 = np.zeros((nocc, nvir), dtype=np.float64)
    x45 += lib.einsum("lmcb,klmc->kb", t2, x44)
    del x44
    x46 += lib.einsum("kb->kb", x45)
    del x45
    x47 += lib.einsum("k,lb->klb", r1, x46) * 0.5
    del x46
    r2new += lib.einsum("klb->klb", x47) * -1
    r2new += lib.einsum("lkb->klb", x47)
    del x47
    x48 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x48 += lib.einsum("klb->klb", r2)
    x48 += lib.einsum("k,lb->klb", r1, t1) * 2
    x49 += lib.einsum("klb,lkdc->bcd", x48, v.oovv) * 0.5
    del x48
    r2new += lib.einsum("bcd,lkcd->klb", x49, t2) * -0.5
    del x49
    x50 += lib.einsum("lknm->klmn", v.oooo)
    r2new += lib.einsum("nmb,mnlk->klb", r2, x50) * 0.5
    del x50
    x51 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x51 += lib.einsum("lkcb->klbc", t2)
    x51 += lib.einsum("kb,lc->klbc", t1, t1) * 2
    x52 += lib.einsum("kldc,kldb->bc", v.oovv, x51) * 0.5
    del x51
    x52 += lib.einsum("bc->bc", f.vv) * -1
    x52 += lib.einsum("kc,kb->bc", f.ov, t1)
    r2new += lib.einsum("bc,lkc->klb", x52, r2)
    del x52
    x54 -= lib.einsum("n,knml->klm", r1, v.oooo)
    r2new += lib.einsum("mb,mlk->klb", t1, x54)
    del x54
    r1new -= lib.einsum("l,lk->k", r1, f.oo)
    r2new += lib.einsum("m,mblk->klb", r1, v.ovoo)

    return r1new, r2new

def hbar_matvec_ea(f=None, v=None, nocc=None, nvir=None, t1=None, t2=None, l1=None, l2=None, r1=None, r2=None, **kwargs):
    x0 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x0 += lib.einsum("d,jkcd->jkc", r1, v.oovv)
    r1new = np.zeros((nvir), dtype=np.float64)
    r1new += lib.einsum("kjd,kjcd->c", x0, t2) * 0.5
    del x0
    x1 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x1 += lib.einsum("cdj->jcd", r2)
    x1 += lib.einsum("d,jc->jcd", r1, t1) * 2
    x5 = np.zeros((nocc), dtype=np.float64)
    x5 += lib.einsum("kcd,kjcd->j", x1, v.oovv) * 0.5
    x6 = np.zeros((nocc), dtype=np.float64)
    x6 += lib.einsum("j->j", x5)
    del x5
    r1new += lib.einsum("jde,jcde->c", x1, v.ovvv) * 0.5
    del x1
    x2 = np.zeros((nocc, nvir), dtype=np.float64)
    x2 += lib.einsum("kd,jkcd->jc", t1, v.oovv)
    x3 = np.zeros((nocc, nvir), dtype=np.float64)
    x3 += lib.einsum("jc->jc", x2)
    del x2
    x3 += lib.einsum("jc->jc", f.ov)
    x20 = np.zeros((nvir, nvir), dtype=np.float64)
    x20 += lib.einsum("jc,jd->cd", t1, x3)
    x21 = np.zeros((nvir, nvir), dtype=np.float64)
    x21 += lib.einsum("cd->cd", x20)
    del x20
    x28 = np.zeros((nocc, nvir), dtype=np.float64)
    x28 += lib.einsum("kd,kjdc->jc", x3, t2)
    x33 = np.zeros((nocc, nvir), dtype=np.float64)
    x33 -= lib.einsum("jc->jc", x28)
    del x28
    x30 = np.zeros((nocc, nocc), dtype=np.float64)
    x30 += lib.einsum("jc,kc->jk", t1, x3)
    x31 = np.zeros((nocc, nocc), dtype=np.float64)
    x31 += lib.einsum("kj->jk", x30)
    del x30
    r1new += lib.einsum("jd,dcj->c", x3, r2)
    del x3
    x4 = np.zeros((nocc), dtype=np.float64)
    x4 += lib.einsum("c,jc->j", r1, f.ov)
    x6 += lib.einsum("j->j", x4)
    del x4
    r1new += lib.einsum("j,jc->c", x6, t1) * -1
    r2new = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    r2new += lib.einsum("k,kjdc->jcd", x6, t2)
    del x6
    x7 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x7 += lib.einsum("ce,edj->jcd", f.vv, r2)
    x36 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x36 += lib.einsum("jcd->jcd", x7)
    del x7
    x8 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x8 += lib.einsum("d,jckd->jkc", r1, v.ovov)
    x9 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x9 += lib.einsum("kc,kjd->jcd", t1, x8)
    del x8
    x36 -= lib.einsum("jcd->jcd", x9)
    del x9
    x10 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x10 += lib.einsum("je,kcde->jkcd", t1, v.ovvv)
    x14 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x14 += lib.einsum("jkcd->jkcd", x10)
    del x10
    x11 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x11 += lib.einsum("jd,klcd->jklc", t1, v.oovv)
    x12 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x12 -= lib.einsum("jlkc->jklc", x11)
    x44 = np.zeros((nocc, nocc, nocc, nvir), dtype=np.float64)
    x44 += lib.einsum("jlkc->jklc", x11) * -1
    del x11
    x12 += lib.einsum("lkjc->jklc", v.ooov)
    x13 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x13 += lib.einsum("ld,jlkc->jkcd", t1, x12)
    del x12
    x14 += lib.einsum("jkdc->jkcd", x13)
    del x13
    x14 -= lib.einsum("kcjd->jkcd", v.ovov)
    x15 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x15 += lib.einsum("edk,jkce->jcd", r2, x14)
    del x14
    x36 -= lib.einsum("jdc->jcd", x15)
    del x15
    x16 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x16 += lib.einsum("cdj->jcd", r2)
    x16 -= lib.einsum("c,jd->jcd", r1, t1)
    x17 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x17 += lib.einsum("kec,kjed->jcd", x16, v.oovv)
    del x16
    x18 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x18 += lib.einsum("kce,kjed->jcd", x17, t2)
    del x17
    x36 -= lib.einsum("jcd->jcd", x18)
    del x18
    x19 = np.zeros((nvir, nvir), dtype=np.float64)
    x19 -= lib.einsum("je,jced->cd", t1, v.ovvv)
    x21 += lib.einsum("cd->cd", x19)
    x22 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x22 += lib.einsum("ce,edj->jcd", x21, r2)
    del x21
    x36 += lib.einsum("jdc->jcd", x22)
    del x22
    x27 = np.zeros((nocc, nvir), dtype=np.float64)
    x27 += lib.einsum("jd,cd->jc", t1, x19)
    del x19
    x33 += lib.einsum("jc->jc", x27)
    del x27
    x23 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x23 += lib.einsum("e,jcde->jcd", r1, v.ovvv)
    x24 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x24 += lib.einsum("kjdc->jkcd", t2)
    x24 -= lib.einsum("jd,kc->jkcd", t1, t1)
    x25 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x25 += lib.einsum("kde,kjec->jcd", x23, x24)
    del x24
    del x23
    x36 += lib.einsum("jcd->jcd", x25)
    del x25
    x26 = np.zeros((nocc, nvir), dtype=np.float64)
    x26 += lib.einsum("kd,kcjd->jc", t1, v.ovov)
    x33 += lib.einsum("jc->jc", x26)
    del x26
    x29 = np.zeros((nocc, nocc), dtype=np.float64)
    x29 -= lib.einsum("lc,ljkc->jk", t1, v.ooov)
    x31 += lib.einsum("jk->jk", x29)
    x51 = np.zeros((nocc, nocc), dtype=np.float64)
    x51 += lib.einsum("jk->jk", x29) * 2
    del x29
    x31 += lib.einsum("jk->jk", f.oo)
    x32 = np.zeros((nocc, nvir), dtype=np.float64)
    x32 += lib.einsum("kc,kj->jc", t1, x31)
    del x31
    x33 += lib.einsum("jc->jc", x32)
    del x32
    x36 += lib.einsum("c,jd->jcd", r1, x33)
    del x33
    x34 = np.zeros((nocc, nvir), dtype=np.float64)
    x34 += lib.einsum("cd,jd->jc", f.vv, t1)
    x35 = np.zeros((nocc, nvir), dtype=np.float64)
    x35 += lib.einsum("jc->jc", x34)
    del x34
    x35 += lib.einsum("cj->jc", f.vo)
    x36 += lib.einsum("d,jc->jcd", r1, x35)
    del x35
    r2new -= lib.einsum("jcd->jcd", x36)
    r2new += lib.einsum("jdc->jcd", x36)
    del x36
    x37 = np.zeros((nocc, nocc, nvir), dtype=np.float64)
    x37 -= lib.einsum("dej,kced->jkc", r2, v.ovvv)
    x38 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x38 += lib.einsum("kc,jkd->jcd", t1, x37)
    del x37
    x47 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x47 += lib.einsum("jcd->jcd", x38) * -0.5
    del x38
    x39 = np.zeros((nvir, nvir), dtype=np.float64)
    x39 -= lib.einsum("kjce,kjed->cd", t2, v.oovv)
    x40 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x40 += lib.einsum("de,ecj->jcd", x39, r2)
    del x39
    x47 += lib.einsum("jcd->jcd", x40) * 0.5
    del x40
    x41 = np.zeros((nocc, nvir), dtype=np.float64)
    x41 += lib.einsum("jked,kced->jc", t2, v.ovvv)
    x46 = np.zeros((nocc, nvir), dtype=np.float64)
    x46 += lib.einsum("jc->jc", x41)
    del x41
    x42 = np.zeros((nocc, nocc), dtype=np.float64)
    x42 -= lib.einsum("jldc,lkdc->jk", t2, v.oovv)
    x43 = np.zeros((nocc, nvir), dtype=np.float64)
    x43 += lib.einsum("kc,jk->jc", t1, x42)
    del x42
    x46 += lib.einsum("jc->jc", x43)
    del x43
    x44 += lib.einsum("lkjc->jklc", v.ooov)
    x45 = np.zeros((nocc, nvir), dtype=np.float64)
    x45 += lib.einsum("kldc,jkld->jc", t2, x44)
    del x44
    x46 += lib.einsum("jc->jc", x45)
    del x45
    x47 += lib.einsum("c,jd->jcd", r1, x46) * 0.5
    del x46
    r2new += lib.einsum("jcd->jcd", x47) * -1
    r2new += lib.einsum("jdc->jcd", x47)
    del x47
    x48 = np.zeros((nocc, nvir, nvir), dtype=np.float64)
    x48 += lib.einsum("c,jd->jcd", r1, t1) * 2
    x48 += lib.einsum("cdj->jcd", r2) * -1
    x49 = np.zeros((nocc, nocc, nocc), dtype=np.float64)
    x49 += lib.einsum("lcd,kjdc->jkl", x48, v.oovv) * -1
    r2new += lib.einsum("jge,dceg->jcd", x48, v.vvvv) * 0.5
    del x48
    x49 += lib.einsum("c,kjlc->jkl", r1, v.ooov) * -2
    x50 = np.zeros((nocc, nocc, nvir, nvir), dtype=np.float64)
    x50 += lib.einsum("kjdc->jkcd", t2)
    x50 += lib.einsum("jc,kd->jkcd", t1, t1) * 2
    x51 += lib.einsum("ljcd,lkcd->jk", v.oovv, x50)
    r2new += lib.einsum("klj,kldc->jcd", x49, x50) * 0.25
    del x49
    del x50
    x51 += lib.einsum("jk->jk", f.oo) * 2
    x51 += lib.einsum("jc,kc->jk", f.ov, t1) * 2
    r2new += lib.einsum("kj,cdk->jcd", x51, r2) * 0.5
    del x51
    r1new += lib.einsum("d,cd->c", r1, f.vv)
    r2new += lib.einsum("e,dcje->jcd", r1, v.vvov)

    r2new = r2new.transpose(1, 2, 0)

    return r1new, r2new

