"""
Code generated by `albert`:
https://github.com/obackhouse/albert

  * date: 2024-09-29T16:30:05.630627
  * python version: 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
  * albert version: 0.0.0
  * caller: /opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/albert/codegen/einsum.py
  * node: fv-az1788-690
  * system: Linux
  * processor: x86_64
  * release: 6.8.0-1014-azure
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T16:30:06.188962.

    Parameters
    ----------
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    e_cc : float
        Coupled cluster energy.
    """

    tmp0 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * 2
    tmp0 += t2 * -1
    tmp1 = einsum(v.xov, (0, 1, 2), tmp0, (1, 3, 4, 2), (3, 4, 0)) * 0.5
    del tmp0
    e_cc = einsum(v.xov, (0, 1, 2), tmp1, (1, 2, 0), ()) * 2
    del tmp1

    return e_cc

def update_amps(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-09-29T16:30:15.200019.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    t1new : array
        Updated T1 residuals.
    t2new : array
        Updated T2 residuals.
    """

    tmp14 = einsum(t2, (0, 1, 2, 3), v.xov, (4, 1, 2), (0, 3, 4))
    tmp19 = np.copy(np.transpose(v.xov, (1, 2, 0)))
    tmp19 += tmp14 * -1
    tmp13 = einsum(v.xov, (0, 1, 2), v.xov, (0, 3, 4), (1, 3, 2, 4))
    tmp5 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * 2
    tmp5 += t2 * -1
    tmp6 = einsum(v.xoo, (0, 1, 2), t1, (2, 3), (1, 3, 0))
    tmp20 = einsum(tmp19, (0, 1, 2), v.xov, (2, 3, 4), (0, 3, 1, 4))
    del tmp19
    tmp18 = einsum(v.xoo, (0, 1, 2), v.xvv, (0, 3, 4), (1, 2, 3, 4))
    tmp15 = einsum(t2, (0, 1, 2, 3), tmp13, (1, 4, 5, 2), (0, 4, 3, 5))
    tmp26 = einsum(v.xov, (0, 1, 2), tmp5, (1, 3, 4, 2), (3, 4, 0))
    tmp23 = np.copy(tmp6)
    tmp23 += tmp14
    tmp21 = np.copy(np.transpose(tmp18, (1, 0, 3, 2)))
    tmp21 += tmp15 * -1
    tmp21 += tmp20 * -2
    del tmp20
    tmp33 = einsum(t1, (0, 1), v.xvv, (2, 3, 1), (0, 3, 2))
    tmp27 = einsum(tmp26, (0, 1, 2), v.xov, (2, 0, 3), (1, 3)) * 0.5
    tmp29 = einsum(tmp26, (0, 1, 2), v.xov, (2, 3, 1), (0, 3))
    del tmp26
    tmp0 = einsum(v.xov, (0, 1, 2), t1, (1, 2), (0,))
    tmp2 = einsum(v.xov, (0, 1, 2), t1, (3, 2), (3, 1, 0))
    tmp38 = np.copy(np.transpose(tmp13, (1, 0, 2, 3))) * -1
    tmp38 += np.transpose(tmp13, (1, 0, 3, 2)) * 2
    tmp24 = einsum(v.xov, (0, 1, 2), tmp23, (3, 4, 0), (3, 1, 4, 2))
    del tmp23
    tmp22 = einsum(t2, (0, 1, 2, 3), tmp21, (4, 1, 5, 3), (4, 0, 5, 2))
    del tmp21
    tmp34 = einsum(tmp33, (0, 1, 2), v.xov, (2, 3, 4), (0, 3, 4, 1))
    del tmp33
    tmp35 = einsum(tmp18, (0, 1, 2, 3), t2, (4, 1, 3, 5), (4, 0, 5, 2))
    del tmp18
    tmp32 = einsum(t2, (0, 1, 2, 3), f.vv, (4, 3), (0, 1, 4, 2))
    tmp28 = einsum(tmp27, (0, 1), t2, (2, 3, 1, 4), (2, 3, 0, 4)) * 2
    del tmp27
    tmp30 = einsum(tmp29, (0, 1), t2, (2, 1, 3, 4), (0, 2, 4, 3))
    del tmp29
    tmp1 = einsum(tmp0, (0,), v.xov, (0, 1, 2), (1, 2))
    del tmp0
    tmp11 = einsum(v.xov, (0, 1, 2), tmp5, (1, 3, 4, 2), (3, 4, 0)) * 0.5
    tmp7 = np.copy(np.transpose(t2, (0, 1, 3, 2)))
    tmp7 += t2 * -0.5
    tmp3 = np.copy(np.transpose(v.xoo, (1, 2, 0)))
    tmp3 += np.transpose(tmp2, (1, 0, 2))
    tmp16 = einsum(v.xvv, (0, 1, 2), v.xvv, (0, 3, 4), (3, 1, 2, 4))
    tmp39 = einsum(tmp38, (0, 1, 2, 3), t2, (4, 0, 5, 2), (4, 1, 5, 3))
    del tmp38
    tmp25 = np.copy(np.transpose(tmp22, (1, 0, 3, 2)))
    del tmp22
    tmp25 += tmp24
    del tmp24
    tmp36 = np.copy(tmp32)
    del tmp32
    tmp36 += tmp34
    del tmp34
    tmp36 += tmp35 * -1
    del tmp35
    tmp37 = einsum(v.xoo, (0, 1, 2), v.xoo, (0, 3, 4), (3, 1, 2, 4))
    tmp37 += einsum(t2, (0, 1, 2, 3), tmp13, (4, 5, 3, 2), (4, 0, 5, 1))
    tmp17 = einsum(f.oo, (0, 1), t2, (2, 1, 3, 4), (0, 2, 3, 4))
    tmp31 = np.copy(np.transpose(tmp28, (1, 0, 3, 2)))
    del tmp28
    tmp31 += np.transpose(tmp30, (1, 0, 3, 2))
    del tmp30
    tmp9 = np.copy(f.ov)
    tmp9 += tmp1 * 2
    tmp9 += einsum(v.xov, (0, 1, 2), tmp2, (1, 3, 0), (3, 2)) * -1
    del tmp2
    tmp12 = np.copy(f.oo)
    tmp12 += einsum(v.xov, (0, 1, 2), tmp11, (3, 2, 0), (1, 3)) * 2
    del tmp11
    tmp8 = np.copy(tmp6) * 0.5
    del tmp6
    tmp8 += einsum(tmp7, (0, 1, 2, 3), v.xov, (4, 0, 3), (1, 2, 4)) * -1
    del tmp7
    tmp4 = einsum(v.xov, (0, 1, 2), tmp3, (3, 4, 0), (4, 1, 3, 2))
    del tmp3
    tmp10 = np.copy(np.transpose(t2, (0, 1, 3, 2))) * 2
    tmp10 += t2 * -1
    t2new = np.copy(np.transpose(tmp13, (1, 0, 3, 2)))
    del tmp13
    t2new += einsum(tmp14, (0, 1, 2), tmp14, (3, 4, 2), (0, 3, 1, 4))
    del tmp14
    t2new += einsum(t2, (0, 1, 2, 3), tmp15, (4, 1, 5, 2), (0, 4, 5, 3))
    del tmp15
    t2new += einsum(tmp16, (0, 1, 2, 3), t2, (4, 5, 3, 1), (4, 5, 0, 2))
    del tmp16
    t2new += np.transpose(tmp17, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp17, (1, 0, 2, 3)) * -1
    del tmp17
    t2new += tmp25 * -1
    t2new += np.transpose(tmp25, (1, 0, 3, 2)) * -1
    del tmp25
    t2new += tmp31 * -1
    t2new += np.transpose(tmp31, (1, 0, 3, 2)) * -1
    del tmp31
    t2new += np.transpose(tmp36, (0, 1, 3, 2))
    t2new += np.transpose(tmp36, (1, 0, 2, 3))
    del tmp36
    t2new += einsum(tmp37, (0, 1, 2, 3), t2, (0, 2, 4, 5), (1, 3, 5, 4))
    del tmp37
    t2new += einsum(tmp39, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5)) * 2
    del tmp39
    t1new = np.copy(tmp1) * 2
    del tmp1
    t1new += einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    t1new += einsum(tmp5, (0, 1, 2, 3), tmp4, (4, 0, 1, 3), (4, 2)) * -1
    del tmp5, tmp4
    t1new += einsum(v.xvv, (0, 1, 2), tmp8, (3, 2, 0), (3, 1)) * -2
    del tmp8
    t1new += einsum(tmp9, (0, 1), tmp10, (0, 2, 3, 1), (2, 3))
    del tmp9, tmp10
    t1new += einsum(t1, (0, 1), tmp12, (0, 2), (2, 1)) * -1
    del tmp12

    return {f"t1new": t1new, f"t2new": t2new}

