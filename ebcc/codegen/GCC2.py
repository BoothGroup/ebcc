"""
Code generated by `albert`:
https://github.com/obackhouse/albert

  * date: 2024-08-17T18:50:05.342431
  * python version: 3.10.12 (main, Jul 29 2024, 16:56:48) [GCC 11.4.0]
  * albert version: 0.0.0
  * caller: /home/ollie/git/albert/albert/codegen/einsum.py
  * node: ollie-desktop
  * system: Linux
  * processor: x86_64
  * release: 6.8.0-40-generic
"""

from ebcc import numpy as np
from ebcc.util import pack_2e, einsum, dirsum, Namespace


def energy(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:05.500662.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    e_cc : float
        Coupled cluster energy.
    """

    tmp0 = np.copy(t2)
    tmp0 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    e_cc = einsum(f.ov, (0, 1), t1, (0, 1), ())
    e_cc += einsum(v.oovv, (0, 1, 2, 3), tmp0, (0, 1, 2, 3), ()) * 0.25
    del tmp0

    return e_cc

def update_amps(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:07.704613.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    t1new : array
        Updated T1 residuals.
    t2new : array
        Updated T2 residuals.
    """

    tmp14 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp4 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp15 = einsum(t1, (0, 1), tmp14, (2, 0, 3, 4), (2, 3, 4, 1)) * -1
    del tmp14
    tmp0 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp10 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp13 = einsum(t2, (0, 1, 2, 3), tmp4, (1, 4), (4, 0, 2, 3))
    tmp16 = einsum(t1, (0, 1), tmp15, (2, 0, 3, 4), (2, 3, 4, 1)) * -1
    del tmp15
    tmp23 = np.copy(v.oooo)
    tmp23 += einsum(t1, (0, 1), tmp0, (2, 3, 4, 1), (4, 3, 0, 2)) * -1
    tmp11 = einsum(t1, (0, 1), tmp10, (2, 3, 4, 1), (2, 0, 3, 4)) * -1
    del tmp10
    tmp21 = einsum(v.ovov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 2, 1))
    tmp19 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp5 = np.copy(t2)
    tmp5 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * 2
    tmp17 = np.copy(np.transpose(tmp13, (0, 1, 3, 2))) * -1
    del tmp13
    tmp17 += np.transpose(tmp16, (0, 1, 3, 2))
    del tmp16
    tmp24 = np.copy(v.ooov) * -1
    tmp24 += einsum(tmp23, (0, 1, 2, 3), t1, (0, 4), (2, 3, 1, 4)) * -1
    del tmp23
    tmp18 = einsum(f.oo, (0, 1), t2, (2, 1, 3, 4), (0, 2, 3, 4))
    tmp7 = einsum(t1, (0, 1), v.vvvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp12 = einsum(tmp11, (0, 1, 2, 3), t1, (2, 4), (1, 0, 4, 3)) * -1
    del tmp11
    tmp22 = einsum(tmp21, (0, 1, 2, 3), t1, (1, 4), (0, 2, 4, 3))
    del tmp21
    tmp20 = einsum(tmp19, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    del tmp19
    tmp9 = einsum(v.ovvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3))
    tmp8 = einsum(f.vv, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp3 = np.copy(f.ov)
    tmp3 += einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp6 = np.copy(f.oo)
    tmp6 += tmp4
    del tmp4
    tmp6 += einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))
    tmp6 += einsum(tmp5, (0, 1, 2, 3), v.oovv, (4, 0, 2, 3), (4, 1)) * -0.5
    del tmp5
    tmp1 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -1
    tmp1 += np.transpose(tmp0, (0, 2, 1, 3)) * -1
    del tmp0
    tmp2 = np.copy(t2) * 0.5
    tmp2 += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    t2new = einsum(t1, (0, 1), tmp7, (2, 3, 4, 1), (0, 2, 4, 3)) * -1
    del tmp7
    t2new += v.oovv
    t2new += einsum(t1, (0, 1), v.ooov, (2, 3, 0, 4), (2, 3, 4, 1))
    t2new += np.transpose(tmp8, (1, 0, 2, 3))
    t2new += np.transpose(tmp8, (1, 0, 3, 2)) * -1
    del tmp8
    t2new += np.transpose(tmp9, (0, 1, 3, 2))
    t2new += np.transpose(tmp9, (1, 0, 3, 2)) * -1
    del tmp9
    t2new += tmp12 * -1
    t2new += np.transpose(tmp12, (0, 1, 3, 2))
    del tmp12
    t2new += tmp17
    t2new += np.transpose(tmp17, (1, 0, 2, 3)) * -1
    del tmp17
    t2new += np.transpose(tmp18, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp18, (1, 0, 3, 2))
    del tmp18
    t2new += tmp20
    t2new += np.transpose(tmp20, (0, 1, 3, 2)) * -1
    del tmp20
    t2new += tmp22
    t2new += np.transpose(tmp22, (0, 1, 3, 2)) * -1
    t2new += np.transpose(tmp22, (1, 0, 2, 3)) * -1
    t2new += np.transpose(tmp22, (1, 0, 3, 2))
    del tmp22
    t2new += einsum(t1, (0, 1), tmp24, (2, 3, 0, 4), (2, 3, 1, 4))
    del tmp24
    t1new = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    t1new += f.ov
    t1new += einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3)) * -1
    t1new += einsum(tmp1, (0, 1, 2, 3), t2, (1, 2, 4, 3), (0, 4)) * 0.5
    del tmp1
    t1new += einsum(v.ovvv, (0, 1, 2, 3), tmp2, (0, 4, 2, 3), (4, 1))
    del tmp2
    t1new += einsum(t2, (0, 1, 2, 3), tmp3, (1, 3), (0, 2))
    del tmp3
    t1new += einsum(t1, (0, 1), tmp6, (0, 2), (2, 1)) * -1
    del tmp6

    return {f"t1new": t1new, f"t2new": t2new}

def update_lams(f=None, l1=None, l2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:13.717326.

    Parameters
    ----------
    f : array
        Fock matrix.
    l1 : array
        L1 amplitudes.
    l2 : array
        L2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    l1new : array
        Updated L1 residuals.
    l2new : array
        Updated L2 residuals.
    """

    tmp5 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp4 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp10 = np.copy(v.ooov)
    tmp10 += np.transpose(tmp5, (2, 1, 0, 3)) * 0.5
    tmp1 = einsum(t1, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    tmp7 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp6 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -1
    tmp6 += np.transpose(tmp5, (0, 2, 1, 3)) * -1
    tmp23 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp34 = np.copy(np.transpose(v.ovov, (0, 2, 3, 1))) * -1
    tmp34 += tmp4
    tmp18 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    tmp25 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp41 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp19 = einsum(t2, (0, 1, 2, 3), l2, (2, 3, 4, 1), (4, 0))
    tmp11 = einsum(t1, (0, 1), tmp10, (2, 3, 4, 1), (2, 3, 4, 0))
    del tmp10
    tmp0 = einsum(t2, (0, 1, 2, 3), l2, (2, 3, 4, 5), (4, 5, 0, 1))
    tmp2 = einsum(tmp1, (0, 1, 2, 3), t1, (4, 3), (0, 1, 4, 2))
    tmp46 = einsum(tmp7, (0, 1), t1, (2, 1), (2, 0))
    tmp27 = einsum(f.vv, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    tmp28 = einsum(tmp7, (0, 1), tmp1, (2, 3, 0, 4), (2, 3, 4, 1))
    tmp39 = einsum(l1, (0, 1), tmp6, (1, 2, 3, 4), (2, 3, 4, 0))
    tmp38 = einsum(tmp23, (0, 1), l2, (2, 0, 3, 4), (3, 4, 2, 1))
    tmp37 = einsum(tmp1, (0, 1, 2, 3), f.ov, (2, 4), (0, 1, 4, 3))
    tmp33 = einsum(tmp1, (0, 1, 2, 3), v.ooov, (4, 2, 1, 5), (0, 4, 3, 5))
    tmp35 = einsum(l2, (0, 1, 2, 3), tmp34, (3, 4, 1, 5), (4, 2, 5, 0))
    del tmp34
    tmp43 = einsum(v.oovv, (0, 1, 2, 3), tmp18, (4, 1), (4, 0, 2, 3))
    tmp44 = einsum(l2, (0, 1, 2, 3), tmp25, (4, 3), (2, 4, 0, 1))
    tmp42 = einsum(tmp41, (0, 1), l2, (2, 3, 4, 1), (0, 4, 2, 3))
    del tmp41
    tmp30 = einsum(f.oo, (0, 1), l2, (2, 3, 4, 1), (0, 4, 2, 3))
    tmp31 = einsum(v.ovvv, (0, 1, 2, 3), l1, (1, 4), (4, 0, 2, 3))
    tmp20 = np.copy(tmp18) * 2
    tmp20 += tmp19
    tmp12 = np.copy(v.oooo) * -0.5
    tmp12 += einsum(t2, (0, 1, 2, 3), v.oovv, (4, 5, 2, 3), (4, 5, 0, 1)) * -0.25
    tmp12 += np.transpose(tmp11, (1, 0, 3, 2)) * -1
    tmp9 = np.copy(np.transpose(v.ovov, (0, 2, 1, 3)))
    tmp9 += np.transpose(tmp4, (0, 1, 3, 2)) * -0.5
    tmp8 = np.copy(f.ov)
    tmp8 += tmp7
    tmp15 = np.copy(np.transpose(tmp0, (1, 0, 3, 2))) * -0.5
    tmp15 += np.transpose(tmp2, (0, 1, 3, 2))
    tmp48 = einsum(tmp1, (0, 1, 2, 3), tmp5, (0, 4, 2, 5), (1, 4, 3, 5)) * -1
    del tmp5
    tmp47 = einsum(l2, (0, 1, 2, 3), tmp46, (3, 4), (2, 4, 0, 1))
    del tmp46
    tmp49 = np.copy(v.oooo) * 0.5
    tmp49 += np.transpose(tmp11, (2, 3, 1, 0)) * -1
    del tmp11
    tmp29 = np.copy(np.transpose(tmp27, (1, 0, 2, 3))) * -1
    del tmp27
    tmp29 += tmp28
    del tmp28
    tmp40 = np.copy(tmp37) * -1
    del tmp37
    tmp40 += tmp38
    del tmp38
    tmp40 += np.transpose(tmp39, (1, 0, 3, 2))
    del tmp39
    tmp36 = einsum(tmp7, (0, 1), l1, (2, 3), (3, 0, 2, 1))
    del tmp7
    tmp36 += tmp33
    del tmp33
    tmp36 += np.transpose(tmp35, (1, 0, 3, 2))
    del tmp35
    tmp45 = np.copy(np.transpose(tmp42, (0, 1, 3, 2))) * -1
    del tmp42
    tmp45 += np.transpose(tmp43, (0, 1, 3, 2)) * -1
    del tmp43
    tmp45 += np.transpose(tmp44, (0, 1, 3, 2))
    del tmp44
    tmp32 = np.copy(np.transpose(tmp30, (0, 1, 3, 2))) * -1
    del tmp30
    tmp32 += np.transpose(tmp31, (0, 1, 3, 2))
    del tmp31
    tmp14 = np.copy(v.ovvv)
    tmp14 += einsum(v.vvvv, (0, 1, 2, 3), t1, (4, 1), (4, 0, 2, 3)) * -1
    tmp22 = np.copy(tmp18)
    del tmp18
    tmp22 += tmp19 * 0.5
    del tmp19
    tmp21 = np.copy(t1) * -1
    tmp21 += einsum(t2, (0, 1, 2, 3), l1, (3, 1), (0, 2)) * -1
    tmp21 += einsum(t2, (0, 1, 2, 3), tmp1, (1, 0, 4, 3), (4, 2)) * 0.5
    tmp21 += einsum(tmp20, (0, 1), t1, (0, 2), (1, 2)) * 0.5
    tmp13 = np.copy(np.transpose(v.ovoo, (0, 2, 3, 1))) * -0.5
    tmp13 += einsum(t2, (0, 1, 2, 3), v.ovvv, (4, 5, 2, 3), (4, 0, 1, 5)) * -0.25
    tmp13 += einsum(tmp6, (0, 1, 2, 3), t2, (4, 1, 5, 3), (2, 4, 0, 5))
    del tmp6
    tmp13 += einsum(t2, (0, 1, 2, 3), tmp8, (4, 3), (4, 0, 1, 2)) * 0.5
    tmp13 += einsum(t1, (0, 1), tmp9, (2, 3, 1, 4), (3, 2, 0, 4)) * -1
    del tmp9
    tmp13 += einsum(tmp12, (0, 1, 2, 3), t1, (0, 4), (1, 3, 2, 4)) * -1
    del tmp12
    tmp16 = einsum(t2, (0, 1, 2, 3), l1, (3, 4), (4, 0, 1, 2))
    tmp16 += einsum(tmp1, (0, 1, 2, 3), t2, (4, 1, 5, 3), (0, 4, 2, 5)) * -2
    tmp16 += einsum(t1, (0, 1), tmp15, (0, 2, 3, 4), (2, 4, 3, 1)) * -1
    del tmp15
    tmp17 = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    tmp17 += einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2)) * 0.5
    tmp24 = np.copy(f.vv)
    tmp24 += tmp23 * -1
    del tmp23
    tmp3 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 5, 1), (2, 4, 0, 5))
    tmp26 = np.copy(f.oo) * 2
    tmp26 += np.transpose(tmp25, (1, 0)) * 2
    del tmp25
    tmp26 += einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp26 += einsum(tmp8, (0, 1), t1, (2, 1), (2, 0)) * 2
    l2new = einsum(l2, (0, 1, 2, 3), v.vvvv, (4, 5, 0, 1), (4, 5, 2, 3)) * 0.5
    l2new += einsum(tmp1, (0, 1, 2, 3), v.ovvv, (2, 3, 4, 5), (4, 5, 0, 1))
    l2new += np.transpose(v.oovv, (2, 3, 0, 1))
    l2new += einsum(v.oovv, (0, 1, 2, 3), tmp2, (4, 5, 1, 0), (2, 3, 5, 4)) * 0.5
    l2new += np.transpose(tmp29, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp29, (3, 2, 0, 1))
    del tmp29
    l2new += np.transpose(tmp32, (2, 3, 0, 1))
    l2new += np.transpose(tmp32, (2, 3, 1, 0)) * -1
    del tmp32
    l2new += np.transpose(tmp36, (2, 3, 0, 1))
    l2new += np.transpose(tmp36, (3, 2, 0, 1)) * -1
    l2new += np.transpose(tmp36, (2, 3, 1, 0)) * -1
    l2new += np.transpose(tmp36, (3, 2, 1, 0))
    del tmp36
    l2new += np.transpose(tmp40, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp40, (3, 2, 0, 1))
    del tmp40
    l2new += einsum(l1, (0, 1), f.ov, (2, 3), (3, 0, 2, 1))
    l2new += einsum(l1, (0, 1), f.ov, (2, 3), (0, 3, 2, 1)) * -1
    l2new += einsum(l1, (0, 1), f.ov, (2, 3), (3, 0, 1, 2)) * -1
    l2new += einsum(f.ov, (0, 1), l1, (2, 3), (2, 1, 3, 0))
    l2new += np.transpose(tmp45, (3, 2, 0, 1)) * -1
    l2new += np.transpose(tmp45, (3, 2, 1, 0))
    del tmp45
    l2new += np.transpose(tmp47, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp47, (2, 3, 1, 0))
    del tmp47
    l2new += np.transpose(tmp48, (2, 3, 0, 1)) * -1
    l2new += np.transpose(tmp48, (3, 2, 0, 1))
    l2new += np.transpose(tmp48, (2, 3, 1, 0))
    l2new += np.transpose(tmp48, (3, 2, 1, 0)) * -1
    del tmp48
    l2new += einsum(tmp49, (0, 1, 2, 3), l2, (4, 5, 0, 1), (4, 5, 2, 3))
    del tmp49
    l1new = einsum(v.ovoo, (0, 1, 2, 3), tmp0, (4, 0, 3, 2), (1, 4)) * 0.25
    del tmp0
    l1new += einsum(v.ooov, (0, 1, 2, 3), tmp2, (4, 2, 0, 1), (3, 4)) * -0.5
    del tmp2
    l1new += einsum(v.ovov, (0, 1, 2, 3), tmp1, (4, 2, 0, 1), (3, 4)) * -1
    l1new += np.transpose(f.ov, (1, 0))
    l1new += einsum(v.ovov, (0, 1, 2, 3), l1, (1, 2), (3, 0)) * -1
    l1new += einsum(tmp3, (0, 1, 2, 3), v.ovvv, (1, 2, 4, 3), (4, 0)) * -1
    del tmp3
    l1new += einsum(tmp1, (0, 1, 2, 3), tmp4, (1, 2, 3, 4), (4, 0))
    del tmp4, tmp1
    l1new += einsum(tmp13, (0, 1, 2, 3), l2, (4, 3, 1, 2), (4, 0))
    del tmp13
    l1new += einsum(tmp14, (0, 1, 2, 3), l2, (2, 3, 4, 0), (1, 4)) * -0.5
    del tmp14
    l1new += einsum(v.oovv, (0, 1, 2, 3), tmp16, (4, 0, 1, 3), (2, 4)) * 0.5
    del tmp16
    l1new += einsum(tmp17, (0, 1), v.ovvv, (2, 0, 3, 1), (3, 2))
    del tmp17
    l1new += einsum(v.oovv, (0, 1, 2, 3), tmp21, (1, 3), (2, 0)) * -1
    del tmp21
    l1new += einsum(v.ooov, (0, 1, 2, 3), tmp22, (2, 1), (3, 0))
    del tmp22
    l1new += einsum(l1, (0, 1), tmp24, (0, 2), (2, 1))
    del tmp24
    l1new += einsum(tmp26, (0, 1), l1, (2, 0), (2, 1)) * -0.5
    del tmp26
    l1new += einsum(tmp8, (0, 1), tmp20, (2, 0), (1, 2)) * -0.5
    del tmp20, tmp8

    return {f"l1new": l1new, f"l2new": l2new}

def make_rdm1_f(l1=None, l2=None, t1=None, t2=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:14.148775.

    Parameters
    ----------
    l1 : array
        L1 amplitudes.
    l2 : array
        L2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.

    Returns
    -------
    rdm1 : array
        One-particle reduced density matrix.
    """

    rdm1 = Namespace()
    delta = Namespace(
        oo=np.eye(t2.shape[0]),
        vv=np.eye(t2.shape[-1]),
    )
    tmp0 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    tmp1 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 0, 1), (2, 4))
    tmp3 = np.copy(tmp0)
    tmp3 += tmp1 * 0.5
    tmp2 = einsum(t1, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    rdm1.vv = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    rdm1.vv += einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2)) * 0.5
    rdm1.vo = np.copy(l1)
    rdm1.ov = einsum(tmp2, (0, 1, 2, 3), t2, (1, 0, 4, 3), (2, 4)) * -0.5
    del tmp2
    rdm1.ov += einsum(t2, (0, 1, 2, 3), l1, (3, 1), (0, 2))
    rdm1.ov += t1
    rdm1.ov += einsum(t1, (0, 1), tmp3, (0, 2), (2, 1)) * -1
    del tmp3
    rdm1.oo = np.copy(np.transpose(tmp0, (1, 0))) * -1
    del tmp0
    rdm1.oo += delta.oo
    del delta
    rdm1.oo += np.transpose(tmp1, (1, 0)) * -0.5
    del tmp1
    rdm1 = np.block([[rdm1.oo, rdm1.ov], [rdm1.vo, rdm1.vv]])

    return rdm1

def make_rdm2_f(l1=None, l2=None, t1=None, t2=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:20.811122.

    Parameters
    ----------
    l1 : array
        L1 amplitudes.
    l2 : array
        L2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.

    Returns
    -------
    rdm2 : array
        Two-particle reduced density matrix.
    """

    rdm2 = Namespace()
    delta = Namespace(
        oo=np.eye(t2.shape[0]),
        vv=np.eye(t2.shape[-1]),
    )
    tmp1 = einsum(t1, (0, 1), l2, (2, 1, 3, 4), (3, 4, 0, 2))
    tmp3 = einsum(t1, (0, 1), l1, (1, 2), (2, 0))
    tmp4 = einsum(l2, (0, 1, 2, 3), t2, (4, 3, 0, 1), (2, 4))
    tmp21 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 5, 1), (5, 0, 4, 2))
    tmp0 = einsum(t2, (0, 1, 2, 3), l2, (2, 3, 4, 5), (4, 5, 0, 1))
    tmp2 = einsum(tmp1, (0, 1, 2, 3), t1, (4, 3), (0, 1, 4, 2))
    tmp6 = einsum(t2, (0, 1, 2, 3), tmp1, (4, 1, 5, 3), (4, 5, 0, 2)) * -1
    tmp10 = einsum(t2, (0, 1, 2, 3), l1, (3, 1), (0, 2))
    tmp11 = einsum(t1, (0, 1), tmp3, (0, 2), (2, 1))
    tmp5 = einsum(l1, (0, 1), t2, (2, 3, 4, 0), (1, 2, 3, 4))
    tmp14 = np.copy(tmp3) * 2
    tmp14 += tmp4
    tmp30 = einsum(t1, (0, 1), l1, (2, 0), (2, 1))
    tmp25 = einsum(t2, (0, 1, 2, 3), l2, (4, 3, 0, 1), (4, 2))
    tmp29 = einsum(t1, (0, 1), tmp1, (2, 0, 3, 4), (2, 3, 4, 1))
    tmp36 = einsum(t1, (0, 1), tmp21, (0, 2, 3, 4), (2, 3, 1, 4))
    tmp13 = np.copy(np.transpose(tmp0, (1, 0, 3, 2))) * -0.5
    tmp13 += np.transpose(tmp2, (0, 1, 3, 2))
    tmp18 = einsum(t1, (0, 1), tmp6, (0, 2, 3, 4), (2, 3, 1, 4))
    tmp12 = np.copy(tmp10)
    tmp12 += tmp11 * -1
    del tmp11
    tmp20 = einsum(t1, (0, 1), tmp5, (0, 2, 3, 4), (2, 3, 1, 4))
    tmp22 = einsum(tmp21, (0, 1, 2, 3), t2, (4, 0, 5, 2), (4, 1, 5, 3))
    tmp8 = einsum(t1, (0, 1), tmp4, (0, 2), (2, 1))
    tmp7 = einsum(t2, (0, 1, 2, 3), tmp1, (1, 0, 4, 3), (4, 2))
    tmp15 = einsum(t1, (0, 1), tmp14, (0, 2), (2, 1)) * 0.5
    del tmp14
    tmp38 = einsum(t1, (0, 1), l2, (2, 3, 4, 0), (4, 2, 3, 1))
    tmp31 = np.copy(tmp30)
    tmp31 += tmp25 * 0.5
    tmp35 = einsum(l1, (0, 1), t2, (2, 1, 3, 4), (2, 0, 3, 4))
    tmp34 = einsum(t1, (0, 1), tmp29, (0, 2, 3, 4), (2, 3, 4, 1)) * -1
    tmp33 = einsum(t2, (0, 1, 2, 3), tmp1, (1, 0, 4, 5), (4, 5, 2, 3)) * -1
    tmp37 = np.copy(tmp36)
    tmp37 += einsum(tmp25, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * -0.5
    tmp32 = np.copy(tmp30) * 2
    tmp32 += tmp25
    tmp28 = einsum(tmp13, (0, 1, 2, 3), t1, (0, 4), (1, 3, 2, 4)) * -2
    tmp24 = einsum(t2, (0, 1, 2, 3), tmp3, (1, 4), (4, 0, 2, 3))
    tmp27 = einsum(t2, (0, 1, 2, 3), tmp4, (1, 4), (0, 4, 2, 3))
    tmp19 = np.copy(tmp18)
    del tmp18
    tmp19 += einsum(tmp12, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * -1
    tmp26 = einsum(t2, (0, 1, 2, 3), tmp25, (3, 4), (0, 1, 2, 4))
    del tmp25
    tmp23 = np.copy(tmp20)
    del tmp20
    tmp23 += tmp22
    del tmp22
    tmp9 = np.copy(tmp7)
    tmp9 += tmp8
    del tmp8
    tmp17 = np.copy(np.transpose(tmp0, (1, 0, 3, 2))) * -1
    tmp17 += np.transpose(tmp2, (0, 1, 3, 2)) * 2
    tmp16 = np.copy(tmp10) * -1
    del tmp10
    tmp16 += tmp7 * 0.5
    del tmp7
    tmp16 += tmp15
    del tmp15
    rdm2.vvvv = einsum(t2, (0, 1, 2, 3), l2, (4, 5, 0, 1), (4, 5, 2, 3)) * 0.5
    rdm2.vvvv += einsum(tmp38, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3))
    rdm2.vvvo = np.copy(np.transpose(tmp38, (2, 1, 3, 0)))
    rdm2.vvov = np.copy(np.transpose(tmp38, (2, 1, 0, 3))) * -1
    del tmp38
    rdm2.vovv = np.copy(np.transpose(tmp33, (1, 0, 3, 2))) * 0.5
    rdm2.vovv += np.transpose(tmp34, (1, 0, 3, 2))
    rdm2.vovv += np.transpose(tmp35, (1, 0, 3, 2))
    rdm2.vovv += np.transpose(tmp36, (1, 0, 2, 3))
    rdm2.vovv += np.transpose(tmp36, (1, 0, 3, 2)) * -1
    del tmp36
    rdm2.vovv += einsum(t1, (0, 1), tmp31, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.vovv += einsum(t1, (0, 1), tmp31, (2, 3), (2, 0, 3, 1))
    rdm2.ovvv = np.copy(np.transpose(tmp33, (0, 1, 3, 2))) * -0.5
    del tmp33
    rdm2.ovvv += np.transpose(tmp34, (0, 1, 3, 2)) * -1
    del tmp34
    rdm2.ovvv += np.transpose(tmp35, (0, 1, 3, 2)) * -1
    del tmp35
    rdm2.ovvv += tmp37 * -1
    rdm2.ovvv += np.transpose(tmp37, (0, 1, 3, 2))
    del tmp37
    rdm2.ovvv += einsum(tmp30, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.ovvv += einsum(tmp30, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    del tmp30
    rdm2.vvoo = np.copy(l2)
    rdm2.vovo = np.copy(np.transpose(tmp21, (2, 1, 3, 0))) * -1
    rdm2.vovo += np.transpose(tmp29, (2, 1, 3, 0))
    rdm2.vovo += einsum(l1, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * -1
    rdm2.vovo += einsum(delta.oo, (0, 1), tmp32, (2, 3), (2, 0, 3, 1)) * 0.5
    rdm2.voov = np.copy(np.transpose(tmp21, (2, 1, 0, 3)))
    rdm2.voov += np.transpose(tmp29, (2, 1, 0, 3)) * -1
    rdm2.voov += einsum(l1, (0, 1), t1, (2, 3), (0, 2, 1, 3))
    rdm2.voov += einsum(delta.oo, (0, 1), tmp31, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ovvo = np.copy(np.transpose(tmp21, (1, 2, 3, 0)))
    rdm2.ovvo += np.transpose(tmp29, (1, 2, 3, 0)) * -1
    rdm2.ovvo += einsum(l1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.ovvo += einsum(delta.oo, (0, 1), tmp32, (2, 3), (0, 2, 3, 1)) * -0.5
    del tmp32
    rdm2.ovov = np.copy(np.transpose(tmp21, (1, 2, 0, 3))) * -1
    del tmp21
    rdm2.ovov += np.transpose(tmp29, (1, 2, 0, 3))
    del tmp29
    rdm2.ovov += einsum(l1, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ovov += einsum(delta.oo, (0, 1), tmp31, (2, 3), (0, 2, 1, 3))
    del tmp31
    rdm2.oovv = np.copy(t2)
    rdm2.oovv += tmp19 * -1
    rdm2.oovv += np.transpose(tmp19, (0, 1, 3, 2))
    rdm2.oovv += np.transpose(tmp19, (1, 0, 2, 3))
    rdm2.oovv += np.transpose(tmp19, (1, 0, 3, 2)) * -1
    del tmp19
    rdm2.oovv += tmp23
    rdm2.oovv += np.transpose(tmp23, (0, 1, 3, 2)) * -1
    del tmp23
    rdm2.oovv += np.transpose(tmp24, (0, 1, 3, 2)) * -1
    rdm2.oovv += np.transpose(tmp24, (1, 0, 3, 2))
    del tmp24
    rdm2.oovv += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.oovv += einsum(t1, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.oovv += tmp26 * -0.5
    rdm2.oovv += np.transpose(tmp26, (0, 1, 3, 2)) * 0.5
    del tmp26
    rdm2.oovv += np.transpose(tmp27, (0, 1, 3, 2)) * 0.5
    rdm2.oovv += np.transpose(tmp27, (1, 0, 3, 2)) * -0.5
    del tmp27
    rdm2.oovv += einsum(tmp9, (0, 1), t1, (2, 3), (2, 0, 3, 1)) * -0.5
    rdm2.oovv += einsum(t1, (0, 1), tmp9, (2, 3), (0, 2, 3, 1)) * 0.5
    rdm2.oovv += einsum(tmp9, (0, 1), t1, (2, 3), (0, 2, 3, 1)) * 0.5
    rdm2.oovv += einsum(t1, (0, 1), tmp9, (2, 3), (2, 0, 3, 1)) * -0.5
    rdm2.oovv += einsum(t2, (0, 1, 2, 3), tmp13, (0, 1, 4, 5), (5, 4, 2, 3)) * 0.5
    rdm2.oovv += einsum(tmp28, (0, 1, 2, 3), t1, (0, 4), (1, 2, 4, 3)) * 0.5
    del tmp28
    rdm2.vooo = np.copy(np.transpose(tmp1, (3, 2, 1, 0)))
    rdm2.vooo += einsum(l1, (0, 1), delta.oo, (2, 3), (0, 2, 1, 3))
    rdm2.vooo += einsum(delta.oo, (0, 1), l1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ovoo = np.copy(np.transpose(tmp1, (2, 3, 1, 0))) * -1
    del tmp1
    rdm2.ovoo += einsum(l1, (0, 1), delta.oo, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ovoo += einsum(delta.oo, (0, 1), l1, (2, 3), (0, 2, 1, 3))
    rdm2.oovo = np.copy(np.transpose(tmp5, (2, 1, 3, 0)))
    rdm2.oovo += einsum(tmp3, (0, 1), t1, (2, 3), (2, 1, 3, 0)) * -1
    rdm2.oovo += einsum(t1, (0, 1), tmp3, (2, 3), (3, 0, 1, 2))
    rdm2.oovo += np.transpose(tmp6, (1, 2, 3, 0))
    rdm2.oovo += np.transpose(tmp6, (2, 1, 3, 0)) * -1
    rdm2.oovo += einsum(tmp4, (0, 1), t1, (2, 3), (2, 1, 3, 0)) * -0.5
    rdm2.oovo += einsum(t1, (0, 1), tmp4, (2, 3), (3, 0, 1, 2)) * 0.5
    rdm2.oovo += einsum(delta.oo, (0, 1), t1, (2, 3), (2, 0, 3, 1))
    rdm2.oovo += einsum(t1, (0, 1), delta.oo, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.oovo += einsum(delta.oo, (0, 1), tmp16, (2, 3), (2, 0, 3, 1)) * -1
    rdm2.oovo += einsum(delta.oo, (0, 1), tmp16, (2, 3), (0, 2, 3, 1))
    del tmp16
    rdm2.oovo += einsum(t1, (0, 1), tmp17, (0, 2, 3, 4), (4, 3, 1, 2)) * 0.5
    del tmp17
    rdm2.ooov = np.copy(np.transpose(tmp5, (2, 1, 0, 3))) * -1
    del tmp5
    rdm2.ooov += einsum(tmp3, (0, 1), t1, (2, 3), (2, 1, 0, 3))
    rdm2.ooov += einsum(t1, (0, 1), tmp3, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.ooov += np.transpose(tmp6, (1, 2, 0, 3)) * -1
    rdm2.ooov += np.transpose(tmp6, (2, 1, 0, 3))
    del tmp6
    rdm2.ooov += einsum(tmp4, (0, 1), t1, (2, 3), (2, 1, 0, 3)) * 0.5
    rdm2.ooov += einsum(t1, (0, 1), tmp4, (2, 3), (3, 0, 2, 1)) * -0.5
    rdm2.ooov += einsum(delta.oo, (0, 1), t1, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ooov += einsum(t1, (0, 1), delta.oo, (2, 3), (2, 0, 3, 1))
    rdm2.ooov += einsum(tmp9, (0, 1), delta.oo, (2, 3), (0, 2, 3, 1)) * 0.5
    rdm2.ooov += einsum(delta.oo, (0, 1), tmp9, (2, 3), (0, 2, 1, 3)) * -0.5
    del tmp9
    rdm2.ooov += einsum(delta.oo, (0, 1), tmp12, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.ooov += einsum(tmp12, (0, 1), delta.oo, (2, 3), (2, 0, 3, 1))
    del tmp12
    rdm2.ooov += einsum(t1, (0, 1), tmp13, (0, 2, 3, 4), (4, 3, 2, 1)) * -1
    del tmp13
    rdm2.oooo = np.copy(np.transpose(tmp0, (3, 2, 1, 0))) * 0.5
    del tmp0
    rdm2.oooo += np.transpose(tmp2, (2, 3, 1, 0)) * -1
    del tmp2
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp3, (2, 3), (3, 0, 2, 1)) * -1
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp3, (2, 3), (0, 3, 2, 1))
    rdm2.oooo += einsum(tmp3, (0, 1), delta.oo, (2, 3), (1, 2, 3, 0))
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp3, (2, 3), (0, 3, 1, 2)) * -1
    del tmp3
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (0, 2, 1, 3))
    rdm2.oooo += einsum(delta.oo, (0, 1), delta.oo, (2, 3), (2, 0, 1, 3)) * -1
    rdm2.oooo += einsum(tmp4, (0, 1), delta.oo, (2, 3), (1, 2, 0, 3)) * -0.5
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp4, (2, 3), (0, 3, 2, 1)) * 0.5
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp4, (2, 3), (3, 0, 1, 2)) * 0.5
    rdm2.oooo += einsum(delta.oo, (0, 1), tmp4, (2, 3), (0, 3, 1, 2)) * -0.5
    del tmp4, delta
    rdm2 = pack_2e(rdm2.oooo, rdm2.ooov, rdm2.oovo, rdm2.ovoo, rdm2.vooo, rdm2.oovv, rdm2.ovov, rdm2.ovvo, rdm2.voov, rdm2.vovo, rdm2.vvoo, rdm2.ovvv, rdm2.vovv, rdm2.vvov, rdm2.vvvo, rdm2.vvvv)
    rdm2 = np.transpose(rdm2, (0, 2, 1, 3))

    return rdm2

def hbar_matvec_ip_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:24.502529.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp0 : array
    tmp1 : array
    tmp11 : array
    tmp12 : array
    tmp13 : array
    tmp15 : array
    tmp16 : array
    tmp18 : array
    tmp19 : array
    tmp2 : array
    tmp21 : array
    tmp22 : array
    tmp23 : array
    tmp3 : array
    tmp4 : array
    tmp5 : array
    tmp7 : array
    tmp8 : array
    """

    tmp0 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp2 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp23 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp22 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    tmp21 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp19 = einsum(t2, (0, 1, 2, 3), v.ovvv, (4, 5, 2, 3), (0, 1, 4, 5))
    tmp18 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp16 = einsum(v.ooov, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 2, 5))
    tmp15 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp13 = einsum(t1, (0, 1), tmp0, (0, 2), (2, 1))
    tmp12 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp11 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp8 = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    tmp7 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))
    tmp5 = einsum(tmp2, (0, 1), t1, (2, 1), (2, 0))
    tmp4 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp3 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp1 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))

    return {f"tmp0": tmp0, f"tmp1": tmp1, f"tmp11": tmp11, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp15": tmp15, f"tmp16": tmp16, f"tmp18": tmp18, f"tmp19": tmp19, f"tmp2": tmp2, f"tmp21": tmp21, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp3": tmp3, f"tmp4": tmp4, f"tmp5": tmp5, f"tmp7": tmp7, f"tmp8": tmp8}

def hbar_matvec_ip(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:24.512259.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp5 = np.copy(f.oo)
    tmp5 += ints.tmp0
    tmp6 = einsum(r2, (0, 1, 2), tmp5, (1, 3), (0, 3, 2)) * -1
    del tmp5
    tmp4 = einsum(ints.tmp16, (0, 1, 2, 3), r1, (1,), (0, 2, 3))
    del ints.tmp16
    tmp10 = einsum(v.ovov, (0, 1, 2, 3), r2, (4, 2, 1), (4, 0, 3))
    tmp9 = einsum(ints.tmp23, (0, 1, 2, 3), r2, (4, 1, 3), (0, 4, 2))
    del ints.tmp23
    tmp8 = einsum(ints.tmp4, (0, 1), r2, (2, 1, 3), (0, 2, 3))
    tmp3 = einsum(v.oovv, (0, 1, 2, 3), r2, (0, 1, 3), (2,))
    tmp13 = np.copy(np.transpose(ints.tmp22, (1, 0))) * 0.5
    del ints.tmp22
    tmp13 += f.vv * -1
    tmp13 += einsum(t1, (0, 1), f.ov, (0, 2), (2, 1))
    tmp7 = np.copy(tmp4)
    del tmp4
    tmp7 += np.transpose(tmp6, (1, 0, 2)) * -1
    del tmp6
    tmp15 = np.copy(ints.tmp13)
    del ints.tmp13
    tmp15 += ints.tmp15 * 0.5
    del ints.tmp15
    tmp15 += ints.tmp18 * 0.5
    del ints.tmp18
    tmp15 += ints.tmp7
    del ints.tmp7
    tmp15 += f.ov * -1
    tmp15 += ints.tmp11 * -1
    del ints.tmp11
    tmp15 += ints.tmp8 * -1
    del ints.tmp8
    tmp12 = np.copy(ints.tmp21) * -0.5
    del ints.tmp21
    tmp12 += v.oooo * -1
    tmp14 = np.copy(np.transpose(ints.tmp19, (2, 0, 1, 3))) * 0.5
    del ints.tmp19
    tmp14 += np.transpose(v.ovoo, (0, 2, 3, 1))
    tmp14 += ints.tmp12 * -1
    del ints.tmp12
    tmp11 = np.copy(tmp8) * -0.5
    del tmp8
    tmp11 += tmp9
    del tmp9
    tmp11 += tmp10
    del tmp10
    tmp1 = np.copy(f.ov)
    tmp1 += ints.tmp2
    del ints.tmp2
    tmp0 = np.copy(ints.tmp3)
    del ints.tmp3
    tmp0 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp2 = np.copy(f.oo) * 2
    tmp2 += ints.tmp0 * 2
    del ints.tmp0
    tmp2 += ints.tmp1 * 2
    del ints.tmp1
    tmp2 += np.transpose(ints.tmp4, (1, 0))
    del ints.tmp4
    tmp2 += np.transpose(ints.tmp5, (1, 0)) * 2
    del ints.tmp5
    r2new = einsum(t2, (0, 1, 2, 3), tmp3, (3,), (0, 1, 2)) * 0.5
    del tmp3
    r2new += tmp7
    r2new += np.transpose(tmp7, (1, 0, 2)) * -1
    del tmp7
    r2new += tmp11 * -1
    r2new += np.transpose(tmp11, (1, 0, 2))
    del tmp11
    r2new += einsum(tmp12, (0, 1, 2, 3), r2, (3, 2, 4), (0, 1, 4)) * 0.5
    del tmp12
    r2new += einsum(r2, (0, 1, 2), tmp13, (2, 3), (0, 1, 3)) * -1
    del tmp13
    r2new += einsum(r1, (0,), tmp14, (0, 1, 2, 3), (2, 1, 3))
    del tmp14
    r2new += einsum(r1, (0,), tmp15, (1, 2), (0, 1, 2)) * -1
    r2new += einsum(r1, (0,), tmp15, (1, 2), (1, 0, 2))
    del tmp15
    r1new = einsum(tmp0, (0, 1, 2, 3), r2, (1, 2, 3), (0,)) * 0.5
    del tmp0
    r1new += einsum(r2, (0, 1, 2), tmp1, (1, 2), (0,))
    del tmp1
    r1new += einsum(r1, (0,), tmp2, (0, 1), (1,)) * -0.5
    del tmp2

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_matvec_ea_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:28.432229.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp1 : array
    tmp12 : array
    tmp13 : array
    tmp15 : array
    tmp16 : array
    tmp17 : array
    tmp18 : array
    tmp2 : array
    tmp20 : array
    tmp22 : array
    tmp4 : array
    tmp7 : array
    tmp8 : array
    tmp9 : array
    """

    tmp9 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp22 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp20 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp18 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 3), (0, 2, 4, 5))
    tmp17 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp16 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 5, 0, 1), (4, 2, 3, 5))
    tmp15 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp13 = einsum(t1, (0, 1), tmp9, (0, 2), (2, 1))
    tmp12 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp8 = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    tmp7 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))
    tmp4 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    tmp2 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp1 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))

    return {f"tmp1": tmp1, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp15": tmp15, f"tmp16": tmp16, f"tmp17": tmp17, f"tmp18": tmp18, f"tmp2": tmp2, f"tmp20": tmp20, f"tmp22": tmp22, f"tmp4": tmp4, f"tmp7": tmp7, f"tmp8": tmp8, f"tmp9": tmp9}

def hbar_matvec_ea(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:28.440402.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp10 = np.copy(f.vv) * 2
    tmp10 += np.transpose(ints.tmp4, (1, 0)) * -1
    tmp8 = einsum(r2, (0, 1, 2), f.ov, (3, 1), (3, 2, 0))
    tmp11 = einsum(tmp10, (0, 1), r2, (2, 0, 3), (3, 2, 1)) * -0.5
    del tmp10
    tmp6 = einsum(ints.tmp22, (0, 1, 2, 3), r2, (4, 3, 1), (0, 2, 4))
    del ints.tmp22
    tmp9 = einsum(t1, (0, 1), tmp8, (0, 2, 3), (2, 3, 1))
    del tmp8
    tmp7 = einsum(v.ovov, (0, 1, 2, 3), r2, (4, 1, 2), (0, 4, 3))
    tmp2 = einsum(v.oovv, (0, 1, 2, 3), r2, (2, 3, 1), (0,))
    tmp0 = np.copy(f.ov)
    tmp0 += ints.tmp2
    del ints.tmp2
    tmp13 = np.copy(ints.tmp16) * 0.5
    del ints.tmp16
    tmp13 += np.transpose(v.ovvv, (0, 2, 3, 1))
    tmp5 = einsum(r1, (0,), ints.tmp18, (1, 2, 3, 0), (1, 2, 3))
    del ints.tmp18
    tmp4 = einsum(r2, (0, 1, 2), v.oovv, (3, 4, 0, 1), (2, 3, 4))
    tmp12 = np.copy(tmp6)
    del tmp6
    tmp12 += tmp7
    del tmp7
    tmp12 += tmp9
    del tmp9
    tmp12 += np.transpose(tmp11, (0, 2, 1)) * -1
    del tmp11
    tmp14 = np.copy(f.oo)
    tmp14 += np.transpose(ints.tmp20, (1, 0)) * 0.5
    del ints.tmp20
    tmp14 += ints.tmp9
    del ints.tmp9
    tmp15 = einsum(r1, (0,), f.ov, (1, 0), (1,)) * 2
    tmp15 += tmp2
    tmp16 = np.copy(ints.tmp13)
    del ints.tmp13
    tmp16 += ints.tmp15 * 0.5
    del ints.tmp15
    tmp16 += ints.tmp17 * 0.5
    del ints.tmp17
    tmp16 += ints.tmp7
    del ints.tmp7
    tmp16 += f.ov * -1
    tmp16 += ints.tmp12 * -1
    del ints.tmp12
    tmp16 += ints.tmp8 * -1
    del ints.tmp8
    tmp3 = np.copy(tmp2) * 0.5
    del tmp2
    tmp3 += einsum(r1, (0,), tmp0, (1, 0), (1,))
    tmp1 = np.copy(np.transpose(ints.tmp1, (1, 0)))
    del ints.tmp1
    tmp1 += np.transpose(ints.tmp4, (1, 0)) * 0.5
    del ints.tmp4
    tmp1 += f.vv * -1
    r2new = einsum(r2, (0, 1, 2), v.vvvv, (3, 4, 0, 1), (3, 4, 2)) * 0.5
    r2new += einsum(t2, (0, 1, 2, 3), tmp4, (4, 1, 0), (2, 3, 4)) * -0.25
    del tmp4
    r2new += np.transpose(tmp5, (1, 2, 0))
    r2new += np.transpose(tmp5, (2, 1, 0)) * -1
    del tmp5
    r2new += np.transpose(tmp12, (1, 2, 0)) * -1
    r2new += np.transpose(tmp12, (2, 1, 0))
    del tmp12
    r2new += einsum(r1, (0,), tmp13, (1, 2, 3, 0), (3, 2, 1))
    del tmp13
    r2new += einsum(tmp14, (0, 1), r2, (2, 3, 0), (2, 3, 1)) * -1
    del tmp14
    r2new += einsum(tmp15, (0,), t2, (1, 0, 2, 3), (2, 3, 1)) * 0.5
    del tmp15
    r2new += einsum(r1, (0,), tmp16, (1, 2), (0, 2, 1)) * -1
    r2new += einsum(r1, (0,), tmp16, (1, 2), (2, 0, 1))
    del tmp16
    r1new = einsum(r2, (0, 1, 2), v.ovvv, (2, 3, 0, 1), (3,)) * -0.5
    r1new += einsum(r2, (0, 1, 2), tmp0, (2, 1), (0,))
    del tmp0
    r1new += einsum(r1, (0,), tmp1, (0, 1), (1,)) * -1
    del tmp1
    r1new += einsum(tmp3, (0,), t1, (0, 1), (1,)) * -1
    del tmp3

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_matvec_ee_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:37.210046.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp0 : array
    tmp10 : array
    tmp12 : array
    tmp17 : array
    tmp18 : array
    tmp2 : array
    tmp22 : array
    tmp23 : array
    tmp26 : array
    tmp30 : array
    tmp31 : array
    tmp33 : array
    tmp36 : array
    tmp37 : array
    tmp39 : array
    tmp4 : array
    tmp44 : array
    tmp46 : array
    tmp5 : array
    tmp6 : array
    tmp7 : array
    tmp9 : array
    """

    tmp0 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp6 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp46 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp44 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp39 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 3), (0, 2, 4, 5))
    tmp37 = einsum(t2, (0, 1, 2, 3), v.ovvv, (4, 5, 2, 3), (0, 1, 4, 5))
    tmp36 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp33 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 5, 0, 1), (4, 2, 3, 5))
    tmp31 = einsum(v.ooov, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 2, 5))
    tmp30 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp26 = einsum(t1, (0, 1), tmp0, (0, 2), (2, 1))
    tmp23 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp22 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp18 = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    tmp17 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))
    tmp12 = einsum(tmp6, (0, 1), t1, (2, 1), (2, 0))
    tmp10 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    tmp9 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp7 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp5 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp4 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp2 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))

    return {f"tmp0": tmp0, f"tmp10": tmp10, f"tmp12": tmp12, f"tmp17": tmp17, f"tmp18": tmp18, f"tmp2": tmp2, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp26": tmp26, f"tmp30": tmp30, f"tmp31": tmp31, f"tmp33": tmp33, f"tmp36": tmp36, f"tmp37": tmp37, f"tmp39": tmp39, f"tmp4": tmp4, f"tmp44": tmp44, f"tmp46": tmp46, f"tmp5": tmp5, f"tmp6": tmp6, f"tmp7": tmp7, f"tmp9": tmp9}

def hbar_matvec_ee(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:37.224185.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp27 = einsum(r1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp6 = einsum(v.oovv, (0, 1, 2, 3), r2, (4, 1, 2, 3), (4, 0))
    tmp15 = einsum(v.ooov, (0, 1, 2, 3), r1, (1, 3), (0, 2))
    tmp28 = np.copy(np.transpose(tmp27, (1, 0)))
    del tmp27
    tmp28 += tmp6 * 0.5
    tmp25 = np.copy(f.oo)
    tmp25 += ints.tmp0
    tmp25 += np.transpose(ints.tmp9, (1, 0)) * 0.5
    tmp34 = einsum(f.ov, (0, 1), r2, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp36 = einsum(v.oovv, (0, 1, 2, 3), r2, (0, 1, 4, 3), (4, 2))
    tmp16 = einsum(tmp15, (0, 1), t2, (2, 0, 3, 4), (2, 1, 3, 4)) * -1
    del tmp15
    tmp14 = einsum(v.ovvv, (0, 1, 2, 3), r1, (4, 1), (4, 0, 2, 3))
    tmp10 = einsum(ints.tmp39, (0, 1, 2, 3), r1, (4, 3), (0, 4, 1, 2))
    del ints.tmp39
    tmp11 = einsum(r2, (0, 1, 2, 3), v.ovov, (4, 3, 1, 5), (0, 4, 2, 5))
    tmp9 = einsum(ints.tmp31, (0, 1, 2, 3), r1, (1, 4), (0, 2, 3, 4))
    del ints.tmp31
    tmp12 = einsum(r2, (0, 1, 2, 3), ints.tmp46, (4, 1, 5, 3), (4, 0, 5, 2))
    del ints.tmp46
    tmp21 = einsum(ints.tmp37, (0, 1, 2, 3), r1, (2, 4), (0, 1, 3, 4))
    del ints.tmp37
    tmp22 = einsum(r2, (0, 1, 2, 3), ints.tmp10, (4, 3), (0, 1, 4, 2))
    tmp29 = einsum(t2, (0, 1, 2, 3), tmp28, (4, 1), (4, 0, 2, 3)) * -1
    del tmp28
    tmp24 = einsum(r1, (0, 1), ints.tmp33, (2, 3, 4, 1), (2, 0, 3, 4))
    del ints.tmp33
    tmp26 = einsum(tmp25, (0, 1), r2, (2, 0, 3, 4), (1, 2, 3, 4)) * -1
    del tmp25
    tmp33 = einsum(ints.tmp23, (0, 1, 2, 3), r1, (0, 4), (1, 2, 3, 4))
    del ints.tmp23
    tmp35 = einsum(t1, (0, 1), tmp34, (0, 2, 3, 4), (2, 3, 4, 1))
    del tmp34
    tmp37 = einsum(tmp36, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    del tmp36
    tmp19 = einsum(f.vv, (0, 1), r2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp18 = einsum(v.ooov, (0, 1, 2, 3), r1, (2, 4), (0, 1, 4, 3))
    tmp31 = einsum(r1, (0, 1), v.ovvv, (0, 2, 3, 1), (2, 3))
    tmp1 = np.copy(ints.tmp7)
    del ints.tmp7
    tmp1 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp2 = np.copy(f.ov)
    tmp2 += ints.tmp6
    del ints.tmp6
    tmp17 = np.copy(np.transpose(tmp14, (0, 1, 3, 2))) * -1
    del tmp14
    tmp17 += np.transpose(tmp16, (0, 1, 3, 2))
    del tmp16
    tmp13 = np.copy(tmp9)
    del tmp9
    tmp13 += tmp10
    del tmp10
    tmp13 += tmp11
    del tmp11
    tmp13 += tmp12 * -1
    del tmp12
    tmp40 = np.copy(ints.tmp17)
    del ints.tmp17
    tmp40 += ints.tmp26
    del ints.tmp26
    tmp40 += ints.tmp30 * 0.5
    del ints.tmp30
    tmp40 += ints.tmp36 * 0.5
    del ints.tmp36
    tmp40 += f.ov * -1
    tmp40 += ints.tmp18 * -1
    del ints.tmp18
    tmp40 += ints.tmp22 * -1
    del ints.tmp22
    tmp23 = np.copy(tmp21) * 0.5
    del tmp21
    tmp23 += np.transpose(tmp22, (1, 0, 2, 3)) * -0.5
    del tmp22
    tmp30 = np.copy(np.transpose(tmp24, (0, 1, 3, 2))) * -0.5
    del tmp24
    tmp30 += np.transpose(tmp26, (0, 1, 3, 2))
    del tmp26
    tmp30 += np.transpose(tmp29, (0, 1, 3, 2))
    del tmp29
    tmp38 = np.copy(tmp33)
    del tmp33
    tmp38 += tmp35
    del tmp35
    tmp38 += tmp37 * 0.5
    del tmp37
    tmp20 = np.copy(np.transpose(tmp18, (1, 0, 2, 3))) * -1
    del tmp18
    tmp20 += np.transpose(tmp19, (1, 0, 2, 3)) * -1
    del tmp19
    tmp32 = einsum(t2, (0, 1, 2, 3), tmp31, (4, 3), (0, 1, 2, 4)) * -1
    del tmp31
    tmp39 = np.copy(ints.tmp44) * -0.5
    del ints.tmp44
    tmp39 += v.oooo * -1
    tmp8 = einsum(v.oovv, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp3 = np.copy(ints.tmp5)
    del ints.tmp5
    tmp3 += np.transpose(v.ovov, (0, 2, 3, 1)) * -1
    tmp5 = np.copy(f.oo)
    tmp5 += ints.tmp0
    del ints.tmp0
    tmp5 += np.transpose(ints.tmp12, (1, 0))
    del ints.tmp12
    tmp5 += ints.tmp2
    del ints.tmp2
    tmp5 += np.transpose(ints.tmp9, (1, 0)) * 0.5
    del ints.tmp9
    tmp4 = np.copy(np.transpose(ints.tmp10, (1, 0))) * 0.5
    del ints.tmp10
    tmp4 += np.transpose(ints.tmp4, (1, 0))
    del ints.tmp4
    tmp4 += f.vv * -1
    tmp7 = np.copy(np.transpose(tmp6, (1, 0))) * 0.5
    del tmp6
    tmp7 += einsum(tmp1, (0, 1, 2, 3), r1, (1, 3), (2, 0))
    tmp7 += einsum(r1, (0, 1), tmp2, (2, 1), (2, 0))
    tmp0 = einsum(r1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    r2new = einsum(r2, (0, 1, 2, 3), v.vvvv, (4, 5, 2, 3), (0, 1, 4, 5)) * 0.5
    r2new += einsum(t2, (0, 1, 2, 3), tmp8, (4, 5, 1, 0), (5, 4, 2, 3)) * 0.25
    del tmp8
    r2new += tmp13 * -1
    r2new += np.transpose(tmp13, (0, 1, 3, 2))
    r2new += np.transpose(tmp13, (1, 0, 2, 3))
    r2new += np.transpose(tmp13, (1, 0, 3, 2)) * -1
    del tmp13
    r2new += tmp17 * -1
    r2new += np.transpose(tmp17, (1, 0, 2, 3))
    del tmp17
    r2new += tmp20 * -1
    r2new += np.transpose(tmp20, (0, 1, 3, 2))
    del tmp20
    r2new += np.transpose(tmp23, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp23, (1, 0, 3, 2))
    del tmp23
    r2new += tmp30
    r2new += np.transpose(tmp30, (1, 0, 2, 3)) * -1
    del tmp30
    r2new += tmp32
    r2new += np.transpose(tmp32, (0, 1, 3, 2)) * -1
    del tmp32
    r2new += tmp38 * -1
    r2new += np.transpose(tmp38, (0, 1, 3, 2))
    del tmp38
    r2new += einsum(tmp39, (0, 1, 2, 3), r2, (2, 3, 4, 5), (0, 1, 4, 5)) * -0.5
    del tmp39
    r2new += einsum(r1, (0, 1), tmp40, (2, 3), (2, 0, 3, 1)) * -1
    r2new += einsum(tmp40, (0, 1), r1, (2, 3), (2, 0, 3, 1)) * -1
    r2new += einsum(r1, (0, 1), tmp40, (2, 3), (0, 2, 3, 1))
    r2new += einsum(r1, (0, 1), tmp40, (2, 3), (2, 0, 1, 3))
    del tmp40
    r1new = einsum(t2, (0, 1, 2, 3), tmp0, (1, 3), (0, 2))
    del tmp0
    r1new += einsum(r2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4)) * -0.5
    r1new += einsum(r2, (0, 1, 2, 3), tmp1, (4, 1, 0, 3), (4, 2)) * -0.5
    del tmp1
    r1new += einsum(tmp2, (0, 1), r2, (2, 0, 3, 1), (2, 3))
    del tmp2
    r1new += einsum(tmp3, (0, 1, 2, 3), r1, (1, 3), (0, 2))
    del tmp3
    r1new += einsum(r1, (0, 1), tmp4, (1, 2), (0, 2)) * -1
    del tmp4
    r1new += einsum(tmp5, (0, 1), r1, (0, 2), (1, 2)) * -1
    del tmp5
    r1new += einsum(t1, (0, 1), tmp7, (0, 2), (2, 1)) * -1
    del tmp7

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_lmatvec_ip_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:42.593963.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp0 : array
    tmp1 : array
    tmp10 : array
    tmp11 : array
    tmp12 : array
    tmp13 : array
    tmp14 : array
    tmp16 : array
    tmp17 : array
    tmp19 : array
    tmp2 : array
    tmp20 : array
    tmp21 : array
    tmp22 : array
    tmp23 : array
    tmp24 : array
    tmp25 : array
    tmp27 : array
    tmp29 : array
    tmp3 : array
    tmp31 : array
    tmp32 : array
    tmp34 : array
    tmp4 : array
    tmp40 : array
    tmp41 : array
    tmp5 : array
    tmp6 : array
    tmp7 : array
    tmp8 : array
    tmp9 : array
    """

    tmp18 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp15 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp33 = einsum(tmp18, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp24 = einsum(tmp15, (0, 1), t1, (2, 1), (2, 0))
    tmp30 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp28 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp26 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp6 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp22 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp10 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp0 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp41 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp40 = einsum(v.oovv, (0, 1, 2, 3), t2, (0, 1, 4, 3), (4, 2))
    tmp34 = einsum(t1, (0, 1), tmp33, (2, 3, 4, 0), (2, 3, 4, 1))
    del tmp33
    tmp32 = einsum(t1, (0, 1), tmp24, (2, 0), (2, 1))
    tmp31 = einsum(tmp30, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    del tmp30
    tmp29 = einsum(tmp28, (0, 1), t1, (2, 1), (2, 0))
    del tmp28
    tmp27 = einsum(t1, (0, 1), tmp26, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp26
    tmp25 = einsum(t1, (0, 1), tmp6, (0, 2), (2, 1))
    tmp23 = einsum(t1, (0, 1), tmp22, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp21 = einsum(t1, (0, 1), tmp10, (2, 0), (2, 1))
    tmp20 = einsum(tmp18, (0, 1, 2, 3), t2, (4, 2, 5, 3), (0, 4, 1, 5)) * -1
    tmp19 = einsum(t2, (0, 1, 2, 3), tmp18, (4, 1, 0, 3), (4, 2))
    del tmp18
    tmp17 = einsum(t2, (0, 1, 2, 3), tmp15, (4, 3), (0, 1, 4, 2)) * -1
    tmp16 = einsum(tmp15, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    del tmp15
    tmp14 = einsum(t2, (0, 1, 2, 3), v.ovvv, (4, 5, 2, 3), (0, 1, 4, 5))
    tmp13 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp12 = einsum(v.ooov, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 2, 5))
    tmp11 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp9 = einsum(t1, (0, 1), v.ovov, (2, 3, 4, 1), (0, 2, 4, 3))
    tmp8 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp7 = einsum(t1, (0, 1), v.oooo, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp5 = einsum(t1, (0, 1), tmp0, (0, 2), (2, 1))
    tmp4 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp3 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp2 = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    tmp1 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))

    return {f"tmp0": tmp0, f"tmp1": tmp1, f"tmp10": tmp10, f"tmp11": tmp11, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp14": tmp14, f"tmp16": tmp16, f"tmp17": tmp17, f"tmp19": tmp19, f"tmp2": tmp2, f"tmp20": tmp20, f"tmp21": tmp21, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp24": tmp24, f"tmp25": tmp25, f"tmp27": tmp27, f"tmp29": tmp29, f"tmp3": tmp3, f"tmp31": tmp31, f"tmp32": tmp32, f"tmp34": tmp34, f"tmp4": tmp4, f"tmp40": tmp40, f"tmp41": tmp41, f"tmp5": tmp5, f"tmp6": tmp6, f"tmp7": tmp7, f"tmp8": tmp8, f"tmp9": tmp9}

def hbar_lmatvec_ip(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:42.611286.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp5 = einsum(ints.tmp41, (0, 1, 2, 3), r2, (4, 0, 2), (1, 4, 3))
    del ints.tmp41
    tmp6 = einsum(v.ovov, (0, 1, 2, 3), r2, (4, 2, 1), (4, 0, 3))
    tmp4 = einsum(ints.tmp10, (0, 1), r2, (2, 0, 3), (1, 2, 3))
    tmp8 = np.copy(f.oo)
    tmp8 += np.transpose(ints.tmp0, (1, 0))
    tmp3 = einsum(r2, (0, 1, 2), t2, (0, 1, 3, 2), (3,))
    tmp7 = einsum(r1, (0,), f.ov, (1, 2), (1, 0, 2))
    tmp7 += tmp4 * -0.5
    del tmp4
    tmp7 += tmp5
    del tmp5
    tmp7 += tmp6
    del tmp6
    tmp11 = np.copy(ints.tmp40) * 0.5
    del ints.tmp40
    tmp11 += f.vv * -1
    tmp11 += einsum(f.ov, (0, 1), t1, (0, 2), (2, 1))
    tmp10 = np.copy(ints.tmp22) * -0.5
    del ints.tmp22
    tmp10 += v.oooo * -1
    tmp9 = einsum(tmp8, (0, 1), r2, (2, 0, 3), (1, 2, 3)) * -1
    del tmp8
    tmp1 = np.copy(ints.tmp11)
    del ints.tmp11
    tmp1 += ints.tmp13
    del ints.tmp13
    tmp1 += ints.tmp19
    del ints.tmp19
    tmp1 += ints.tmp1 * 2
    del ints.tmp1
    tmp1 += ints.tmp21
    del ints.tmp21
    tmp1 += ints.tmp25 * 2
    del ints.tmp25
    tmp1 += ints.tmp29 * 2
    del ints.tmp29
    tmp1 += ints.tmp32 * 2
    del ints.tmp32
    tmp1 += ints.tmp5 * 2
    del ints.tmp5
    tmp1 += ints.tmp8 * 2
    del ints.tmp8
    tmp1 += f.ov * -2
    tmp1 += ints.tmp16 * -2
    del ints.tmp16
    tmp1 += ints.tmp2 * -2
    del ints.tmp2
    tmp1 += ints.tmp3 * -2
    del ints.tmp3
    tmp0 = np.copy(ints.tmp12)
    del ints.tmp12
    tmp0 += np.transpose(ints.tmp23, (0, 2, 1, 3)) * 0.25
    del ints.tmp23
    tmp0 += np.transpose(ints.tmp34, (0, 2, 1, 3)) * 0.5
    del ints.tmp34
    tmp0 += np.transpose(ints.tmp4, (1, 0, 2, 3)) * 0.5
    del ints.tmp4
    tmp0 += np.transpose(ints.tmp7, (0, 2, 1, 3)) * 0.5
    del ints.tmp7
    tmp0 += ints.tmp9
    del ints.tmp9
    tmp0 += np.transpose(ints.tmp14, (0, 2, 1, 3)) * -0.25
    del ints.tmp14
    tmp0 += np.transpose(ints.tmp17, (0, 2, 1, 3)) * -0.5
    del ints.tmp17
    tmp0 += np.transpose(ints.tmp20, (0, 2, 1, 3)) * -1
    del ints.tmp20
    tmp0 += ints.tmp27 * -1
    del ints.tmp27
    tmp0 += np.transpose(ints.tmp31, (0, 2, 1, 3)) * -0.5
    del ints.tmp31
    tmp0 += np.transpose(v.ooov, (0, 2, 1, 3)) * -0.5
    tmp2 = np.copy(f.oo) * 2
    tmp2 += np.transpose(ints.tmp0, (1, 0)) * 2
    del ints.tmp0
    tmp2 += ints.tmp10
    del ints.tmp10
    tmp2 += ints.tmp24 * 2
    del ints.tmp24
    tmp2 += np.transpose(ints.tmp6, (1, 0)) * 2
    del ints.tmp6
    r2new = einsum(v.oovv, (0, 1, 2, 3), tmp3, (3,), (0, 1, 2)) * 0.5
    del tmp3
    r2new += einsum(r1, (0,), v.ooov, (1, 2, 0, 3), (1, 2, 3)) * -1
    r2new += tmp7 * -1
    r2new += np.transpose(tmp7, (1, 0, 2))
    del tmp7
    r2new += tmp9 * -1
    r2new += np.transpose(tmp9, (1, 0, 2))
    del tmp9
    r2new += einsum(r2, (0, 1, 2), tmp10, (1, 0, 3, 4), (3, 4, 2)) * 0.5
    del tmp10
    r2new += einsum(r2, (0, 1, 2), tmp11, (2, 3), (0, 1, 3)) * -1
    del tmp11
    r1new = einsum(tmp0, (0, 1, 2, 3), r2, (0, 2, 3), (1,))
    del tmp0
    r1new += einsum(r2, (0, 1, 2), tmp1, (1, 2), (0,)) * -0.5
    del tmp1
    r1new += einsum(r1, (0,), tmp2, (0, 1), (1,)) * -0.5
    del tmp2

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_lmatvec_ea_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:48.225403.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp1 : array
    tmp10 : array
    tmp11 : array
    tmp12 : array
    tmp13 : array
    tmp14 : array
    tmp15 : array
    tmp16 : array
    tmp17 : array
    tmp18 : array
    tmp19 : array
    tmp2 : array
    tmp20 : array
    tmp21 : array
    tmp22 : array
    tmp23 : array
    tmp25 : array
    tmp27 : array
    tmp28 : array
    tmp3 : array
    tmp30 : array
    tmp5 : array
    tmp6 : array
    tmp7 : array
    tmp8 : array
    """

    tmp16 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp29 = einsum(tmp16, (0, 1), t1, (2, 1), (2, 0))
    tmp7 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp24 = einsum(v.ooov, (0, 1, 2, 3), t1, (1, 3), (0, 2))
    tmp21 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp18 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp5 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp30 = einsum(t1, (0, 1), tmp29, (2, 0), (2, 1))
    del tmp29
    tmp28 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp27 = einsum(tmp7, (0, 1), t1, (2, 1), (2, 0))
    tmp25 = einsum(tmp24, (0, 1), t1, (0, 2), (1, 2))
    del tmp24
    tmp23 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp22 = einsum(t1, (0, 1), tmp21, (2, 0), (2, 1))
    tmp20 = einsum(t2, (0, 1, 2, 3), tmp18, (4, 1, 0, 5), (4, 2, 3, 5)) * -1
    tmp19 = einsum(t2, (0, 1, 2, 3), tmp18, (4, 1, 0, 3), (4, 2))
    tmp17 = einsum(t2, (0, 1, 2, 3), tmp16, (1, 3), (0, 2))
    tmp15 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 3), (0, 2, 4, 5))
    tmp14 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp13 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 5, 0, 1), (4, 2, 3, 5))
    tmp12 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp11 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 4, 3), (2, 4))
    tmp10 = einsum(t1, (0, 1), v.vvvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp8 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp6 = einsum(t1, (0, 1), tmp5, (0, 2), (2, 1))
    tmp3 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp2 = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    tmp1 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))

    return {f"tmp1": tmp1, f"tmp10": tmp10, f"tmp11": tmp11, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp14": tmp14, f"tmp15": tmp15, f"tmp16": tmp16, f"tmp17": tmp17, f"tmp18": tmp18, f"tmp19": tmp19, f"tmp2": tmp2, f"tmp20": tmp20, f"tmp21": tmp21, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp25": tmp25, f"tmp27": tmp27, f"tmp28": tmp28, f"tmp3": tmp3, f"tmp30": tmp30, f"tmp5": tmp5, f"tmp6": tmp6, f"tmp7": tmp7, f"tmp8": tmp8}

def hbar_lmatvec_ea(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:48.238722.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp13 = einsum(t1, (0, 1), f.ov, (0, 2), (2, 1))
    tmp14 = np.copy(ints.tmp11)
    tmp14 += f.vv * -2
    tmp14 += np.transpose(tmp13, (1, 0)) * 2
    del tmp13
    tmp12 = einsum(v.ovov, (0, 1, 2, 3), r2, (4, 1, 2), (0, 4, 3))
    tmp11 = einsum(r2, (0, 1, 2), ints.tmp23, (2, 3, 1, 4), (3, 4, 0))
    tmp15 = einsum(r2, (0, 1, 2), tmp14, (1, 3), (2, 3, 0)) * -0.5
    del tmp14
    tmp1 = einsum(t1, (0, 1), r2, (2, 1, 3), (3, 0, 2))
    tmp7 = einsum(r2, (0, 1, 2), t2, (3, 2, 0, 1), (3,))
    tmp17 = np.copy(f.oo)
    tmp17 += ints.tmp21 * 0.5
    del ints.tmp21
    tmp17 += np.transpose(ints.tmp5, (1, 0))
    del ints.tmp5
    tmp16 = einsum(r1, (0,), f.ov, (1, 2), (1, 2, 0))
    tmp16 += tmp11
    del tmp11
    tmp16 += tmp12
    del tmp12
    tmp16 += tmp15
    del tmp15
    tmp10 = einsum(r2, (0, 1, 2), t2, (3, 4, 0, 1), (2, 3, 4))
    tmp3 = einsum(tmp1, (0, 1, 2), t1, (3, 2), (0, 1, 3)) * -1
    tmp5 = np.copy(ints.tmp12) * 0.5
    del ints.tmp12
    tmp5 += ints.tmp14 * 0.5
    del ints.tmp14
    tmp5 += ints.tmp19 * 0.5
    del ints.tmp19
    tmp5 += ints.tmp1
    del ints.tmp1
    tmp5 += ints.tmp22 * 0.5
    del ints.tmp22
    tmp5 += ints.tmp25
    del ints.tmp25
    tmp5 += ints.tmp27
    del ints.tmp27
    tmp5 += ints.tmp30
    del ints.tmp30
    tmp5 += ints.tmp6
    del ints.tmp6
    tmp5 += ints.tmp8
    del ints.tmp8
    tmp5 += f.ov * -1
    tmp5 += ints.tmp17 * -1
    del ints.tmp17
    tmp5 += ints.tmp2 * -1
    del ints.tmp2
    tmp5 += ints.tmp3 * -1
    del ints.tmp3
    tmp6 = np.copy(ints.tmp11) * 0.5
    del ints.tmp11
    tmp6 += ints.tmp7
    del ints.tmp7
    tmp6 += f.vv * -1
    tmp4 = np.copy(ints.tmp18)
    del ints.tmp18
    tmp4 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp0 = np.copy(ints.tmp10) * 0.5
    del ints.tmp10
    tmp0 += ints.tmp15
    del ints.tmp15
    tmp0 += ints.tmp20 * 0.25
    del ints.tmp20
    tmp0 += ints.tmp13 * -0.25
    del ints.tmp13
    tmp0 += np.transpose(v.ovvv, (0, 2, 3, 1)) * -0.5
    tmp9 = np.copy(f.ov)
    tmp9 += ints.tmp16
    del ints.tmp16
    tmp8 = einsum(r1, (0,), t1, (1, 0), (1,))
    tmp8 += tmp7 * 0.5
    tmp2 = np.copy(ints.tmp23)
    del ints.tmp23
    tmp2 += ints.tmp28
    del ints.tmp28
    tmp2 += np.transpose(v.ovov, (0, 2, 3, 1)) * -1
    r2new = einsum(r1, (0,), v.ovvv, (1, 0, 2, 3), (2, 3, 1)) * -1
    r2new += einsum(r2, (0, 1, 2), v.vvvv, (3, 4, 0, 1), (3, 4, 2)) * 0.5
    r2new += einsum(v.oovv, (0, 1, 2, 3), tmp10, (4, 1, 0), (2, 3, 4)) * -0.25
    del tmp10
    r2new += einsum(tmp7, (0,), v.oovv, (1, 0, 2, 3), (2, 3, 1)) * 0.5
    del tmp7
    r2new += np.transpose(tmp16, (1, 2, 0)) * -1
    r2new += np.transpose(tmp16, (2, 1, 0))
    del tmp16
    r2new += einsum(r2, (0, 1, 2), tmp17, (2, 3), (0, 1, 3)) * -1
    del tmp17
    r1new = einsum(r2, (0, 1, 2), tmp0, (2, 0, 1, 3), (3,))
    del tmp0
    r1new += einsum(tmp2, (0, 1, 2, 3), tmp1, (0, 1, 2), (3,))
    del tmp1, tmp2
    r1new += einsum(tmp3, (0, 1, 2), tmp4, (0, 2, 1, 3), (3,)) * -0.5
    del tmp3, tmp4
    r1new += einsum(r2, (0, 1, 2), tmp5, (2, 1), (0,)) * -1
    del tmp5
    r1new += einsum(r1, (0,), tmp6, (0, 1), (1,)) * -1
    del tmp6
    r1new += einsum(tmp8, (0,), tmp9, (0, 1), (1,)) * -1
    del tmp8, tmp9

    return {f"r1new": r1new, f"r2new": r2new}

def hbar_lmatvec_ee_intermediates(f=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:57.920908.

    Parameters
    ----------
    f : array
        Fock matrix.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    tmp0 : array
    tmp10 : array
    tmp11 : array
    tmp12 : array
    tmp13 : array
    tmp15 : array
    tmp16 : array
    tmp17 : array
    tmp19 : array
    tmp2 : array
    tmp20 : array
    tmp21 : array
    tmp22 : array
    tmp23 : array
    tmp24 : array
    tmp26 : array
    tmp27 : array
    tmp28 : array
    tmp29 : array
    tmp3 : array
    tmp30 : array
    tmp31 : array
    tmp32 : array
    tmp33 : array
    tmp34 : array
    tmp35 : array
    tmp36 : array
    tmp38 : array
    tmp39 : array
    tmp4 : array
    tmp41 : array
    tmp43 : array
    tmp44 : array
    tmp45 : array
    tmp47 : array
    tmp5 : array
    tmp7 : array
    tmp8 : array
    tmp9 : array
    """

    tmp29 = einsum(v.oovv, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp26 = einsum(t1, (0, 1), v.oovv, (2, 0, 3, 1), (2, 3))
    tmp46 = einsum(tmp29, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp38 = einsum(tmp26, (0, 1), t1, (2, 1), (2, 0))
    tmp10 = einsum(t1, (0, 1), v.ovvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp9 = einsum(v.ovvv, (0, 1, 2, 3), t1, (0, 3), (1, 2))
    tmp40 = einsum(v.ooov, (0, 1, 2, 3), t1, (4, 3), (4, 0, 1, 2))
    tmp8 = einsum(t1, (0, 1), v.ooov, (2, 0, 3, 1), (2, 3))
    tmp34 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp16 = einsum(t2, (0, 1, 2, 3), v.oovv, (4, 1, 2, 3), (0, 4))
    tmp0 = einsum(t1, (0, 1), f.ov, (2, 1), (2, 0))
    tmp47 = einsum(tmp46, (0, 1, 2, 3), t1, (3, 4), (0, 1, 2, 4))
    del tmp46
    tmp45 = einsum(t1, (0, 1), tmp38, (2, 0), (2, 1))
    tmp44 = einsum(t1, (0, 1), tmp10, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp43 = einsum(t1, (0, 1), tmp9, (2, 1), (0, 2))
    tmp41 = einsum(t1, (0, 1), tmp40, (2, 3, 0, 4), (2, 3, 4, 1))
    del tmp40
    tmp39 = einsum(t1, (0, 1), tmp8, (0, 2), (2, 1))
    tmp36 = einsum(v.oovv, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 5, 2))
    tmp35 = einsum(tmp34, (0, 1, 2, 3), t1, (3, 4), (0, 1, 2, 4))
    tmp33 = einsum(t1, (0, 1), tmp16, (2, 0), (2, 1))
    tmp32 = einsum(t2, (0, 1, 2, 3), tmp29, (4, 1, 0, 5), (4, 2, 3, 5)) * -1
    tmp31 = einsum(tmp29, (0, 1, 2, 3), t2, (4, 2, 5, 3), (0, 4, 1, 5)) * -1
    tmp30 = einsum(t2, (0, 1, 2, 3), tmp29, (4, 1, 0, 3), (4, 2))
    tmp28 = einsum(tmp26, (0, 1), t2, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    tmp27 = einsum(t2, (0, 1, 2, 3), tmp26, (1, 3), (0, 2))
    tmp24 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 5, 3), (0, 2, 4, 5))
    tmp23 = einsum(t2, (0, 1, 2, 3), v.ovvv, (4, 5, 2, 3), (0, 1, 4, 5))
    tmp22 = einsum(t2, (0, 1, 2, 3), v.ovvv, (1, 4, 2, 3), (0, 4))
    tmp21 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 5, 0, 1), (4, 2, 3, 5))
    tmp20 = einsum(v.ooov, (0, 1, 2, 3), t2, (4, 1, 5, 3), (4, 0, 2, 5))
    tmp19 = einsum(t2, (0, 1, 2, 3), v.ovoo, (4, 3, 0, 1), (4, 2))
    tmp17 = einsum(t2, (0, 1, 2, 3), v.oovv, (0, 1, 4, 3), (2, 4))
    tmp15 = einsum(t1, (0, 1), v.vvvv, (2, 3, 4, 1), (0, 2, 3, 4))
    tmp13 = einsum(t1, (0, 1), v.ovov, (2, 3, 4, 1), (0, 2, 4, 3))
    tmp12 = einsum(t1, (0, 1), v.ovov, (2, 1, 0, 3), (2, 3))
    tmp11 = einsum(t1, (0, 1), v.oooo, (2, 3, 4, 0), (2, 3, 4, 1))
    tmp7 = einsum(t1, (0, 1), tmp0, (0, 2), (2, 1))
    tmp5 = einsum(t2, (0, 1, 2, 3), f.ov, (4, 3), (4, 0, 1, 2))
    tmp4 = einsum(f.ov, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp3 = einsum(f.vv, (0, 1), t1, (2, 1), (2, 0))
    tmp2 = einsum(t1, (0, 1), f.oo, (2, 0), (2, 1))

    return {f"tmp0": tmp0, f"tmp10": tmp10, f"tmp11": tmp11, f"tmp12": tmp12, f"tmp13": tmp13, f"tmp15": tmp15, f"tmp16": tmp16, f"tmp17": tmp17, f"tmp19": tmp19, f"tmp2": tmp2, f"tmp20": tmp20, f"tmp21": tmp21, f"tmp22": tmp22, f"tmp23": tmp23, f"tmp24": tmp24, f"tmp26": tmp26, f"tmp27": tmp27, f"tmp28": tmp28, f"tmp29": tmp29, f"tmp3": tmp3, f"tmp30": tmp30, f"tmp31": tmp31, f"tmp32": tmp32, f"tmp33": tmp33, f"tmp34": tmp34, f"tmp35": tmp35, f"tmp36": tmp36, f"tmp38": tmp38, f"tmp39": tmp39, f"tmp4": tmp4, f"tmp41": tmp41, f"tmp43": tmp43, f"tmp44": tmp44, f"tmp45": tmp45, f"tmp47": tmp47, f"tmp5": tmp5, f"tmp7": tmp7, f"tmp8": tmp8, f"tmp9": tmp9}

def hbar_lmatvec_ee(f=None, r1=None, r2=None, t1=None, t2=None, v=None, **kwargs):
    """
    Code generated by `albert` 0.0.0 on 2024-08-17T18:50:57.942422.

    Parameters
    ----------
    f : array
        Fock matrix.
    r1 : array
        R1 amplitudes.
    r2 : array
        R2 amplitudes.
    t1 : array
        T1 amplitudes.
    t2 : array
        T2 amplitudes.
    v : array
        Electron repulsion integrals.

    Returns
    -------
    r1new : array
        Updated R1 residuals.
    r2new : array
        Updated R2 residuals.
    """

    ints = kwargs["ints"]
    tmp0 = einsum(r2, (0, 1, 2, 3), t2, (0, 1, 4, 3), (2, 4))
    tmp4 = einsum(r2, (0, 1, 2, 3), t1, (4, 3), (0, 1, 4, 2))
    tmp10 = einsum(t2, (0, 1, 2, 3), r2, (4, 1, 2, 3), (4, 0))
    tmp26 = np.copy(f.oo)
    tmp26 += np.transpose(ints.tmp0, (1, 0))
    tmp26 += ints.tmp16 * 0.5
    tmp30 = einsum(tmp0, (0, 1), v.oovv, (2, 3, 4, 1), (2, 3, 0, 4)) * -1
    tmp29 = einsum(tmp4, (0, 1, 2, 3), f.ov, (2, 4), (0, 1, 4, 3))
    tmp19 = einsum(f.vv, (0, 1), r2, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp18 = einsum(v.ooov, (0, 1, 2, 3), r1, (2, 4), (0, 1, 4, 3))
    tmp25 = einsum(tmp10, (0, 1), v.oovv, (2, 1, 3, 4), (0, 2, 3, 4)) * -1
    tmp27 = einsum(tmp26, (0, 1), r2, (2, 0, 3, 4), (1, 2, 3, 4)) * -1
    del tmp26
    tmp23 = einsum(v.ovov, (0, 1, 2, 3), r2, (4, 2, 5, 1), (4, 0, 5, 3))
    tmp22 = einsum(r2, (0, 1, 2, 3), ints.tmp36, (1, 4, 3, 5), (4, 0, 5, 2))
    tmp9 = einsum(t1, (0, 1), r1, (2, 1), (2, 0))
    tmp17 = einsum(v.ovvv, (0, 1, 2, 3), r1, (4, 1), (4, 0, 2, 3))
    tmp16 = einsum(t2, (0, 1, 2, 3), r2, (4, 5, 2, 3), (4, 5, 0, 1))
    tmp31 = np.copy(tmp29)
    del tmp29
    tmp31 += tmp30 * -0.5
    del tmp30
    tmp21 = einsum(ints.tmp17, (0, 1), r2, (2, 3, 4, 0), (2, 3, 1, 4))
    tmp20 = np.copy(np.transpose(tmp18, (1, 0, 2, 3))) * -1
    del tmp18
    tmp20 += np.transpose(tmp19, (1, 0, 2, 3)) * -1
    del tmp19
    tmp32 = np.copy(ints.tmp34) * -0.5
    del ints.tmp34
    tmp32 += v.oooo * -1
    tmp28 = np.copy(np.transpose(tmp25, (0, 1, 3, 2))) * 0.5
    del tmp25
    tmp28 += np.transpose(tmp27, (0, 1, 3, 2))
    del tmp27
    tmp24 = einsum(r1, (0, 1), f.ov, (2, 3), (2, 0, 3, 1))
    tmp24 += tmp22
    del tmp22
    tmp24 += tmp23 * -1
    del tmp23
    tmp3 = np.copy(ints.tmp10)
    tmp3 += ints.tmp36
    del ints.tmp36
    tmp3 += np.transpose(v.ovov, (0, 2, 3, 1)) * -1
    tmp13 = np.copy(ints.tmp17) * 0.5
    del ints.tmp17
    tmp13 += ints.tmp9
    del ints.tmp9
    tmp13 += f.vv * -1
    tmp5 = np.copy(ints.tmp29)
    del ints.tmp29
    tmp5 += np.transpose(v.ovoo, (0, 2, 3, 1)) * -1
    tmp7 = np.copy(ints.tmp12) * 2
    del ints.tmp12
    tmp7 += ints.tmp19
    del ints.tmp19
    tmp7 += ints.tmp22
    del ints.tmp22
    tmp7 += ints.tmp2 * 2
    del ints.tmp2
    tmp7 += ints.tmp30
    del ints.tmp30
    tmp7 += ints.tmp33
    del ints.tmp33
    tmp7 += ints.tmp39 * 2
    del ints.tmp39
    tmp7 += ints.tmp43 * 2
    del ints.tmp43
    tmp7 += ints.tmp45 * 2
    del ints.tmp45
    tmp7 += ints.tmp7 * 2
    del ints.tmp7
    tmp7 += f.ov * -2
    tmp7 += ints.tmp27 * -2
    del ints.tmp27
    tmp7 += ints.tmp3 * -2
    del ints.tmp3
    tmp7 += ints.tmp4 * -2
    del ints.tmp4
    tmp6 = einsum(t1, (0, 1), tmp4, (2, 3, 4, 1), (2, 3, 0, 4))
    tmp15 = np.copy(f.ov)
    tmp15 += ints.tmp26
    del ints.tmp26
    tmp12 = np.copy(ints.tmp10)
    del ints.tmp10
    tmp12 += np.transpose(v.ovov, (0, 2, 3, 1)) * -1
    tmp1 = np.copy(ints.tmp15) * 0.5
    del ints.tmp15
    tmp1 += ints.tmp24
    del ints.tmp24
    tmp1 += ints.tmp32 * 0.25
    del ints.tmp32
    tmp1 += ints.tmp21 * -0.25
    del ints.tmp21
    tmp1 += np.transpose(v.ovvv, (0, 2, 3, 1)) * -0.5
    tmp14 = np.copy(f.oo)
    tmp14 += np.transpose(ints.tmp0, (1, 0))
    del ints.tmp0
    tmp14 += ints.tmp16 * 0.5
    del ints.tmp16
    tmp14 += ints.tmp38
    del ints.tmp38
    tmp14 += np.transpose(ints.tmp8, (1, 0))
    del ints.tmp8
    tmp11 = np.copy(tmp9)
    del tmp9
    tmp11 += tmp10 * 0.5
    del tmp10
    tmp8 = einsum(r1, (0, 1), t2, (2, 0, 3, 1), (2, 3))
    tmp8 += einsum(t2, (0, 1, 2, 3), tmp4, (1, 0, 4, 3), (4, 2)) * -0.5
    tmp2 = np.copy(ints.tmp11) * 0.5
    del ints.tmp11
    tmp2 += np.transpose(ints.tmp13, (0, 2, 1, 3))
    del ints.tmp13
    tmp2 += np.transpose(ints.tmp20, (0, 2, 1, 3))
    del ints.tmp20
    tmp2 += ints.tmp35 * 0.25
    del ints.tmp35
    tmp2 += ints.tmp47 * 0.5
    del ints.tmp47
    tmp2 += np.transpose(ints.tmp5, (1, 2, 0, 3)) * 0.5
    del ints.tmp5
    tmp2 += ints.tmp23 * -0.25
    del ints.tmp23
    tmp2 += ints.tmp28 * -0.5
    del ints.tmp28
    tmp2 += ints.tmp31 * -1
    del ints.tmp31
    tmp2 += np.transpose(ints.tmp41, (0, 2, 1, 3)) * -1
    del ints.tmp41
    tmp2 += ints.tmp44 * -0.5
    del ints.tmp44
    tmp2 += v.ooov * -0.5
    r2new = einsum(r2, (0, 1, 2, 3), v.vvvv, (4, 5, 2, 3), (0, 1, 4, 5)) * 0.5
    r2new += einsum(tmp16, (0, 1, 2, 3), v.oovv, (3, 2, 4, 5), (1, 0, 4, 5)) * 0.25
    del tmp16
    r2new += np.transpose(tmp17, (0, 1, 3, 2))
    r2new += np.transpose(tmp17, (1, 0, 3, 2)) * -1
    del tmp17
    r2new += tmp20 * -1
    r2new += np.transpose(tmp20, (0, 1, 3, 2))
    del tmp20
    r2new += np.transpose(tmp21, (1, 0, 2, 3)) * -0.5
    r2new += np.transpose(tmp21, (1, 0, 3, 2)) * 0.5
    del tmp21
    r2new += tmp24
    r2new += np.transpose(tmp24, (0, 1, 3, 2)) * -1
    r2new += np.transpose(tmp24, (1, 0, 2, 3)) * -1
    r2new += np.transpose(tmp24, (1, 0, 3, 2))
    del tmp24
    r2new += tmp28
    r2new += np.transpose(tmp28, (1, 0, 2, 3)) * -1
    del tmp28
    r2new += tmp31
    r2new += np.transpose(tmp31, (0, 1, 3, 2)) * -1
    del tmp31
    r2new += einsum(tmp32, (0, 1, 2, 3), r2, (0, 1, 4, 5), (2, 3, 4, 5)) * -0.5
    del tmp32
    r1new = einsum(v.ovvv, (0, 1, 2, 3), tmp0, (1, 3), (0, 2)) * 0.5
    del tmp0
    r1new += einsum(r2, (0, 1, 2, 3), tmp1, (1, 2, 3, 4), (0, 4))
    del tmp1
    r1new += einsum(tmp2, (0, 1, 2, 3), r2, (0, 1, 4, 3), (2, 4))
    del tmp2
    r1new += einsum(tmp3, (0, 1, 2, 3), tmp4, (0, 4, 1, 2), (4, 3)) * -1
    del tmp4, tmp3
    r1new += einsum(tmp5, (0, 1, 2, 3), tmp6, (4, 0, 2, 1), (4, 3)) * -0.5
    del tmp6
    r1new += einsum(tmp7, (0, 1), r2, (2, 0, 3, 1), (2, 3)) * -0.5
    del tmp7
    r1new += einsum(v.oovv, (0, 1, 2, 3), tmp8, (1, 3), (0, 2))
    del tmp8
    r1new += einsum(tmp5, (0, 1, 2, 3), tmp11, (0, 2), (1, 3)) * -1
    del tmp5
    r1new += einsum(r1, (0, 1), tmp12, (0, 2, 1, 3), (2, 3))
    del tmp12
    r1new += einsum(r1, (0, 1), tmp13, (1, 2), (0, 2)) * -1
    del tmp13
    r1new += einsum(tmp14, (0, 1), r1, (0, 2), (1, 2)) * -1
    del tmp14
    r1new += einsum(tmp11, (0, 1), tmp15, (1, 2), (0, 2)) * -1
    del tmp11, tmp15

    return {f"r1new": r1new, f"r2new": r2new}

